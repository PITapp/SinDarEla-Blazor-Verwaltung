{
  "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\SinDarElaVerwaltung.Client.csproj",
  "Configuration": {
    "ConfigurationName": "Default",
    "LanguageVersion": "6.0",
    "Extensions": []
  },
  "ProjectWorkspaceState": {
    "TagHelpers": [
      {
        "HashCode": -1771174662,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.AbmeldungComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AbmeldungComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.AbmeldungComponent"
        }
      },
      {
        "HashCode": -708266442,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.AbmeldungComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.AbmeldungComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.AbmeldungComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2127453447,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.AbrechnungComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AbrechnungComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.AbrechnungComponent"
        }
      },
      {
        "HashCode": 2067393905,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.AbrechnungComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.AbrechnungComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.AbrechnungComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1905009168,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.AnmeldungComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AnmeldungComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.AnmeldungComponent"
        }
      },
      {
        "HashCode": -895589886,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.AnmeldungComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.AnmeldungComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.AnmeldungComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -829821063,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.AnmeldungLadenComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AnmeldungLadenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.AnmeldungLadenComponent"
        }
      },
      {
        "HashCode": 504963889,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.AnmeldungLadenComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.AnmeldungLadenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.AnmeldungLadenComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1548414953,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.AuswertungenComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AuswertungenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.AuswertungenComponent"
        }
      },
      {
        "HashCode": -1370459649,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.AuswertungenComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.AuswertungenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.AuswertungenComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2100332480,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.BenutzerComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BenutzerComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.BenutzerComponent"
        }
      },
      {
        "HashCode": -846984975,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.BenutzerComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.BenutzerComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.BenutzerComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1408975143,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.BenutzerprofilComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "BenutzerprofilComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.BenutzerprofilComponent"
        }
      },
      {
        "HashCode": -129000850,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.BenutzerprofilComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.BenutzerprofilComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.BenutzerprofilComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -763535455,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.CopyOfMitarbeiterComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CopyOfMitarbeiterComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.CopyOfMitarbeiterComponent"
        }
      },
      {
        "HashCode": -1884028463,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.CopyOfMitarbeiterComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.CopyOfMitarbeiterComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.CopyOfMitarbeiterComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2116010797,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.CopyOfMitarbeiter1Component",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CopyOfMitarbeiter1Component"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.CopyOfMitarbeiter1Component"
        }
      },
      {
        "HashCode": 1741286772,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.CopyOfMitarbeiter1Component",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.CopyOfMitarbeiter1Component"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.CopyOfMitarbeiter1Component",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1282139372,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.CopyOfMitarbeiterListeComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CopyOfMitarbeiterListeComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.CopyOfMitarbeiterListeComponent"
        }
      },
      {
        "HashCode": 1404329345,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.CopyOfMitarbeiterListeComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.CopyOfMitarbeiterListeComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.CopyOfMitarbeiterListeComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -320306963,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.DashboardComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DashboardComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.DashboardComponent"
        }
      },
      {
        "HashCode": -97383691,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.DashboardComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.DashboardComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.DashboardComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2132012069,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.EinstellungenComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EinstellungenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.EinstellungenComponent"
        }
      },
      {
        "HashCode": -858471492,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.EinstellungenComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.EinstellungenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.EinstellungenComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1040283620,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.EinstellungenInfotexteBearbeitenComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EinstellungenInfotexteBearbeitenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InfotextID",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "InfotextID"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.EinstellungenInfotexteBearbeitenComponent"
        }
      },
      {
        "HashCode": -262751665,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.EinstellungenInfotexteBearbeitenComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.EinstellungenInfotexteBearbeitenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InfotextID",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "InfotextID"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.EinstellungenInfotexteBearbeitenComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1537761863,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.EinstellungenInfotexteEditorComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EinstellungenInfotexteEditorComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InfotextID",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "InfotextID"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.EinstellungenInfotexteEditorComponent"
        }
      },
      {
        "HashCode": 1683923476,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.EinstellungenInfotexteEditorComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.EinstellungenInfotexteEditorComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InfotextID",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "InfotextID"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.EinstellungenInfotexteEditorComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 228930317,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.EinstellungenInfotexteNeuComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EinstellungenInfotexteNeuComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.EinstellungenInfotexteNeuComponent"
        }
      },
      {
        "HashCode": 1190475704,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.EinstellungenInfotexteNeuComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.EinstellungenInfotexteNeuComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.EinstellungenInfotexteNeuComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -172919022,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.KalenderComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "KalenderComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.KalenderComponent"
        }
      },
      {
        "HashCode": 590521268,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.KalenderComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.KalenderComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.KalenderComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1003577197,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.KontakteComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "KontakteComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.KontakteComponent"
        }
      },
      {
        "HashCode": 2087597434,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.KontakteComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.KontakteComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.KontakteComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -487773140,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.KundenComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "KundenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.KundenComponent"
        }
      },
      {
        "HashCode": 1098159213,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.KundenComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.KundenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.KundenComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 330729781,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.ManagementComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ManagementComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.ManagementComponent"
        }
      },
      {
        "HashCode": -898297513,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.ManagementComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.ManagementComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.ManagementComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -834408476,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.MeldungFortschrittComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MeldungFortschrittComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "strMeldung",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "strMeldung"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.MeldungFortschrittComponent"
        }
      },
      {
        "HashCode": -1075386585,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.MeldungFortschrittComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.MeldungFortschrittComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "strMeldung",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "strMeldung"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.MeldungFortschrittComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -947050979,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.MeldungJaNeinComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MeldungJaNeinComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "strMeldung",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "strMeldung"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.MeldungJaNeinComponent"
        }
      },
      {
        "HashCode": -511737086,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.MeldungJaNeinComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.MeldungJaNeinComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "strMeldung",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "strMeldung"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.MeldungJaNeinComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -263702193,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.MeldungLoeschenComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MeldungLoeschenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "strMeldung",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "strMeldung"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.MeldungLoeschenComponent"
        }
      },
      {
        "HashCode": 1160231075,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.MeldungLoeschenComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.MeldungLoeschenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "strMeldung",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "strMeldung"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.MeldungLoeschenComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -593971697,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.MeldungOkComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MeldungOkComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "strMeldung",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "strMeldung"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.MeldungOkComponent"
        }
      },
      {
        "HashCode": 1345676963,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.MeldungOkComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.MeldungOkComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "strMeldung",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "strMeldung"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.MeldungOkComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -371215975,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.MitarbeiterComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MitarbeiterComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.MitarbeiterComponent"
        }
      },
      {
        "HashCode": -619284286,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.MitarbeiterComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.MitarbeiterComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.MitarbeiterComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1699867268,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.MitarbeiterListenComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MitarbeiterListenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.MitarbeiterListenComponent"
        }
      },
      {
        "HashCode": -345691128,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.MitarbeiterListenComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.MitarbeiterListenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.MitarbeiterListenComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1359691141,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.MitarbeiterNeuComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MitarbeiterNeuComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.MitarbeiterNeuComponent"
        }
      },
      {
        "HashCode": 556506755,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.MitarbeiterNeuComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.MitarbeiterNeuComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.MitarbeiterNeuComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2145354408,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.MitarbeiterSuchenComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MitarbeiterSuchenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.MitarbeiterSuchenComponent"
        }
      },
      {
        "HashCode": -1204953864,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.MitarbeiterSuchenComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.MitarbeiterSuchenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.MitarbeiterSuchenComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -16614887,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.ZzAutomatischErzeugenComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ZzAutomatischErzeugenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.ZzAutomatischErzeugenComponent"
        }
      },
      {
        "HashCode": 1866308356,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Pages.ZzAutomatischErzeugenComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Pages.ZzAutomatischErzeugenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Pages.ZzAutomatischErzeugenComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1487404506,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Layouts.DialogLayoutComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DialogLayoutComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.DialogLayoutComponent"
        }
      },
      {
        "HashCode": -331212301,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Layouts.DialogLayoutComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Layouts.DialogLayoutComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.DialogLayoutComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1225489225,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Layouts.DialogLayoutComponent.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "DialogLayoutComponent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.DialogLayoutComponent.Body",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1772204437,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Layouts.DialogLayoutComponent.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "SinDarElaVerwaltung.Layouts.DialogLayoutComponent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.DialogLayoutComponent.Body",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2091958043,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Layouts.LoginLayoutComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LoginLayoutComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.LoginLayoutComponent"
        }
      },
      {
        "HashCode": -1533896281,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Layouts.LoginLayoutComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Layouts.LoginLayoutComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.LoginLayoutComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1570255072,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Layouts.LoginLayoutComponent.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "LoginLayoutComponent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.LoginLayoutComponent.Body",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1391883066,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Layouts.LoginLayoutComponent.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "SinDarElaVerwaltung.Layouts.LoginLayoutComponent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.LoginLayoutComponent.Body",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1743689515,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Layouts.Main2LayoutComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Main2LayoutComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.Main2LayoutComponent"
        }
      },
      {
        "HashCode": 853687442,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Layouts.Main2LayoutComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Layouts.Main2LayoutComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.Main2LayoutComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1397177106,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Layouts.Main2LayoutComponent.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "Main2LayoutComponent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.Main2LayoutComponent.Body",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 637975807,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Layouts.Main2LayoutComponent.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "SinDarElaVerwaltung.Layouts.Main2LayoutComponent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.Main2LayoutComponent.Body",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -945502053,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Layouts.MainLayoutComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MainLayoutComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.MainLayoutComponent"
        }
      },
      {
        "HashCode": 620654248,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Layouts.MainLayoutComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Layouts.MainLayoutComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.MainLayoutComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -770454673,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Layouts.MainLayoutComponent.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "MainLayoutComponent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.MainLayoutComponent.Body",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1679167864,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Layouts.MainLayoutComponent.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "SinDarElaVerwaltung.Layouts.MainLayoutComponent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.MainLayoutComponent.Body",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1518250899,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Layouts.StandardLayoutComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "StandardLayoutComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.StandardLayoutComponent"
        }
      },
      {
        "HashCode": -642149286,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Layouts.StandardLayoutComponent",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Layouts.StandardLayoutComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.StandardLayoutComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1193159464,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Layouts.StandardLayoutComponent.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "StandardLayoutComponent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.StandardLayoutComponent.Body",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1929071605,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Layouts.StandardLayoutComponent.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "SinDarElaVerwaltung.Layouts.StandardLayoutComponent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Layouts.StandardLayoutComponent.Body",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1567465359,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.App",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "App"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.App"
        }
      },
      {
        "HashCode": 955320286,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.App",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.App"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.App",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2086025341,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Abmeldung",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Abmeldung"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Abmeldung"
        }
      },
      {
        "HashCode": -1170546569,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Abmeldung",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.Abmeldung"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Abmeldung",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2072525206,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Abrechnung",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Abrechnung"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Abrechnung"
        }
      },
      {
        "HashCode": -1330297900,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Abrechnung",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.Abrechnung"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Abrechnung",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1244280716,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Anmeldung",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Anmeldung"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Anmeldung"
        }
      },
      {
        "HashCode": -796049768,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Anmeldung",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.Anmeldung"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Anmeldung",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 146131474,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.AnmeldungLaden",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AnmeldungLaden"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.AnmeldungLaden"
        }
      },
      {
        "HashCode": -709213205,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.AnmeldungLaden",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.AnmeldungLaden"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.AnmeldungLaden",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -514170507,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Auswertungen",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Auswertungen"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Auswertungen"
        }
      },
      {
        "HashCode": -523665179,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Auswertungen",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.Auswertungen"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Auswertungen",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 881317674,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Benutzer",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Benutzer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Benutzer"
        }
      },
      {
        "HashCode": -1496075920,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Benutzer",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.Benutzer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Benutzer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1408976718,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Benutzerprofil",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Benutzerprofil"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Benutzerprofil"
        }
      },
      {
        "HashCode": 41496971,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Benutzerprofil",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.Benutzerprofil"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Benutzerprofil",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1375517665,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.CopyOfMitarbeiter",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CopyOfMitarbeiter"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.CopyOfMitarbeiter"
        }
      },
      {
        "HashCode": -1859873580,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.CopyOfMitarbeiter",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.CopyOfMitarbeiter"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.CopyOfMitarbeiter",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1255054470,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.CopyOfMitarbeiter1",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CopyOfMitarbeiter1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.CopyOfMitarbeiter1"
        }
      },
      {
        "HashCode": -487295414,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.CopyOfMitarbeiter1",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.CopyOfMitarbeiter1"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.CopyOfMitarbeiter1",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 277774068,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.CopyOfMitarbeiterListe",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CopyOfMitarbeiterListe"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.CopyOfMitarbeiterListe"
        }
      },
      {
        "HashCode": 1732718762,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.CopyOfMitarbeiterListe",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.CopyOfMitarbeiterListe"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.CopyOfMitarbeiterListe",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -448241016,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Dashboard",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Dashboard"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Dashboard"
        }
      },
      {
        "HashCode": -467283855,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Dashboard",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.Dashboard"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Dashboard",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1865732983,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Einstellungen",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Einstellungen"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Einstellungen"
        }
      },
      {
        "HashCode": 1193154523,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Einstellungen",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.Einstellungen"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Einstellungen",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 467348637,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.EinstellungenInfotexteBearbeiten",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EinstellungenInfotexteBearbeiten"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InfotextID",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "InfotextID"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.EinstellungenInfotexteBearbeiten"
        }
      },
      {
        "HashCode": -462277149,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.EinstellungenInfotexteBearbeiten",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.EinstellungenInfotexteBearbeiten"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InfotextID",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "InfotextID"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.EinstellungenInfotexteBearbeiten",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1406052969,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.EinstellungenInfotexteEditor",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EinstellungenInfotexteEditor"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InfotextID",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "InfotextID"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.EinstellungenInfotexteEditor"
        }
      },
      {
        "HashCode": -1274445701,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.EinstellungenInfotexteEditor",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.EinstellungenInfotexteEditor"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InfotextID",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "InfotextID"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.EinstellungenInfotexteEditor",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1121679935,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.EinstellungenInfotexteNeu",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EinstellungenInfotexteNeu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.EinstellungenInfotexteNeu"
        }
      },
      {
        "HashCode": -828045068,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.EinstellungenInfotexteNeu",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.EinstellungenInfotexteNeu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.EinstellungenInfotexteNeu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1164574703,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Kalender",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Kalender"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Kalender"
        }
      },
      {
        "HashCode": -1691833372,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Kalender",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.Kalender"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Kalender",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1196229855,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Kontakte",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Kontakte"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Kontakte"
        }
      },
      {
        "HashCode": 1733322114,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Kontakte",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.Kontakte"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Kontakte",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1757355446,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Kunden",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Kunden"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Kunden"
        }
      },
      {
        "HashCode": -1065792014,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Kunden",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.Kunden"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Kunden",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2035024093,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Management",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Management"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Management"
        }
      },
      {
        "HashCode": 118317797,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Management",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.Management"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Management",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1281909714,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.MeldungFortschritt",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MeldungFortschritt"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "strMeldung",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "strMeldung"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.MeldungFortschritt"
        }
      },
      {
        "HashCode": 1102096404,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.MeldungFortschritt",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.MeldungFortschritt"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "strMeldung",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "strMeldung"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.MeldungFortschritt",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 189907424,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.MeldungJaNein",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MeldungJaNein"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "strMeldung",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "strMeldung"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.MeldungJaNein"
        }
      },
      {
        "HashCode": 1868457318,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.MeldungJaNein",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.MeldungJaNein"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "strMeldung",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "strMeldung"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.MeldungJaNein",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -844290305,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.MeldungLoeschen",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MeldungLoeschen"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "strMeldung",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "strMeldung"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.MeldungLoeschen"
        }
      },
      {
        "HashCode": -103149974,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.MeldungLoeschen",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.MeldungLoeschen"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "strMeldung",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "strMeldung"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.MeldungLoeschen",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1629544359,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.MeldungOk",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MeldungOk"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "strMeldung",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "strMeldung"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.MeldungOk"
        }
      },
      {
        "HashCode": 545357535,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.MeldungOk",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.MeldungOk"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "strMeldung",
            "TypeName": "dynamic",
            "Metadata": {
              "Common.PropertyName": "strMeldung"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.MeldungOk",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 662082699,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Mitarbeiter",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Mitarbeiter"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Mitarbeiter"
        }
      },
      {
        "HashCode": -505066494,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.Mitarbeiter",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.Mitarbeiter"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.Mitarbeiter",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 687253158,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.MitarbeiterListen",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MitarbeiterListen"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.MitarbeiterListen"
        }
      },
      {
        "HashCode": -154014707,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.MitarbeiterListen",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.MitarbeiterListen"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.MitarbeiterListen",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 467953875,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.MitarbeiterNeu",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MitarbeiterNeu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.MitarbeiterNeu"
        }
      },
      {
        "HashCode": -1622665114,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.MitarbeiterNeu",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.MitarbeiterNeu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.MitarbeiterNeu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1629854472,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.MitarbeiterSuchen",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MitarbeiterSuchen"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.MitarbeiterSuchen"
        }
      },
      {
        "HashCode": 200577259,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.MitarbeiterSuchen",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.MitarbeiterSuchen"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.MitarbeiterSuchen",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1281066322,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.ZzAutomatischErzeugen",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ZzAutomatischErzeugen"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.ZzAutomatischErzeugen"
        }
      },
      {
        "HashCode": -1650816146,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Pages.ZzAutomatischErzeugen",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Pages.ZzAutomatischErzeugen"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, dynamic>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Pages.ZzAutomatischErzeugen",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 399503908,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Shared.DialogLayout",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DialogLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.DialogLayout"
        }
      },
      {
        "HashCode": -877393858,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Shared.DialogLayout",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Shared.DialogLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.DialogLayout",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1930342935,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Client.Shared.DialogLayout.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "DialogLayout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.DialogLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1732615107,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Client.Shared.DialogLayout.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "SinDarElaVerwaltung.Client.Shared.DialogLayout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.DialogLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2141371817,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Shared.LoginLayout",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LoginLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.LoginLayout"
        }
      },
      {
        "HashCode": -1508834648,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Shared.LoginLayout",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Shared.LoginLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.LoginLayout",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1024997912,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Client.Shared.LoginLayout.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "LoginLayout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.LoginLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1847648854,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Client.Shared.LoginLayout.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "SinDarElaVerwaltung.Client.Shared.LoginLayout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.LoginLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -345872100,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Shared.Main2Layout",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Main2Layout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.Main2Layout"
        }
      },
      {
        "HashCode": 1731617352,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Shared.Main2Layout",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Shared.Main2Layout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.Main2Layout",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1818481352,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Client.Shared.Main2Layout.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "Main2Layout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.Main2Layout.Body",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -562149869,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Client.Shared.Main2Layout.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "SinDarElaVerwaltung.Client.Shared.Main2Layout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.Main2Layout.Body",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1411229023,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Shared.MainLayout",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MainLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.MainLayout"
        }
      },
      {
        "HashCode": 1208121810,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Shared.MainLayout",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Shared.MainLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.MainLayout",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1354588273,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Client.Shared.MainLayout.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "MainLayout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.MainLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1929367063,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Client.Shared.MainLayout.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "SinDarElaVerwaltung.Client.Shared.MainLayout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.MainLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -422023870,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Shared.StandardLayout",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "StandardLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.StandardLayout"
        }
      },
      {
        "HashCode": -1342508641,
        "Kind": "Components.Component",
        "Name": "SinDarElaVerwaltung.Client.Shared.StandardLayout",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SinDarElaVerwaltung.Client.Shared.StandardLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Body",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Body",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.StandardLayout",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1184790621,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Client.Shared.StandardLayout.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "StandardLayout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.StandardLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1318586020,
        "Kind": "Components.ChildContent",
        "Name": "SinDarElaVerwaltung.Client.Shared.StandardLayout.Body",
        "AssemblyName": "SinDarElaVerwaltung.Client",
        "Documentation": "\n            <summary>\n            Gets the content to be rendered inside the layout.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Body",
            "ParentTag": "SinDarElaVerwaltung.Client.Shared.StandardLayout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "SinDarElaVerwaltung.Client.Shared.StandardLayout.Body",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1571006779,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n             <summary>\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\n             so that it displays the page matching the specified route but only if the user\n             is authorized to see it.\n            \n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\n             which makes the user's current authentication state available to descendants.\n             </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resource"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
        }
      },
      {
        "HashCode": 687290719,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n             <summary>\n             Combines the behaviors of <see cref=\"T:Microsoft.AspNetCore.Components.Authorization.AuthorizeView\" /> and <see cref=\"T:Microsoft.AspNetCore.Components.RouteView\" />,\n             so that it displays the page matching the specified route but only if the user\n             is authorized to see it.\n            \n             Additionally, this component supplies a cascading parameter of type <see cref=\"T:System.Threading.Tasks.Task`1\" />,\n             which makes the user's current authentication state available to descendants.\n             </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resource"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -43717580,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -607897002,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.NotAuthorized",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1289961536,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "AuthorizeRouteView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -665521977,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeRouteView.Authorizing",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2002532510,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Policy",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Policy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Roles",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Roles"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorized",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resource"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
        }
      },
      {
        "HashCode": 29309529,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            Displays differing content depending on the user's authorization status.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Policy",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The policy name that determines whether the content can be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Policy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Roles",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            A comma delimited list of roles that are allowed to display the content.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Roles"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotAuthorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotAuthorized",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorized",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Authorization.AuthenticationState>",
            "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorized",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Authorizing",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Authorizing",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resource",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            The resource to which access is being controlled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resource"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -893217982,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2067491522,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 415276884,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -429584841,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is not authorized.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotAuthorized",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'NotAuthorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.NotAuthorized",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1461431238,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorized",
            "ParentTag": "AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Authorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -233991384,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed if the user is authorized.\n            If you specify a value for this parameter, do not also specify a value for <see cref=\"P:Microsoft.AspNetCore.Components.Authorization.AuthorizeViewCore.ChildContent\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorized",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Authorized' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorized",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 638356074,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "AuthorizeView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1808573566,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content that will be displayed while asynchronous authorization is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Authorizing",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.AuthorizeView.Authorizing",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -827736858,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CascadingAuthenticationState"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"
        }
      },
      {
        "HashCode": 753097671,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 464875322,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CascadingAuthenticationState"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1139993169,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Authorization",
        "Documentation": "\n            <summary>\n            The content to which the authentication state should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -74137641,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CascadingValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            The value to be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsFixed"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 912217573,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that provides a cascading value to all descendant components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.CascadingValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.CascadingValue<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            The value to be provided.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n             <summary>\n             Optionally gives a name to the provided value. Descendant components\n             will be able to receive the value by specifying this name.\n            \n             If no name is specified, then descendant components will receive the\n             value based the type of value they are requesting.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsFixed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            If true, indicates that <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> will not change. This is a\n            performance optimization that allows the framework to skip setting up\n            change notifications. Set this flag only if you will not change\n            <see cref=\"P:Microsoft.AspNetCore.Components.CascadingValue`1.Value\" /> during the component's lifetime.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsFixed"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -559478193,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CascadingValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -357150645,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            The content to which the value should be provided.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.CascadingValue"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.CascadingValue<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2116279727,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.DynamicComponent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that renders another component dynamically according to its\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DynamicComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the component to be rendered. The supplied type must\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Parameters",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a dictionary of parameters to be passed to the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Parameters"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.DynamicComponent"
        }
      },
      {
        "HashCode": -1901449242,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.DynamicComponent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that renders another component dynamically according to its\n            <see cref=\"P:Microsoft.AspNetCore.Components.DynamicComponent.Type\" /> parameter.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.DynamicComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the component to be rendered. The supplied type must\n            implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Parameters",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a dictionary of parameters to be passed to the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Parameters"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.DynamicComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2145356375,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.LayoutView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LayoutView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Layout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Layout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView"
        }
      },
      {
        "HashCode": 6224598,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.LayoutView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified content inside the specified layout and any further\n            nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.LayoutView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Layout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of the layout in which to display the content.\n            The type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" /> and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Layout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 148074896,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "LayoutView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -978901958,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.LayoutView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.LayoutView.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 834884274,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.RouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView"
        }
      },
      {
        "HashCode": -701948096,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.RouteView",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Displays the specified page component, rendering it inside its layout\n            and any further nested layouts.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.RouteView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This determines the page that will be\n            displayed and the parameter values that will be supplied to the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultLayout",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the type of a layout to be used if the page does not\n            declare any layout. If specified, the type must implement <see cref=\"T:Microsoft.AspNetCore.Components.IComponent\" />\n            and accept a parameter named <see cref=\"P:Microsoft.AspNetCore.Components.LayoutComponentBase.Body\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultLayout"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.RouteView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 931077501,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppAssembly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAssemblies",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAssemblies"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFound",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotFound",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Found",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Found",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Navigating",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Navigating",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnNavigateAsync",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>",
            "Documentation": "\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnNavigateAsync",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PreferExactMatches",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\n            over wildcards.\n            <para>This property is obsolete and configuring it does nothing.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PreferExactMatches"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router"
        }
      },
      {
        "HashCode": 2008599948,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            A component that supplies route data corresponding to the current navigation state.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AppAssembly",
            "TypeName": "System.Reflection.Assembly",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the assembly that should be searched for components matching the URI.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppAssembly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAssemblies",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Reflection.Assembly>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional assemblies that should be searched for components\n            that can match URIs.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAssemblies"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotFound",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotFound",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Found",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.RouteData>",
            "IsEditorRequired": true,
            "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Found",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Navigating",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Navigating",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnNavigateAsync",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Routing.NavigationContext>",
            "Documentation": "\n            <summary>\n            Gets or sets a handler that should be called before navigating to a new page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnNavigateAsync",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PreferExactMatches",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a flag to indicate whether route matching should prefer exact matches\n            over wildcards.\n            <para>This property is obsolete and configuring it does nothing.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PreferExactMatches"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2050425473,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotFound",
            "ParentTag": "Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 858353757,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when no match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NotFound",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.NotFound",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1547220581,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Found",
            "ParentTag": "Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Found' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1053682921,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Found",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Gets or sets the content to display when a match is found for the requested route.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Found",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Found' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Found",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1056282509,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Navigating",
            "ParentTag": "Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1428505954,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "\n            <summary>\n            Get or sets the content to display when asynchronous navigation is in progress.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Navigating",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.Router"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.Router.Navigating",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1604317225,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
        "Documentation": "\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DataAnnotationsValidator"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"
        }
      },
      {
        "HashCode": 262276934,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
        "AssemblyName": "Microsoft.AspNetCore.Components.Forms",
        "Documentation": "\n            <summary>\n            Adds Data Annotations validation support to an <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.DataAnnotationsValidator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1355144905,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Documentation": "\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm"
        }
      },
      {
        "HashCode": -201802900,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders a form element that cascades an <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> to descendants.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>form</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Documentation": "\n            <summary>\n            Supplies the edit context explicitly. If using this parameter, do not\n            also supply <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.Model\" />, since the model value will be taken\n            from the <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditContext.Model\" /> property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the top-level model object for the form. An edit context will\n            be constructed for this model. If using this parameter, do not also supply\n            a value for <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the form is submitted.\n            \n             If using this parameter, you are responsible for triggering any validation\n             manually, e.g., by calling <see cref=\"M:Microsoft.AspNetCore.Components.Forms.EditContext.Validate\" />.\n             </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnValidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnValidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the form is submitted and the\n            <see cref=\"P:Microsoft.AspNetCore.Components.Forms.EditForm.EditContext\" /> is determined to be invalid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -644135994,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 885243579,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Specifies the content to be rendered inside this <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditForm\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.EditForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.EditForm.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 706943169,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
        }
      },
      {
        "HashCode": 1701625969,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.Boolean\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -883082554,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputDate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.InputDateType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of HTML input to be rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -2064852002,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing date values.\n            Supported types are <see cref=\"T:System.DateTime\" /> and <see cref=\"T:System.DateTimeOffset\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputDate<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.InputDateType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of HTML input to be rendered.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1716890289,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputFile",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputFile"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputFile"
        }
      },
      {
        "HashCode": 1435297741,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputFile",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that wraps the HTML file input element and supplies a <see cref=\"T:System.IO.Stream\" /> for each file's contents.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputFile"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OnChange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Forms.InputFileChangeEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the event callback that will be invoked when the collection of selected files changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnChange",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputFile",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1145186489,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputNumber"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 95809761,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing numeric values.\n            Supported numeric types are <see cref=\"T:System.Int32\" />, <see cref=\"T:System.Int64\" />, <see cref=\"T:System.Int16\" />, <see cref=\"T:System.Single\" />, <see cref=\"T:System.Double\" />, <see cref=\"T:System.Decimal\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputNumber<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParsingErrorMessage",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the error message used when displaying an a parsing error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParsingErrorMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1849291931,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputRadio"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1908257535,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component used for selecting a value from a group of choices.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadio"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadio<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the input element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of this input.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the parent input radio group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadio<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1197868256,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1175143565,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Groups child <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadio`1\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the group.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1992810458,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "InputRadioGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1420607523,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the <see cref=\"T:Microsoft.AspNetCore.Components.Forms.InputRadioGroup`1\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1838045445,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -830352673,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A dropdown selection component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.InputSelect<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1077466601,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "InputSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 735199628,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content to be rendering inside the select element.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Forms.InputSelect"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1763598799,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText"
        }
      },
      {
        "HashCode": 803400464,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            An input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 304155606,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputTextArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
        }
      },
      {
        "HashCode": -2108629094,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A multiline input component for editing <see cref=\"T:System.String\" /> values.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the input. This should be used with two-way binding.\n            </summary>\n            <example>\n            @bind-Value=\"model.PropertyName\"\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback that updates the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets an expression that identifies the bound value.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisplayName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the display name for this field.\n            <para>This value is used when generating error messages when the input value fails to parse correctly.</para>\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisplayName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -854904780,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValidationMessage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -711343731,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages for a specified field within a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>div</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "For",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Specifies the field for which validation messages should be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "For",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationMessage<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -205842972,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValidationSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary"
        }
      },
      {
        "HashCode": -1259399189,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Displays a list of validation messages from a cascaded <see cref=\"T:Microsoft.AspNetCore.Components.Forms.EditContext\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Model",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the model to produce the list of validation messages for.\n            When specified, this lists all errors that are associated with the model instance.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Model"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be applied to the created <c>ul</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.ValidationSummary",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -153556090,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            After navigating from one page to another, sets focus to an element\n            matching a CSS selector. This can be used to build an accessible\n            navigation system compatible with screen readers.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FocusOnNavigate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This can be obtained from an enclosing\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selector",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a CSS selector describing the element to be focused after\n            navigation between pages.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selector"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"
        }
      },
      {
        "HashCode": 1845821227,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            After navigating from one page to another, sets focus to an element\n            matching a CSS selector. This can be used to build an accessible\n            navigation system compatible with screen readers.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RouteData",
            "TypeName": "Microsoft.AspNetCore.Components.RouteData",
            "Documentation": "\n            <summary>\n            Gets or sets the route data. This can be obtained from an enclosing\n            <see cref=\"T:Microsoft.AspNetCore.Components.Routing.Router\" /> component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RouteData"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selector",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets a CSS selector describing the element to be focused after\n            navigation between pages.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selector"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.FocusOnNavigate",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1338488068,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "NavLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ActiveClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Match"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink"
        }
      },
      {
        "HashCode": 1798294864,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            A component that renders an anchor tag, automatically toggling its 'active'\n            class based on whether its 'href' matches the current URI.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Routing.NavLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ActiveClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class name applied to the NavLink when the\n            current route matches the NavLink href.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ActiveClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AdditionalAttributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets a collection of additional attributes that will be added to the generated\n            <c>a</c> element.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AdditionalAttributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Match"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 677516211,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "NavLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1072858394,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Routing.NavLink"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Routing.NavLink.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -775393684,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeadContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent"
        }
      },
      {
        "HashCode": -504481387,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Provides content to <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.HeadContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 48624188,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "HeadContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -670601697,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered in <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> instances.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.HeadContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1266430565,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeadOutlet"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadOutlet"
        }
      },
      {
        "HashCode": 553120974,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Renders content provided by <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadContent\" /> components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.HeadOutlet"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.HeadOutlet",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 277066134,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.PageTitle",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PageTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle"
        }
      },
      {
        "HashCode": 1861147079,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.PageTitle",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Enables rendering an HTML <c>&lt;title&gt;</c> to a <see cref=\"T:Microsoft.AspNetCore.Components.Web.HeadOutlet\" /> component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.PageTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2079107154,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "PageTitle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1468607642,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the content to be rendered as the document title.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.PageTitle"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.PageTitle.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 102620408,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Captures errors thrown from its child content.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ErrorBoundary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ErrorContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Exception>",
            "Documentation": "\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ErrorContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumErrorCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            The maximum number of errors that can be handled. If more errors are received,\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumErrorCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
        }
      },
      {
        "HashCode": -104024089,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Captures errors thrown from its child content.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ErrorContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Exception>",
            "Documentation": "\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ErrorContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaximumErrorCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            The maximum number of errors that can be handled. If more errors are received,\n            they will be treated as fatal. Calling <see cref=\"M:Microsoft.AspNetCore.Components.ErrorBoundaryBase.Recover\" /> resets the count.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaximumErrorCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 980116499,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ErrorBoundary"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -252540402,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            The content to be displayed when there is no error.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -907631410,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ErrorContent",
            "ParentTag": "ErrorBoundary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ErrorContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1843167690,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            The content to be displayed when there is an error.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ErrorContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.ErrorBoundary"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ErrorContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.ErrorBoundary.ErrorContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -730856553,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Provides functionality for rendering a virtualized list of items.\n            </summary>\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
            "Documentation": "\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemSize",
            "TypeName": "System.Single",
            "Documentation": "\n            <summary>\n            Gets the size of each item in pixels. Defaults to 50px.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemsProvider",
            "TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the function providing items to the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemsProvider",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.ICollection<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the fixed item source.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OverscanCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines how many additional items will be rendered\n            before and after the visible region. This help to reduce the frequency of rendering\n            during scrolling. However, higher values mean that more elements will be present\n            in the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OverscanCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 79783623,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Provides functionality for rendering a virtualized list of items.\n            </summary>\n            <typeparam name=\"TItem\">The <c>context</c> type for the items being rendered.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemContent",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Web.Virtualization.PlaceholderContext>",
            "Documentation": "\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemSize",
            "TypeName": "System.Single",
            "Documentation": "\n            <summary>\n            Gets the size of each item in pixels. Defaults to 50px.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ItemsProvider",
            "TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.ItemsProviderDelegate<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the function providing items to the list.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ItemsProvider",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "System.Collections.Generic.ICollection<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the fixed item source.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OverscanCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets a value that determines how many additional items will be rendered\n            before and after the visible region. This help to reduce the frequency of rendering\n            during scrolling. However, higher values mean that more elements will be present\n            in the page.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OverscanCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -190370557,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -431703834,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 190490806,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemContent",
            "ParentTag": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1967929358,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the item template for the list.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ItemContent",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ItemContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.ItemContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1233557188,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Placeholder",
            "ParentTag": "Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Placeholder' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1389013252,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "\n            <summary>\n            Gets or sets the template for items that have not yet been loaded in memory.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Placeholder",
            "ParentTag": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Placeholder' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.Virtualization.Virtualize<TItem>.Placeholder",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1797992768,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            An <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1\" /> that uses <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState\" /> as the\n            state to be persisted across authentication operations.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RemoteAuthenticatorView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Action",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions\" /> action the component needs to handle.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Action"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AuthenticationState",
            "TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState",
            "Documentation": "\n            <summary>\n            Gets or sets the <typeparamref name=\"TAuthenticationState\" /> instance to be preserved during the authentication operation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AuthenticationState"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoggingIn",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogIn\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoggingIn",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Registering",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Register\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Registering",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UserProfile",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Profile\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UserProfile",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CompletingLoggingIn",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInCallback\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CompletingLoggingIn",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogInFailed",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInFailed\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogInFailed",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOut",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOut\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogOut",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CompletingLogOut",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutCallback\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CompletingLogOut",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOutFailed",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutFailed\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogOutFailed",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOutSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutSucceeded\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogOutSucceeded",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLogInSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState>",
            "Documentation": "\n            <summary>\n            Gets or sets an event callback that will be invoked with the stored authentication state when a log in operation succeeds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnLogInSucceeded",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLogOutSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState>",
            "Documentation": "\n            <summary>\n            Gets or sets an event callback that will be invoked with the stored authentication state when a log out operation succeeds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnLogOutSucceeded",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApplicationPaths",
            "TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions",
            "Documentation": "\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions\" /> with the paths to different authentication pages.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApplicationPaths"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
        }
      },
      {
        "HashCode": 1492518400,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            An <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore`1\" /> that uses <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState\" /> as the\n            state to be persisted across authentication operations.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Action",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions\" /> action the component needs to handle.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Action"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AuthenticationState",
            "TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState",
            "Documentation": "\n            <summary>\n            Gets or sets the <typeparamref name=\"TAuthenticationState\" /> instance to be preserved during the authentication operation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AuthenticationState"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoggingIn",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogIn\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoggingIn",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Registering",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Register\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Registering",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UserProfile",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Profile\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UserProfile",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CompletingLoggingIn",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInCallback\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CompletingLoggingIn",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogInFailed",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInFailed\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogInFailed",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOut",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOut\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogOut",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CompletingLogOut",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutCallback\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CompletingLogOut",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOutFailed",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutFailed\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogOutFailed",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOutSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutSucceeded\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogOutSucceeded",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLogInSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState>",
            "Documentation": "\n            <summary>\n            Gets or sets an event callback that will be invoked with the stored authentication state when a log in operation succeeds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnLogInSucceeded",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLogOutSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationState>",
            "Documentation": "\n            <summary>\n            Gets or sets an event callback that will be invoked with the stored authentication state when a log out operation succeeds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnLogOutSucceeded",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApplicationPaths",
            "TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions",
            "Documentation": "\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions\" /> with the paths to different authentication pages.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApplicationPaths"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -536653522,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LoggingIn",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogIn\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LoggingIn",
            "ParentTag": "RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LoggingIn",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2040527403,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LoggingIn",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogIn\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LoggingIn",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LoggingIn",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1629971409,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.Registering",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Register\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Registering",
            "ParentTag": "RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.Registering",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1821462968,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.Registering",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Register\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Registering",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.Registering",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2101065428,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.UserProfile",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Profile\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "UserProfile",
            "ParentTag": "RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.UserProfile",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -366466704,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.UserProfile",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Profile\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "UserProfile",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.UserProfile",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 685729914,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.CompletingLoggingIn",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInCallback\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CompletingLoggingIn",
            "ParentTag": "RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.CompletingLoggingIn",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1688641295,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.CompletingLoggingIn",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInCallback\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CompletingLoggingIn",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.CompletingLoggingIn",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1946101475,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogInFailed",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInFailed\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogInFailed",
            "ParentTag": "RemoteAuthenticatorView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'LogInFailed' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogInFailed",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 816756384,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogInFailed",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInFailed\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogInFailed",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'LogInFailed' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogInFailed",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1181183750,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOut",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOut\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOut",
            "ParentTag": "RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOut",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -685314817,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOut",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOut\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOut",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOut",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1798631266,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.CompletingLogOut",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutCallback\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CompletingLogOut",
            "ParentTag": "RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.CompletingLogOut",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 525685621,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.CompletingLogOut",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutCallback\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CompletingLogOut",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.CompletingLogOut",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2113299755,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOutFailed",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutFailed\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOutFailed",
            "ParentTag": "RemoteAuthenticatorView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'LogOutFailed' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOutFailed",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -445393586,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOutFailed",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutFailed\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOutFailed",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'LogOutFailed' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOutFailed",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -338981826,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOutSucceeded",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutSucceeded\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOutSucceeded",
            "ParentTag": "RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOutSucceeded",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -816035086,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOutSucceeded",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutSucceeded\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOutSucceeded",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorView.LogOutSucceeded",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1394685407,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            A component that handles remote authentication operations in an application.\n            </summary>\n            <typeparam name=\"TAuthenticationState\">The user state type persisted while the operation is in progress. It must be serializable.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RemoteAuthenticatorViewCore"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TAuthenticationState",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TAuthenticationState for the Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState> component.",
            "Metadata": {
              "Common.PropertyName": "TAuthenticationState",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Action",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions\" /> action the component needs to handle.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Action"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AuthenticationState",
            "TypeName": "TAuthenticationState",
            "Documentation": "\n            <summary>\n            Gets or sets the <typeparamref name=\"TAuthenticationState\" /> instance to be preserved during the authentication operation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AuthenticationState",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoggingIn",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogIn\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoggingIn",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Registering",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Register\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Registering",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UserProfile",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Profile\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UserProfile",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CompletingLoggingIn",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInCallback\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CompletingLoggingIn",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogInFailed",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInFailed\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogInFailed",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOut",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOut\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogOut",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CompletingLogOut",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutCallback\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CompletingLogOut",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOutFailed",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutFailed\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogOutFailed",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOutSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutSucceeded\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogOutSucceeded",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLogInSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TAuthenticationState>",
            "Documentation": "\n            <summary>\n            Gets or sets an event callback that will be invoked with the stored authentication state when a log in operation succeeds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnLogInSucceeded",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLogOutSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TAuthenticationState>",
            "Documentation": "\n            <summary>\n            Gets or sets an event callback that will be invoked with the stored authentication state when a log out operation succeeds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnLogOutSucceeded",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApplicationPaths",
            "TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions",
            "Documentation": "\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions\" /> with the paths to different authentication pages.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApplicationPaths"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 621237194,
        "Kind": "Components.Component",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            A component that handles remote authentication operations in an application.\n            </summary>\n            <typeparam name=\"TAuthenticationState\">The user state type persisted while the operation is in progress. It must be serializable.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TAuthenticationState",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TAuthenticationState for the Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState> component.",
            "Metadata": {
              "Common.PropertyName": "TAuthenticationState",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Action",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions\" /> action the component needs to handle.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Action"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AuthenticationState",
            "TypeName": "TAuthenticationState",
            "Documentation": "\n            <summary>\n            Gets or sets the <typeparamref name=\"TAuthenticationState\" /> instance to be preserved during the authentication operation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AuthenticationState",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoggingIn",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogIn\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoggingIn",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Registering",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Register\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Registering",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UserProfile",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Profile\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UserProfile",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CompletingLoggingIn",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInCallback\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CompletingLoggingIn",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogInFailed",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInFailed\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogInFailed",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOut",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOut\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogOut",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CompletingLogOut",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutCallback\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CompletingLogOut",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOutFailed",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutFailed\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogOutFailed",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogOutSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutSucceeded\" /> is being handled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogOutSucceeded",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLogInSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TAuthenticationState>",
            "Documentation": "\n            <summary>\n            Gets or sets an event callback that will be invoked with the stored authentication state when a log in operation succeeds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnLogInSucceeded",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnLogOutSucceeded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TAuthenticationState>",
            "Documentation": "\n            <summary>\n            Gets or sets an event callback that will be invoked with the stored authentication state when a log out operation succeeds.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnLogOutSucceeded",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApplicationPaths",
            "TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions",
            "Documentation": "\n            <summary>\n            Gets or sets the <see cref=\"T:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationApplicationPathsOptions\" /> with the paths to different authentication pages.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApplicationPaths"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1381805618,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LoggingIn",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogIn\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LoggingIn",
            "ParentTag": "RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LoggingIn",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -863780999,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LoggingIn",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogIn\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LoggingIn",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LoggingIn",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1490576010,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.Registering",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Register\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Registering",
            "ParentTag": "RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.Registering",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1737860497,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.Registering",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Register\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Registering",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.Registering",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1917158195,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.UserProfile",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Profile\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "UserProfile",
            "ParentTag": "RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.UserProfile",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -308966399,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.UserProfile",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.Profile\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "UserProfile",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.UserProfile",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1024060743,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.CompletingLoggingIn",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInCallback\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CompletingLoggingIn",
            "ParentTag": "RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.CompletingLoggingIn",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -309504105,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.CompletingLoggingIn",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInCallback\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CompletingLoggingIn",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.CompletingLoggingIn",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1737612559,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogInFailed",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInFailed\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogInFailed",
            "ParentTag": "RemoteAuthenticatorViewCore"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'LogInFailed' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogInFailed",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 936996746,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogInFailed",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogInFailed\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogInFailed",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'LogInFailed' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogInFailed",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -301346815,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOut",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOut\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOut",
            "ParentTag": "RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOut",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 208393077,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOut",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOut\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOut",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOut",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 297760223,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.CompletingLogOut",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutCallback\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CompletingLogOut",
            "ParentTag": "RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.CompletingLogOut",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 803171248,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.CompletingLogOut",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutCallback\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CompletingLogOut",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.CompletingLogOut",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 647279981,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOutFailed",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutFailed\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOutFailed",
            "ParentTag": "RemoteAuthenticatorViewCore"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'LogOutFailed' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOutFailed",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 811260688,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOutFailed",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutFailed\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOutFailed",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'LogOutFailed' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOutFailed",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 921618392,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOutSucceeded",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutSucceeded\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOutSucceeded",
            "ParentTag": "RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOutSucceeded",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2015811313,
        "Kind": "Components.ChildContent",
        "Name": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOutSucceeded",
        "AssemblyName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication",
        "Documentation": "\n            <summary>\n            Gets or sets a <see cref=\"T:Microsoft.AspNetCore.Components.RenderFragment\" /> with the UI to display while <see cref=\"F:Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticationActions.LogOutSucceeded\" /> is being handled.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LogOutSucceeded",
            "ParentTag": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Microsoft.AspNetCore.Components.WebAssembly.Authentication.RemoteAuthenticatorViewCore<TAuthenticationState>.LogOutSucceeded",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -773146382,
        "Kind": "Components.Component",
        "Name": "Radzen.RadzenComponentWithChildren",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A base class of components that have child content.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenComponentWithChildren"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.RadzenComponentWithChildren"
        }
      },
      {
        "HashCode": -236741179,
        "Kind": "Components.Component",
        "Name": "Radzen.RadzenComponentWithChildren",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A base class of components that have child content.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.RadzenComponentWithChildren"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.RadzenComponentWithChildren",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1216771327,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.RadzenComponentWithChildren.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenComponentWithChildren"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.RadzenComponentWithChildren.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -689190036,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.RadzenComponentWithChildren.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.RadzenComponentWithChildren"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.RadzenComponentWithChildren.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 762856473,
        "Kind": "Components.Component",
        "Name": "Radzen.DataBoundFormComponent<T>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Class DataBoundFormComponent.\n            Implements the <see cref=\"T:Radzen.RadzenComponent\" />\n            Implements the <see cref=\"T:Radzen.IRadzenFormComponent\" />\n            </summary>\n            <typeparam name=\"T\"></typeparam>\n            <seealso cref=\"T:Radzen.RadzenComponent\" />\n            <seealso cref=\"T:Radzen.IRadzenFormComponent\" />\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DataBoundFormComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the Radzen.DataBoundFormComponent<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCaseSensitivity",
            "TypeName": "Radzen.FilterCaseSensitivity",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter case sensitivity.\n            </summary>\n            <value>The filter case sensitivity.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterCaseSensitivity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "Radzen.StringFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter operator.\n            </summary>\n            <value>The filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DataBoundFormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text property.\n            </summary>\n            <value>The text property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.DataBoundFormComponent<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 157238935,
        "Kind": "Components.Component",
        "Name": "Radzen.DataBoundFormComponent<T>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Class DataBoundFormComponent.\n            Implements the <see cref=\"T:Radzen.RadzenComponent\" />\n            Implements the <see cref=\"T:Radzen.IRadzenFormComponent\" />\n            </summary>\n            <typeparam name=\"T\"></typeparam>\n            <seealso cref=\"T:Radzen.RadzenComponent\" />\n            <seealso cref=\"T:Radzen.IRadzenFormComponent\" />\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.DataBoundFormComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the Radzen.DataBoundFormComponent<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCaseSensitivity",
            "TypeName": "Radzen.FilterCaseSensitivity",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter case sensitivity.\n            </summary>\n            <value>The filter case sensitivity.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterCaseSensitivity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "Radzen.StringFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter operator.\n            </summary>\n            <value>The filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DataBoundFormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text property.\n            </summary>\n            <value>The text property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.DataBoundFormComponent<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 393018815,
        "Kind": "Components.Component",
        "Name": "Radzen.DropDownBase<T>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Base class of components that display a list of items.\n            </summary>\n            <typeparam name=\"T\"></typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DropDownBase"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the Radzen.DropDownBase<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Count",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the total number of items in the data source.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Count"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowVirtualization",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies wether virtualization is enabled. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowVirtualization"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the default page size. Set to <c>5</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowFiltering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether filtering is allowed. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if filtering is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowFiltering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowClear",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the user can clear the value. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if clearing is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowClear"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multiple",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DropDownBase`1\" /> is multiple.\n            </summary>\n            <value><c>true</c> if multiple; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Multiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelectAll",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the user can select all values in multiple selection. Set to <c>true</c> by default.\n            </summary>\n            <value><c>true</c> if select all values is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelectAll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<dynamic>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value property.\n            </summary>\n            <value>The value property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisabledProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the disabled property.\n            </summary>\n            <value>The disabled property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisabledProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItemChanged",
            "TypeName": "System.Action<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the selected item changed.\n            </summary>\n            <value>The selected item changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItemChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDelay",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the filter delay.\n            </summary>\n            <value>The filter delay.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterDelay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItem",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the selected item.\n            </summary>\n            <value>The selected item.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Separator",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the item separator for Multiple dropdown.\n            </summary>\n            <value>Item separator</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Separator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCaseSensitivity",
            "TypeName": "Radzen.FilterCaseSensitivity",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter case sensitivity.\n            </summary>\n            <value>The filter case sensitivity.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterCaseSensitivity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "Radzen.StringFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter operator.\n            </summary>\n            <value>The filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DataBoundFormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text property.\n            </summary>\n            <value>The text property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.DropDownBase<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1986917942,
        "Kind": "Components.Component",
        "Name": "Radzen.DropDownBase<T>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Base class of components that display a list of items.\n            </summary>\n            <typeparam name=\"T\"></typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.DropDownBase"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the Radzen.DropDownBase<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Count",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the total number of items in the data source.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Count"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowVirtualization",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies wether virtualization is enabled. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowVirtualization"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the default page size. Set to <c>5</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowFiltering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether filtering is allowed. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if filtering is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowFiltering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowClear",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the user can clear the value. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if clearing is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowClear"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multiple",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DropDownBase`1\" /> is multiple.\n            </summary>\n            <value><c>true</c> if multiple; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Multiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelectAll",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the user can select all values in multiple selection. Set to <c>true</c> by default.\n            </summary>\n            <value><c>true</c> if select all values is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelectAll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<dynamic>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value property.\n            </summary>\n            <value>The value property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisabledProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the disabled property.\n            </summary>\n            <value>The disabled property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisabledProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItemChanged",
            "TypeName": "System.Action<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the selected item changed.\n            </summary>\n            <value>The selected item changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItemChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDelay",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the filter delay.\n            </summary>\n            <value>The filter delay.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterDelay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItem",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the selected item.\n            </summary>\n            <value>The selected item.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Separator",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the item separator for Multiple dropdown.\n            </summary>\n            <value>Item separator</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Separator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCaseSensitivity",
            "TypeName": "Radzen.FilterCaseSensitivity",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter case sensitivity.\n            </summary>\n            <value>The filter case sensitivity.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterCaseSensitivity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "Radzen.StringFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter operator.\n            </summary>\n            <value>The filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DataBoundFormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text property.\n            </summary>\n            <value>The text property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.DropDownBase<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1648422285,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.DropDownBase<T>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "DropDownBase"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.DropDownBase<T>.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1561611019,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.DropDownBase<T>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.DropDownBase"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.DropDownBase<T>.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1299864585,
        "Kind": "Components.Component",
        "Name": "Radzen.FormComponent<T>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Class FormComponent.\n            Implements the <see cref=\"T:Radzen.RadzenComponent\" />\n            Implements the <see cref=\"T:Radzen.IRadzenFormComponent\" />\n            </summary>\n            <typeparam name=\"T\"></typeparam>\n            <seealso cref=\"T:Radzen.RadzenComponent\" />\n            <seealso cref=\"T:Radzen.IRadzenFormComponent\" />\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FormComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the Radzen.FormComponent<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.FormComponent<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1463825080,
        "Kind": "Components.Component",
        "Name": "Radzen.FormComponent<T>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Class FormComponent.\n            Implements the <see cref=\"T:Radzen.RadzenComponent\" />\n            Implements the <see cref=\"T:Radzen.IRadzenFormComponent\" />\n            </summary>\n            <typeparam name=\"T\"></typeparam>\n            <seealso cref=\"T:Radzen.RadzenComponent\" />\n            <seealso cref=\"T:Radzen.IRadzenFormComponent\" />\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.FormComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the Radzen.FormComponent<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "T",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<T>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.FormComponent<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1772941261,
        "Kind": "Components.Component",
        "Name": "Radzen.PagedDataBoundComponent<T>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Base classes of components that support paging.\n            </summary>\n            <typeparam name=\"T\">The type of the data item</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "PagedDataBoundComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the Radzen.PagedDataBoundComponent<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerPosition",
            "TypeName": "Radzen.PagerPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the pager position. Set to <c>PagerPosition.Bottom</c> by default.\n            </summary>\n            <value>The pager position.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerAlwaysVisible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether pager is visible even when not enough data for paging.\n            </summary>\n            <value><c>true</c> if pager is visible even when not enough data for paging otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerAlwaysVisible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerHorizontalAlign",
            "TypeName": "Radzen.HorizontalAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the horizontal align.\n            </summary>\n            <value>The horizontal align.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerHorizontalAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether paging is allowed. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if paging is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the size of the page.\n            </summary>\n            <value>The size of the page.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageNumbersCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the page numbers count.\n            </summary>\n            <value>The page numbers count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageNumbersCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Count",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the count.\n            </summary>\n            <value>The count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Count"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<T>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<T>",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the page size options.\n            </summary>\n            <value>The page size options.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the page size description text.\n            </summary>\n            <value>The page size description text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPagingSummary",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary visibility.\n            </summary>\n            <value>The pager summary visibility.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPagingSummary"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingSummaryFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary format.\n            </summary>\n            <value>The pager summary format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagingSummaryFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.PagerEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the page callback.\n            </summary>\n            <value>The page callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.PagedDataBoundComponent<T>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 496621496,
        "Kind": "Components.Component",
        "Name": "Radzen.PagedDataBoundComponent<T>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Base classes of components that support paging.\n            </summary>\n            <typeparam name=\"T\">The type of the data item</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.PagedDataBoundComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "T",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter T for the Radzen.PagedDataBoundComponent<T> component.",
            "Metadata": {
              "Common.PropertyName": "T",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerPosition",
            "TypeName": "Radzen.PagerPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the pager position. Set to <c>PagerPosition.Bottom</c> by default.\n            </summary>\n            <value>The pager position.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerAlwaysVisible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether pager is visible even when not enough data for paging.\n            </summary>\n            <value><c>true</c> if pager is visible even when not enough data for paging otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerAlwaysVisible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerHorizontalAlign",
            "TypeName": "Radzen.HorizontalAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the horizontal align.\n            </summary>\n            <value>The horizontal align.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerHorizontalAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether paging is allowed. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if paging is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the size of the page.\n            </summary>\n            <value>The size of the page.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageNumbersCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the page numbers count.\n            </summary>\n            <value>The page numbers count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageNumbersCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Count",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the count.\n            </summary>\n            <value>The count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Count"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<T>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<T>",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the page size options.\n            </summary>\n            <value>The page size options.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the page size description text.\n            </summary>\n            <value>The page size description text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPagingSummary",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary visibility.\n            </summary>\n            <value>The pager summary visibility.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPagingSummary"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingSummaryFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary format.\n            </summary>\n            <value>The pager summary format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagingSummaryFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.PagerEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the page callback.\n            </summary>\n            <value>The page callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.PagedDataBoundComponent<T>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1962847147,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.PagedDataBoundComponent<T>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "PagedDataBoundComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.PagedDataBoundComponent<T>.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -198688216,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.PagedDataBoundComponent<T>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.PagedDataBoundComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.PagedDataBoundComponent<T>.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1144967053,
        "Kind": "Components.Component",
        "Name": "Radzen.RadzenComponent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n              Base class of Radzen Blazor components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.RadzenComponent"
        }
      },
      {
        "HashCode": 425599383,
        "Kind": "Components.Component",
        "Name": "Radzen.RadzenComponent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n              Base class of Radzen Blazor components.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.RadzenComponent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.RadzenComponent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 107528089,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenAccordion",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenAccordion component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenAccordion&gt;\n                &lt;Items&gt;\n                    &lt;RadzenAccordionItem Text=\"Orders\" Icon=\"account_balance_wallet\"&gt;\n                        Details for Orders\n                    &lt;/RadzenAccordionItem&gt;\n                    &lt;RadzenAccordionItem Text=\"Employees\" Icon=\"account_box\"&gt;\n                        Details for Employees\n                    &lt;/RadzenAccordionItem&gt;\n                &lt;/Items&gt;\n            &lt;/RadzenAccordion&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenAccordion"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Multiple",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether multiple items can be expanded.\n            </summary>\n            <value><c>true</c> if multiple items can be expanded; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Multiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the selected item.\n            </summary>\n            <value>The index of the selected item.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expand",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback raised when the item is expanded.\n            </summary>\n            <value>The expand.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expand",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Collapse",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback raised when the item is collapsed.\n            </summary>\n            <value>The collapse.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Collapse",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the items.\n            </summary>\n            <value>The items.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenAccordion"
        }
      },
      {
        "HashCode": -1950103019,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenAccordion",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenAccordion component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenAccordion&gt;\n                &lt;Items&gt;\n                    &lt;RadzenAccordionItem Text=\"Orders\" Icon=\"account_balance_wallet\"&gt;\n                        Details for Orders\n                    &lt;/RadzenAccordionItem&gt;\n                    &lt;RadzenAccordionItem Text=\"Employees\" Icon=\"account_box\"&gt;\n                        Details for Employees\n                    &lt;/RadzenAccordionItem&gt;\n                &lt;/Items&gt;\n            &lt;/RadzenAccordion&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenAccordion"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Multiple",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether multiple items can be expanded.\n            </summary>\n            <value><c>true</c> if multiple items can be expanded; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Multiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the selected item.\n            </summary>\n            <value>The index of the selected item.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expand",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback raised when the item is expanded.\n            </summary>\n            <value>The expand.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expand",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Collapse",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback raised when the item is collapsed.\n            </summary>\n            <value>The collapse.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Collapse",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the items.\n            </summary>\n            <value>The items.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenAccordion",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1349540492,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenAccordion.Items",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the items.\n            </summary>\n            <value>The items.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Items",
            "ParentTag": "RadzenAccordion"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenAccordion.Items",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -149081065,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenAccordion.Items",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the items.\n            </summary>\n            <value>The items.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Items",
            "ParentTag": "Radzen.Blazor.RadzenAccordion"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenAccordion.Items",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -146023299,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenAccordionItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Class RadzenAccordionItem.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenAccordionItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenAccordionItem\" /> is selected.\n            </summary>\n            <value><c>true</c> if selected; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenAccordionItem\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenAccordionItem"
        }
      },
      {
        "HashCode": 1246376481,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenAccordionItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Class RadzenAccordionItem.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenAccordionItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenAccordionItem\" /> is selected.\n            </summary>\n            <value><c>true</c> if selected; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenAccordionItem\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenAccordionItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 681600872,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenAccordionItem.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenAccordionItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenAccordionItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 762857225,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenAccordionItem.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenAccordionItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenAccordionItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -293693360,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenArcGaugeScale",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenArcGaugeScale component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenArcGaugeScale"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the stroke.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the width of the stroke.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickLength",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the length of the tick.\n            </summary>\n            <value>The length of the tick.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorTickLength",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the length of the minor tick.\n            </summary>\n            <value>The length of the minor tick.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorTickLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickLabelOffset",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the tick label offset.\n            </summary>\n            <value>The tick label offset.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickLabelOffset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format string.\n            </summary>\n            <value>The format string.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the fill.\n            </summary>\n            <value>The fill.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the height.\n            </summary>\n            <value>The height.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Formatter",
            "TypeName": "System.Func<System.Double, System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the formatter.\n            </summary>\n            <value>The formatter.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Formatter",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartAngle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the start angle.\n            </summary>\n            <value>The start angle.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickPosition",
            "TypeName": "Radzen.Blazor.GaugeTickPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the tick position.\n            </summary>\n            <value>The tick position.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndAngle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the end angle.\n            </summary>\n            <value>The end angle.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EndAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the radius.\n            </summary>\n            <value>The radius.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowFirstTick",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether first tick is shown.\n            </summary>\n            <value><c>true</c> if first tick is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowFirstTick"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowLastTick",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether last tick is shown.\n            </summary>\n            <value><c>true</c> if last tick is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowLastTick"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowTickLabels",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to show tick labels.\n            </summary>\n            <value><c>true</c> if tick labels are shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowTickLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the x.\n            </summary>\n            <value>The x.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Determines the minimum value.\n            </summary>\n            <value>The minimum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Determines the maximum value.\n            </summary>\n            <value>The maximum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the step.\n            </summary>\n            <value>The step.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Step"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorStep",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the minor step.\n            </summary>\n            <value>The minor step.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the y.\n            </summary>\n            <value>The y.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Margin",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the margin.\n            </summary>\n            <value>The margin.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Margin"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenArcGaugeScale"
        }
      },
      {
        "HashCode": -318510307,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenArcGaugeScale",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenArcGaugeScale component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenArcGaugeScale"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the stroke.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the width of the stroke.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickLength",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the length of the tick.\n            </summary>\n            <value>The length of the tick.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorTickLength",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the length of the minor tick.\n            </summary>\n            <value>The length of the minor tick.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorTickLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickLabelOffset",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the tick label offset.\n            </summary>\n            <value>The tick label offset.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickLabelOffset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format string.\n            </summary>\n            <value>The format string.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the fill.\n            </summary>\n            <value>The fill.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the height.\n            </summary>\n            <value>The height.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Formatter",
            "TypeName": "System.Func<System.Double, System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the formatter.\n            </summary>\n            <value>The formatter.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Formatter",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartAngle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the start angle.\n            </summary>\n            <value>The start angle.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickPosition",
            "TypeName": "Radzen.Blazor.GaugeTickPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the tick position.\n            </summary>\n            <value>The tick position.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndAngle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the end angle.\n            </summary>\n            <value>The end angle.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EndAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the radius.\n            </summary>\n            <value>The radius.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowFirstTick",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether first tick is shown.\n            </summary>\n            <value><c>true</c> if first tick is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowFirstTick"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowLastTick",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether last tick is shown.\n            </summary>\n            <value><c>true</c> if last tick is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowLastTick"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowTickLabels",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to show tick labels.\n            </summary>\n            <value><c>true</c> if tick labels are shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowTickLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the x.\n            </summary>\n            <value>The x.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Determines the minimum value.\n            </summary>\n            <value>The minimum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Determines the maximum value.\n            </summary>\n            <value>The maximum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the step.\n            </summary>\n            <value>The step.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Step"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorStep",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the minor step.\n            </summary>\n            <value>The minor step.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the y.\n            </summary>\n            <value>The y.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Margin",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the margin.\n            </summary>\n            <value>The margin.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Margin"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenArcGaugeScale",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1436698016,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenArcGaugeScale.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenArcGaugeScale"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenArcGaugeScale.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1462322248,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenArcGaugeScale.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenArcGaugeScale"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenArcGaugeScale.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1842045145,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenArcGaugeScaleValue",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenArcGaugeScaleValue component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenArcGaugeScaleValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the stroke.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the width of the stroke.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the fill.\n            </summary>\n            <value>The fill.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowValue",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to show value.\n            </summary>\n            <value><c>true</c> if value is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format string.\n            </summary>\n            <value>The format string.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenArcGaugeScaleValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenArcGaugeScaleValue"
        }
      },
      {
        "HashCode": -718634965,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenArcGaugeScaleValue",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenArcGaugeScaleValue component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenArcGaugeScaleValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the stroke.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the width of the stroke.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the fill.\n            </summary>\n            <value>The fill.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowValue",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to show value.\n            </summary>\n            <value><c>true</c> if value is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format string.\n            </summary>\n            <value>The format string.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenArcGaugeScaleValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenArcGaugeScaleValue",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -384277455,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenArcGaugeScaleValue.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenArcGaugeScaleValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenArcGaugeScaleValue.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 267719388,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenArcGaugeScaleValue.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenArcGaugeScaleValue"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenArcGaugeScaleValue.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -21621454,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenAreaSeries<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Renders area series in <see cref=\"T:Radzen.Blazor.RadzenChart\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenAreaSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenAreaSeries<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the line.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the fill (background color) of the area series.\n            </summary>\n            <value>The fill.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the pixel width of the line. Set to <c>2</c> by default.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the line type.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Smooth",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to render a smooth line. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Smooth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CategoryProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the X axis (a.k.a. category axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CategoryProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is visible.\n            Invisible series do not appear in the legend and cannot be shown by the user.\n            Use the <c>Visible</c> property to programatically show or hide a series.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Hidden",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is hidden.\n            Hidden series are initially invisible and the user can show them by clicking on their label in the legend.\n            Use the <c>Hidden</c> property to hide certain series from your users but still allow them to see them.\n            </summary>\n            <value><c>true</c> if hidden; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Hidden"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the Y axis (a.k.a. value axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RenderingOrder",
            "TypeName": "System.Int32",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "RenderingOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data of the series. The data is enumerated and its items are displayed by the series.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenAreaSeries<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1854287520,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenAreaSeries<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Renders area series in <see cref=\"T:Radzen.Blazor.RadzenChart\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenAreaSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenAreaSeries<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the line.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the fill (background color) of the area series.\n            </summary>\n            <value>The fill.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the pixel width of the line. Set to <c>2</c> by default.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the line type.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Smooth",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to render a smooth line. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Smooth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CategoryProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the X axis (a.k.a. category axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CategoryProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is visible.\n            Invisible series do not appear in the legend and cannot be shown by the user.\n            Use the <c>Visible</c> property to programatically show or hide a series.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Hidden",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is hidden.\n            Hidden series are initially invisible and the user can show them by clicking on their label in the legend.\n            Use the <c>Hidden</c> property to hide certain series from your users but still allow them to see them.\n            </summary>\n            <value><c>true</c> if hidden; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Hidden"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the Y axis (a.k.a. value axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RenderingOrder",
            "TypeName": "System.Int32",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "RenderingOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data of the series. The data is enumerated and its items are displayed by the series.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenAreaSeries<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -683029368,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenAreaSeries<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenAreaSeries"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenAreaSeries<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1967919448,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenAreaSeries<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenAreaSeries"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenAreaSeries<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1981279109,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenAreaSeries<TItem>.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "RadzenAreaSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenAreaSeries<TItem>.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 291720055,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenAreaSeries<TItem>.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "Radzen.Blazor.RadzenAreaSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenAreaSeries<TItem>.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 889164740,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenAutoComplete",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenAutoComplete component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenAutoComplete Data=@customers TextProperty=\"CompanyName\" Change=@(args =&gt; Console.WriteLine($\"Selected text: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenAutoComplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Multiline",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenAutoComplete\" /> is multiline.\n            </summary>\n            <value><c>true</c> if multiline; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Multiline"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<dynamic>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinLength",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the minimum length.\n            </summary>\n            <value>The minimum length.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDelay",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the filter delay.\n            </summary>\n            <value>The filter delay.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterDelay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCaseSensitivity",
            "TypeName": "Radzen.FilterCaseSensitivity",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter case sensitivity.\n            </summary>\n            <value>The filter case sensitivity.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterCaseSensitivity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "Radzen.StringFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter operator.\n            </summary>\n            <value>The filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DataBoundFormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text property.\n            </summary>\n            <value>The text property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenAutoComplete"
        }
      },
      {
        "HashCode": 2076541169,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenAutoComplete",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenAutoComplete component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenAutoComplete Data=@customers TextProperty=\"CompanyName\" Change=@(args =&gt; Console.WriteLine($\"Selected text: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenAutoComplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Multiline",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenAutoComplete\" /> is multiline.\n            </summary>\n            <value><c>true</c> if multiline; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Multiline"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<dynamic>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinLength",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the minimum length.\n            </summary>\n            <value>The minimum length.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDelay",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the filter delay.\n            </summary>\n            <value>The filter delay.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterDelay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCaseSensitivity",
            "TypeName": "Radzen.FilterCaseSensitivity",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter case sensitivity.\n            </summary>\n            <value>The filter case sensitivity.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterCaseSensitivity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "Radzen.StringFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter operator.\n            </summary>\n            <value>The filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DataBoundFormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text property.\n            </summary>\n            <value>The text property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenAutoComplete",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1632312558,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenAutoComplete.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenAutoComplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenAutoComplete.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -112624283,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenAutoComplete.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenAutoComplete"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenAutoComplete.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 832036622,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenAxisTitle",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Represents the title configuration of a <see cref=\"T:Radzen.Blazor.AxisBase\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenAxisTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text displayed by the title.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenAxisTitle"
        }
      },
      {
        "HashCode": -819482819,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenAxisTitle",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Represents the title configuration of a <see cref=\"T:Radzen.Blazor.AxisBase\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenAxisTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text displayed by the title.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenAxisTitle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1793997722,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenBadge",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenBadge component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenBadge BadgeStyle=\"BadgeStyle.Primary\" Text=\"Primary\" /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenBadge"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BadgeStyle",
            "TypeName": "Radzen.BadgeStyle",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the badge style.\n            </summary>\n            <value>The badge style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "BadgeStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Variant",
            "TypeName": "Radzen.Variant",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the badge variant.\n            </summary>\n            <value>The badge variant.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Variant"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Shade",
            "TypeName": "Radzen.Shade",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the badge shade color.\n            </summary>\n            <value>The badge shade color.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Shade"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsPill",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this instance is pill.\n            </summary>\n            <value><c>true</c> if this instance is pill; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsPill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenBadge"
        }
      },
      {
        "HashCode": -383182955,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenBadge",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenBadge component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenBadge BadgeStyle=\"BadgeStyle.Primary\" Text=\"Primary\" /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenBadge"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BadgeStyle",
            "TypeName": "Radzen.BadgeStyle",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the badge style.\n            </summary>\n            <value>The badge style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "BadgeStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Variant",
            "TypeName": "Radzen.Variant",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the badge variant.\n            </summary>\n            <value>The badge variant.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Variant"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Shade",
            "TypeName": "Radzen.Shade",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the badge shade color.\n            </summary>\n            <value>The badge shade color.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Shade"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsPill",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this instance is pill.\n            </summary>\n            <value><c>true</c> if this instance is pill; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsPill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenBadge",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 815500032,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenBadge.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenBadge"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenBadge.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 407054260,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenBadge.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenBadge"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenBadge.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1560404724,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenBarOptions",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Common configuration of <see cref=\"T:Radzen.Blazor.RadzenBarSeries`1\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenBarOptions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the border radius of the bars. \n            </summary>\n            <value>The radius. Values greater than <c>0</c> make rounded corners.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Margin",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the margin between bars.\n            </summary>\n            <value>The margin. By default set to <c>10</c></value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Margin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Gets or sets the height of all bars in pixels. By default it is automatically calculated depending on the chart height.\n            </summary>\n            <value>The pixel height of the bar. By default set to <c>null</c></value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenBarOptions"
        }
      },
      {
        "HashCode": -970214845,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenBarOptions",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Common configuration of <see cref=\"T:Radzen.Blazor.RadzenBarSeries`1\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenBarOptions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the border radius of the bars. \n            </summary>\n            <value>The radius. Values greater than <c>0</c> make rounded corners.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Margin",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the margin between bars.\n            </summary>\n            <value>The margin. By default set to <c>10</c></value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Margin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Gets or sets the height of all bars in pixels. By default it is automatically calculated depending on the chart height.\n            </summary>\n            <value>The pixel height of the bar. By default set to <c>null</c></value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenBarOptions",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1718439083,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenBarSeries<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Renders bar series in <see cref=\"T:Radzen.Blazor.RadzenChart\" />.\n            </summary>\n            <typeparam name=\"TItem\">The type of the series data item.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenBarSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenBarSeries<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the fill (background color) of the bar series.\n            </summary>\n            <value>The fill.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fills",
            "TypeName": "System.Collections.Generic.IEnumerable<System.String>",
            "Documentation": "\n            <summary>\n            Specifies a list of colors that will be used to set the individual bar backgrounds.\n            </summary>\n            <value>The fills.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fills"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the stroke (border color) of the bar series.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Strokes",
            "TypeName": "System.Collections.Generic.IEnumerable<System.String>",
            "Documentation": "\n            <summary>\n            Specifies a list of colors that will be used to set the individual bar borders.\n            </summary>\n            <value>The strokes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Strokes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the width of the stroke (border).\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the line used to render the bar border.\n            </summary>\n            <value>The type of the line.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CategoryProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the X axis (a.k.a. category axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CategoryProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is visible.\n            Invisible series do not appear in the legend and cannot be shown by the user.\n            Use the <c>Visible</c> property to programatically show or hide a series.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Hidden",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is hidden.\n            Hidden series are initially invisible and the user can show them by clicking on their label in the legend.\n            Use the <c>Hidden</c> property to hide certain series from your users but still allow them to see them.\n            </summary>\n            <value><c>true</c> if hidden; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Hidden"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the Y axis (a.k.a. value axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RenderingOrder",
            "TypeName": "System.Int32",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "RenderingOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data of the series. The data is enumerated and its items are displayed by the series.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenBarSeries<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 178950760,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenBarSeries<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Renders bar series in <see cref=\"T:Radzen.Blazor.RadzenChart\" />.\n            </summary>\n            <typeparam name=\"TItem\">The type of the series data item.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenBarSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenBarSeries<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the fill (background color) of the bar series.\n            </summary>\n            <value>The fill.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fills",
            "TypeName": "System.Collections.Generic.IEnumerable<System.String>",
            "Documentation": "\n            <summary>\n            Specifies a list of colors that will be used to set the individual bar backgrounds.\n            </summary>\n            <value>The fills.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fills"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the stroke (border color) of the bar series.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Strokes",
            "TypeName": "System.Collections.Generic.IEnumerable<System.String>",
            "Documentation": "\n            <summary>\n            Specifies a list of colors that will be used to set the individual bar borders.\n            </summary>\n            <value>The strokes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Strokes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the width of the stroke (border).\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the line used to render the bar border.\n            </summary>\n            <value>The type of the line.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CategoryProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the X axis (a.k.a. category axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CategoryProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is visible.\n            Invisible series do not appear in the legend and cannot be shown by the user.\n            Use the <c>Visible</c> property to programatically show or hide a series.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Hidden",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is hidden.\n            Hidden series are initially invisible and the user can show them by clicking on their label in the legend.\n            Use the <c>Hidden</c> property to hide certain series from your users but still allow them to see them.\n            </summary>\n            <value><c>true</c> if hidden; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Hidden"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the Y axis (a.k.a. value axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RenderingOrder",
            "TypeName": "System.Int32",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "RenderingOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data of the series. The data is enumerated and its items are displayed by the series.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenBarSeries<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1697918007,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenBarSeries<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenBarSeries"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenBarSeries<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 607172820,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenBarSeries<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenBarSeries"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenBarSeries<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1193307850,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenBarSeries<TItem>.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "RadzenBarSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenBarSeries<TItem>.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1255432316,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenBarSeries<TItem>.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "Radzen.Blazor.RadzenBarSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenBarSeries<TItem>.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1175143974,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenBody",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenBody component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenBody"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenBody\" /> is expanded.\n            </summary>\n            <value><c>true</c> if expanded; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback raised when the component is expanded or collapsed.\n            </summary>\n            <value>The expanded changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenBody"
        }
      },
      {
        "HashCode": -1373491448,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenBody",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenBody component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenBody"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenBody\" /> is expanded.\n            </summary>\n            <value><c>true</c> if expanded; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets a callback raised when the component is expanded or collapsed.\n            </summary>\n            <value>The expanded changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenBody",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1142478975,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenBody.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenBody"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenBody.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1020247047,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenBody.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenBody"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenBody.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1769020182,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenBreadCrumb",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A component to display a Bread Crumb style menu\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenBreadCrumb"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenBreadCrumbItem>",
            "Documentation": "\n            <summary>\n            An optional RenderFragment that is rendered per Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenBreadCrumb"
        }
      },
      {
        "HashCode": -288451094,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenBreadCrumb",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A component to display a Bread Crumb style menu\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenBreadCrumb"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenBreadCrumbItem>",
            "Documentation": "\n            <summary>\n            An optional RenderFragment that is rendered per Item\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenBreadCrumb",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1508622432,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenBreadCrumb.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            An optional RenderFragment that is rendered per Item\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenBreadCrumb"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenBreadCrumb.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -483671622,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenBreadCrumb.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            An optional RenderFragment that is rendered per Item\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenBreadCrumb"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenBreadCrumb.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2136830475,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenBreadCrumb.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenBreadCrumb"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenBreadCrumb.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -486419949,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenBreadCrumb.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenBreadCrumb"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenBreadCrumb.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 805663491,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenBreadCrumbItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Bread Crumb Item Component\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenBreadCrumbItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The Displayed Text\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Path",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            An optional Link to be rendendered\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Path"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            An optional Icon to be rendered\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Template Parameter used only for this Item\n            Note: this overrides the <see cref=\"P:Radzen.Blazor.RadzenBreadCrumbItem.Template\" /> Cascading Parameter\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenBreadCrumbItem"
        }
      },
      {
        "HashCode": -1601118023,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenBreadCrumbItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Bread Crumb Item Component\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenBreadCrumbItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The Displayed Text\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Path",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            An optional Link to be rendendered\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Path"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            An optional Icon to be rendered\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Template Parameter used only for this Item\n            Note: this overrides the <see cref=\"P:Radzen.Blazor.RadzenBreadCrumbItem.Template\" /> Cascading Parameter\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenBreadCrumbItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1533813488,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenBreadCrumbItem.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Template Parameter used only for this Item\n            Note: this overrides the <see cref=\"P:Radzen.Blazor.RadzenBreadCrumbItem.Template\" /> Cascading Parameter\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenBreadCrumbItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenBreadCrumbItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1086009229,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenBreadCrumbItem.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Template Parameter used only for this Item\n            Note: this overrides the <see cref=\"P:Radzen.Blazor.RadzenBreadCrumbItem.Template\" /> Cascading Parameter\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenBreadCrumbItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenBreadCrumbItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1111628013,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenButton",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenButton component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenButton Click=@(args =&gt; Console.WriteLine(\"Button clicked\")) Text=\"Button\" /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Image",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the image.\n            </summary>\n            <value>The image.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Image"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ButtonStyle",
            "TypeName": "Radzen.ButtonStyle",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the button style.\n            </summary>\n            <value>The button style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ButtonStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ButtonType",
            "TypeName": "Radzen.ButtonType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the button.\n            </summary>\n            <value>The type of the button.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ButtonType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Variant",
            "TypeName": "Radzen.Variant",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the design variant of the button.\n            </summary>\n            <value>The variant of the button.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Variant"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Shade",
            "TypeName": "Radzen.Shade",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the color shade of the button.\n            </summary>\n            <value>The color shade of the button.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Shade"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "Radzen.ButtonSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the size.\n            </summary>\n            <value>The size.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenButton\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the click callback.\n            </summary>\n            <value>The click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsBusy",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this instance busy text is shown.\n            </summary>\n            <value><c>true</c> if this instance busy text is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsBusy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BusyText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the busy text.\n            </summary>\n            <value>The busy text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "BusyText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenButton"
        }
      },
      {
        "HashCode": 1907594250,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenButton",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenButton component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenButton Click=@(args =&gt; Console.WriteLine(\"Button clicked\")) Text=\"Button\" /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Image",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the image.\n            </summary>\n            <value>The image.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Image"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ButtonStyle",
            "TypeName": "Radzen.ButtonStyle",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the button style.\n            </summary>\n            <value>The button style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ButtonStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ButtonType",
            "TypeName": "Radzen.ButtonType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the button.\n            </summary>\n            <value>The type of the button.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ButtonType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Variant",
            "TypeName": "Radzen.Variant",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the design variant of the button.\n            </summary>\n            <value>The variant of the button.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Variant"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Shade",
            "TypeName": "Radzen.Shade",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the color shade of the button.\n            </summary>\n            <value>The color shade of the button.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Shade"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "Radzen.ButtonSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the size.\n            </summary>\n            <value>The size.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenButton\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the click callback.\n            </summary>\n            <value>The click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsBusy",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this instance busy text is shown.\n            </summary>\n            <value><c>true</c> if this instance busy text is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsBusy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BusyText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the busy text.\n            </summary>\n            <value>The busy text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "BusyText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenButton",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -882213864,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenButton.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 773047751,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenButton.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 970645454,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenCard",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenCard component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenCard"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenCard"
        }
      },
      {
        "HashCode": 696368369,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenCard",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenCard component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenCard"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenCard",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 820870207,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenCard.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenCard"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenCard.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 397888417,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenCard.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenCard"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenCard.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 58025900,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenChart",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays line, area, donut, pie, bar or column series.\n            </summary>\n            <example>\n            <code>\n              &lt;RadzenChart&gt;\n                  &lt;RadzenColumnSeries Data=@revenue CategoryProperty=\"Quarter\" ValueProperty=\"Revenue\" /&gt;\n              &lt;/RadzenChart&gt;\n              @code {\n                  class DataItem\n                  {\n                      public string Quarter { get; set; }\n                      public double Revenue { get; set; }\n                  }\n                  DataItem[] revenue = new DataItem[]\n                  {\n                      new DataItem { Quarter = \"Q1\", Revenue = 234000 },\n                      new DataItem { Quarter = \"Q2\", Revenue = 284000 },\n                      new DataItem { Quarter = \"Q3\", Revenue = 274000 },\n                      new DataItem { Quarter = \"Q4\", Revenue = 294000 }\n                  };\n              }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenChart"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ColorScheme",
            "TypeName": "Radzen.Blazor.ColorScheme",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the color scheme used to render the series.\n            </summary>\n            <value>The color scheme.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColorScheme"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SeriesClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.SeriesClickEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user clicks on a series. \n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SeriesClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LegendClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LegendClickEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user clicks on a legend. \n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LegendClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content. Used to specify series and other configuration.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenChart"
        }
      },
      {
        "HashCode": -506385909,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenChart",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays line, area, donut, pie, bar or column series.\n            </summary>\n            <example>\n            <code>\n              &lt;RadzenChart&gt;\n                  &lt;RadzenColumnSeries Data=@revenue CategoryProperty=\"Quarter\" ValueProperty=\"Revenue\" /&gt;\n              &lt;/RadzenChart&gt;\n              @code {\n                  class DataItem\n                  {\n                      public string Quarter { get; set; }\n                      public double Revenue { get; set; }\n                  }\n                  DataItem[] revenue = new DataItem[]\n                  {\n                      new DataItem { Quarter = \"Q1\", Revenue = 234000 },\n                      new DataItem { Quarter = \"Q2\", Revenue = 284000 },\n                      new DataItem { Quarter = \"Q3\", Revenue = 274000 },\n                      new DataItem { Quarter = \"Q4\", Revenue = 294000 }\n                  };\n              }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenChart"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ColorScheme",
            "TypeName": "Radzen.Blazor.ColorScheme",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the color scheme used to render the series.\n            </summary>\n            <value>The color scheme.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColorScheme"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SeriesClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.SeriesClickEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user clicks on a series. \n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SeriesClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LegendClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LegendClickEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user clicks on a legend. \n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LegendClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content. Used to specify series and other configuration.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenChart",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2056062119,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenChart.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content. Used to specify series and other configuration.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenChart"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenChart.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -464197168,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenChart.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content. Used to specify series and other configuration.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenChart"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenChart.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 510941531,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenChartTooltipOptions",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Contains <see cref=\"T:Radzen.Blazor.RadzenChart\" /> tooltip configuration.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenChartTooltipOptions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to show tooltips. By defaults RadzenChart displays tooltips.\n            </summary>\n            <value><c>true</c> to display tooltips; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS style of the tooltip.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenChartTooltipOptions"
        }
      },
      {
        "HashCode": -1406056045,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenChartTooltipOptions",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Contains <see cref=\"T:Radzen.Blazor.RadzenChart\" /> tooltip configuration.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenChartTooltipOptions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to show tooltips. By defaults RadzenChart displays tooltips.\n            </summary>\n            <value><c>true</c> to display tooltips; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS style of the tooltip.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenChartTooltipOptions",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -868961819,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenCheckBox<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenCheckBox component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenCheckBox @bind-Value=@someValue TValue=\"bool\" Change=@(args =&gt; Console.WriteLine($\"Is checked: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenCheckBox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenCheckBox<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TriState",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether is tri-state (true, false or null).\n            </summary>\n            <value><c>true</c> if tri-state; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TriState"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenCheckBox<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1292863828,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenCheckBox<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenCheckBox component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenCheckBox @bind-Value=@someValue TValue=\"bool\" Change=@(args =&gt; Console.WriteLine($\"Is checked: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenCheckBox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenCheckBox<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TriState",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether is tri-state (true, false or null).\n            </summary>\n            <value><c>true</c> if tri-state; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TriState"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenCheckBox<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -815738250,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenCheckBoxList<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenCheckBoxList component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenCheckBoxList @bind-Value=@checkedValues TValue=\"int\" &gt;\n                &lt;Items&gt;\n                    &lt;RadzenCheckBoxListItem Text=\"Orders\" Value=\"1\" /&gt;\n                    &lt;RadzenCheckBoxListItem Text=\"Employees\" Value=\"2\" /&gt;\n                &lt;/Items&gt;\n            &lt;/RadzenCheckBoxList&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenCheckBoxList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenCheckBoxList<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value property.\n            </summary>\n            <value>The value property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text property.\n            </summary>\n            <value>The text property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelectAll",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the user can select all values. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if select all values is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelectAll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectAllText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the select all text.\n            </summary>\n            <value>The select all text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectAllText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Gets or sets the data used to generate items.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Orientation",
            "TypeName": "Radzen.Orientation",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the orientation.\n            </summary>\n            <value>The orientation.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Orientation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the items that will be concatenated with generated items from Data.\n            </summary>\n            <value>The items.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Collections.Generic.IEnumerable<TValue>>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenCheckBoxList<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -480502030,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenCheckBoxList<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenCheckBoxList component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenCheckBoxList @bind-Value=@checkedValues TValue=\"int\" &gt;\n                &lt;Items&gt;\n                    &lt;RadzenCheckBoxListItem Text=\"Orders\" Value=\"1\" /&gt;\n                    &lt;RadzenCheckBoxListItem Text=\"Employees\" Value=\"2\" /&gt;\n                &lt;/Items&gt;\n            &lt;/RadzenCheckBoxList&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenCheckBoxList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenCheckBoxList<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value property.\n            </summary>\n            <value>The value property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text property.\n            </summary>\n            <value>The text property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelectAll",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the user can select all values. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if select all values is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelectAll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectAllText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the select all text.\n            </summary>\n            <value>The select all text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectAllText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Gets or sets the data used to generate items.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Orientation",
            "TypeName": "Radzen.Orientation",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the orientation.\n            </summary>\n            <value>The orientation.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Orientation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the items that will be concatenated with generated items from Data.\n            </summary>\n            <value>The items.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Collections.Generic.IEnumerable<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Collections.Generic.IEnumerable<TValue>>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenCheckBoxList<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 272890034,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenCheckBoxList<TValue>.Items",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the items that will be concatenated with generated items from Data.\n            </summary>\n            <value>The items.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Items",
            "ParentTag": "RadzenCheckBoxList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenCheckBoxList<TValue>.Items",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1595233498,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenCheckBoxList<TValue>.Items",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the items that will be concatenated with generated items from Data.\n            </summary>\n            <value>The items.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Items",
            "ParentTag": "Radzen.Blazor.RadzenCheckBoxList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenCheckBoxList<TValue>.Items",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -968130825,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenCheckBoxListItem<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenCheckBoxListItem component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenCheckBoxListItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenCheckBoxListItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenCheckBoxListItem`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenCheckBoxListItem<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 339735347,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenCheckBoxListItem<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenCheckBoxListItem component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenCheckBoxListItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenCheckBoxListItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenCheckBoxListItem`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenCheckBoxListItem<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -589696719,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenColorPicker",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenColorPicker component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenColorPicker @bind-Value=@color Change=@(args =&gt; Console.WriteLine($\"Selected color: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenColorPicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Open",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Documentation": "\n            <summary>\n            Gets or sets the open callback.\n            </summary>\n            <value>The open callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Open",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Close",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Documentation": "\n            <summary>\n            Gets or sets the close callback.\n            </summary>\n            <value>The close callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Close",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HexText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the hexadecimal color label text.\n            </summary>\n            <value>The hexadecimal text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HexText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RedText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the red color label text.\n            </summary>\n            <value>The red text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RedText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreenText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the green color label text.\n            </summary>\n            <value>The green text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GreenText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BlueText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the blue color label text.\n            </summary>\n            <value>The blue text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "BlueText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AlphaText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the alpha label text.\n            </summary>\n            <value>The alpha text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AlphaText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ButtonText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the button text.\n            </summary>\n            <value>The button text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ButtonText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether button is shown.\n            </summary>\n            <value><c>true</c> if button shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowHSV",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether HSV is shown.\n            </summary>\n            <value><c>true</c> if HSV is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowHSV"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowRGBA",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether RGBA is shown.\n            </summary>\n            <value><c>true</c> if RGBA is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowRGBA"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowColors",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether colors are shown.\n            </summary>\n            <value><c>true</c> if colors are shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowColors"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PopupRenderMode",
            "TypeName": "Radzen.PopupRenderMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the render mode.\n            </summary>\n            <value>The render mode.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PopupRenderMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenColorPicker"
        }
      },
      {
        "HashCode": -230240770,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenColorPicker",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenColorPicker component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenColorPicker @bind-Value=@color Change=@(args =&gt; Console.WriteLine($\"Selected color: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenColorPicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Open",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Documentation": "\n            <summary>\n            Gets or sets the open callback.\n            </summary>\n            <value>The open callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Open",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Close",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Documentation": "\n            <summary>\n            Gets or sets the close callback.\n            </summary>\n            <value>The close callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Close",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HexText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the hexadecimal color label text.\n            </summary>\n            <value>The hexadecimal text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HexText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RedText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the red color label text.\n            </summary>\n            <value>The red text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RedText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreenText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the green color label text.\n            </summary>\n            <value>The green text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GreenText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BlueText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the blue color label text.\n            </summary>\n            <value>The blue text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "BlueText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AlphaText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the alpha label text.\n            </summary>\n            <value>The alpha text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AlphaText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ButtonText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the button text.\n            </summary>\n            <value>The button text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ButtonText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether button is shown.\n            </summary>\n            <value><c>true</c> if button shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowHSV",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether HSV is shown.\n            </summary>\n            <value><c>true</c> if HSV is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowHSV"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowRGBA",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether RGBA is shown.\n            </summary>\n            <value><c>true</c> if RGBA is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowRGBA"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowColors",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether colors are shown.\n            </summary>\n            <value><c>true</c> if colors are shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowColors"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PopupRenderMode",
            "TypeName": "Radzen.PopupRenderMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the render mode.\n            </summary>\n            <value>The render mode.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PopupRenderMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenColorPicker",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 783741914,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenColorPicker.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenColorPicker"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenColorPicker.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2010768737,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenColorPicker.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenColorPicker"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenColorPicker.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1786705443,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenColorPickerItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenColorPickerItem component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenColorPickerItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenColorPickerItem"
        }
      },
      {
        "HashCode": -1554552969,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenColorPickerItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenColorPickerItem component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenColorPickerItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenColorPickerItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1866793442,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenColumnOptions",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Common configuration of <see cref=\"T:Radzen.Blazor.RadzenColumnSeries`1\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenColumnOptions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the border radius of the bars. \n            </summary>\n            <value>The radius. Values greater than <c>0</c> make rounded corners.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Margin",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the margin between columns.\n            </summary>\n            <value>The margin. By default set to <c>10</c></value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Margin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Gets or sets the width of all columns in pixels. By default it is automatically calculated depending on the chart width.\n            </summary>\n            <value>The pixel width of the column. By default set to <c>null</c></value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenColumnOptions"
        }
      },
      {
        "HashCode": 1943853012,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenColumnOptions",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Common configuration of <see cref=\"T:Radzen.Blazor.RadzenColumnSeries`1\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenColumnOptions"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the border radius of the bars. \n            </summary>\n            <value>The radius. Values greater than <c>0</c> make rounded corners.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Margin",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the margin between columns.\n            </summary>\n            <value>The margin. By default set to <c>10</c></value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Margin"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Gets or sets the width of all columns in pixels. By default it is automatically calculated depending on the chart width.\n            </summary>\n            <value>The pixel width of the column. By default set to <c>null</c></value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenColumnOptions",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1564768213,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenColumnSeries<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Renders column series in <see cref=\"T:Radzen.Blazor.RadzenChart\" />\n            </summary>\n            <typeparam name=\"TItem\">The type of the series data item.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenColumnSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenColumnSeries<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the fill (background color) of the column series.\n            </summary>\n            <value>The fill.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fills",
            "TypeName": "System.Collections.Generic.IEnumerable<System.String>",
            "Documentation": "\n            <summary>\n            Specifies a list of colors that will be used to set the individual column backgrounds.\n            </summary>\n            <value>The fills.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fills"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the stroke (border color) of the column series.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Strokes",
            "TypeName": "System.Collections.Generic.IEnumerable<System.String>",
            "Documentation": "\n            <summary>\n            Specifies a list of colors that will be used to set the individual column borders.\n            </summary>\n            <value>The strokes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Strokes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the width of the stroke (border).\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the line used to render the column border.\n            </summary>\n            <value>The type of the line.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CategoryProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the X axis (a.k.a. category axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CategoryProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is visible.\n            Invisible series do not appear in the legend and cannot be shown by the user.\n            Use the <c>Visible</c> property to programatically show or hide a series.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Hidden",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is hidden.\n            Hidden series are initially invisible and the user can show them by clicking on their label in the legend.\n            Use the <c>Hidden</c> property to hide certain series from your users but still allow them to see them.\n            </summary>\n            <value><c>true</c> if hidden; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Hidden"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the Y axis (a.k.a. value axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RenderingOrder",
            "TypeName": "System.Int32",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "RenderingOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data of the series. The data is enumerated and its items are displayed by the series.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenColumnSeries<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1270613061,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenColumnSeries<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Renders column series in <see cref=\"T:Radzen.Blazor.RadzenChart\" />\n            </summary>\n            <typeparam name=\"TItem\">The type of the series data item.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenColumnSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenColumnSeries<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the fill (background color) of the column series.\n            </summary>\n            <value>The fill.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fills",
            "TypeName": "System.Collections.Generic.IEnumerable<System.String>",
            "Documentation": "\n            <summary>\n            Specifies a list of colors that will be used to set the individual column backgrounds.\n            </summary>\n            <value>The fills.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fills"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the stroke (border color) of the column series.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Strokes",
            "TypeName": "System.Collections.Generic.IEnumerable<System.String>",
            "Documentation": "\n            <summary>\n            Specifies a list of colors that will be used to set the individual column borders.\n            </summary>\n            <value>The strokes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Strokes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the width of the stroke (border).\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the line used to render the column border.\n            </summary>\n            <value>The type of the line.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CategoryProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the X axis (a.k.a. category axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CategoryProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is visible.\n            Invisible series do not appear in the legend and cannot be shown by the user.\n            Use the <c>Visible</c> property to programatically show or hide a series.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Hidden",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is hidden.\n            Hidden series are initially invisible and the user can show them by clicking on their label in the legend.\n            Use the <c>Hidden</c> property to hide certain series from your users but still allow them to see them.\n            </summary>\n            <value><c>true</c> if hidden; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Hidden"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the Y axis (a.k.a. value axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RenderingOrder",
            "TypeName": "System.Int32",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "RenderingOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data of the series. The data is enumerated and its items are displayed by the series.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenColumnSeries<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -221451752,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenColumnSeries<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenColumnSeries"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenColumnSeries<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1916975251,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenColumnSeries<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenColumnSeries"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenColumnSeries<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 114987685,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenColumnSeries<TItem>.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "RadzenColumnSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenColumnSeries<TItem>.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 205940585,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenColumnSeries<TItem>.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "Radzen.Blazor.RadzenColumnSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenColumnSeries<TItem>.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1385699664,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenCompareValidator",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A validator component which compares a component value with a specified value.\n            Must be placed inside a <see cref=\"T:Radzen.Blazor.RadzenTemplateForm`1\" />\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTemplateForm TItem=\"Model\" Data=@model&gt;\n               &lt;RadzenPassword style=\"display: block\" Name=\"Password\" @bind-Value=@model.Password /&gt;\n               &lt;RadzenPassword style=\"display: block\" Name=\"RepeatPassword\" @bind-Value=@model.RepeatPassword /&gt;\n               &lt;RadzenCompareValidator Value=@model.Password Component=\"RepeatPassword\" Text=\"Passwords should be the same\"  Style=\"position: absolute\" /&gt;\n            &lt;/RadzenTemplateForm&gt;\n            @code {\n               class Model\n               {\n                 public string Password { get; set; }\n                 public double Value { get; set; }\n                 public string RepeatPassword { get; set; }\n               } \n               Model model = new Model();\n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenCompareValidator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the message displayed when the component is invalid. Set to <c>\"Value should match\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the value to compare with.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Operator",
            "TypeName": "Radzen.Blazor.CompareOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the comparison operator. Set to <c>CompareOperator.Equal</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Operator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Component",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the component which this validator should validate. Must be set to the <see cref=\"P:Radzen.IRadzenFormComponent.Name\" /> of an existing component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Component"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Popup",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if the validator is displayed as a popup or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Popup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenCompareValidator"
        }
      },
      {
        "HashCode": -79714403,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenCompareValidator",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A validator component which compares a component value with a specified value.\n            Must be placed inside a <see cref=\"T:Radzen.Blazor.RadzenTemplateForm`1\" />\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTemplateForm TItem=\"Model\" Data=@model&gt;\n               &lt;RadzenPassword style=\"display: block\" Name=\"Password\" @bind-Value=@model.Password /&gt;\n               &lt;RadzenPassword style=\"display: block\" Name=\"RepeatPassword\" @bind-Value=@model.RepeatPassword /&gt;\n               &lt;RadzenCompareValidator Value=@model.Password Component=\"RepeatPassword\" Text=\"Passwords should be the same\"  Style=\"position: absolute\" /&gt;\n            &lt;/RadzenTemplateForm&gt;\n            @code {\n               class Model\n               {\n                 public string Password { get; set; }\n                 public double Value { get; set; }\n                 public string RepeatPassword { get; set; }\n               } \n               Model model = new Model();\n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenCompareValidator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the message displayed when the component is invalid. Set to <c>\"Value should match\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the value to compare with.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Operator",
            "TypeName": "Radzen.Blazor.CompareOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the comparison operator. Set to <c>CompareOperator.Equal</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Operator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Component",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the component which this validator should validate. Must be set to the <see cref=\"P:Radzen.IRadzenFormComponent.Name\" /> of an existing component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Component"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Popup",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if the validator is displayed as a popup or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Popup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenCompareValidator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -332983157,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenContent component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Container",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the container.\n            </summary>\n            <value>The container.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Container"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenContent"
        }
      },
      {
        "HashCode": 1677725079,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenContent component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenContent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Container",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the container.\n            </summary>\n            <value>The container.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Container"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1354674201,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenContent.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -523285766,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenContent.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenContent"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenContent.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1229441698,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenContentContainer",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenContentContainer component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenContentContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenContentContainer"
        }
      },
      {
        "HashCode": -1733122150,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenContentContainer",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenContentContainer component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenContentContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenContentContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1107389344,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenContentContainer.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenContentContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenContentContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -689211621,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenContentContainer.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenContentContainer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenContentContainer.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1079786560,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenContextMenu",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenContextMenu component.\n            </summary>\n            <example>\n            <code>\n            @inject ContextMenuService ContextMenuService\n            \n            &lt;RadzenButton Text=\"Show context menu\" ContextMenu=@(args =&gt; ShowContextMenuWithItems(args)) /&gt;\n            \n            @code {\n              void ShowContextMenuWithItems(MouseEventArgs args)\n              {\n                ContextMenuService.Open(args,\n                    new List&lt;ContextMenuItem&gt; {\n                        new ContextMenuItem() { Text = \"Context menu item 1\", Value = 1 },\n                        new ContextMenuItem() { Text = \"Context menu item 2\", Value = 2 },\n                        new ContextMenuItem() { Text = \"Context menu item 3\", Value = 3 },\n                 }, OnMenuItemClick);\n              }\n              \n              void OnMenuItemClick(MenuItemEventArgs args)\n              {\n                Console.WriteLine($\"Menu item with Value={args.Value} clicked\");\n              }\n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenContextMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenContextMenu"
        }
      },
      {
        "HashCode": 990653621,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenContextMenu",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenContextMenu component.\n            </summary>\n            <example>\n            <code>\n            @inject ContextMenuService ContextMenuService\n            \n            &lt;RadzenButton Text=\"Show context menu\" ContextMenu=@(args =&gt; ShowContextMenuWithItems(args)) /&gt;\n            \n            @code {\n              void ShowContextMenuWithItems(MouseEventArgs args)\n              {\n                ContextMenuService.Open(args,\n                    new List&lt;ContextMenuItem&gt; {\n                        new ContextMenuItem() { Text = \"Context menu item 1\", Value = 1 },\n                        new ContextMenuItem() { Text = \"Context menu item 2\", Value = 2 },\n                        new ContextMenuItem() { Text = \"Context menu item 3\", Value = 3 },\n                 }, OnMenuItemClick);\n              }\n              \n              void OnMenuItemClick(MenuItemEventArgs args)\n              {\n                Console.WriteLine($\"Menu item with Value={args.Value} clicked\");\n              }\n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenContextMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenContextMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1560857839,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataFilter<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenDataFilter component.\n            </summary>\n            <typeparam name=\"TItem\">The type of the item.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDataFilter"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataFilter<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Properties",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the properties.\n            </summary>\n            <value>The properties.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Properties",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Auto",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this filter is automatic.\n            </summary>\n            <value><c>true</c> if filter automatic; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Auto"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogicalFilterOperator",
            "TypeName": "Radzen.LogicalFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the logical filter operator.\n            </summary>\n            <value>The logical filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogicalFilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCaseSensitivity",
            "TypeName": "Radzen.FilterCaseSensitivity",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter case sensitivity.\n            </summary>\n            <value>The filter case sensitivity.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterCaseSensitivity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the filter text.\n            </summary>\n            <value>The filter text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnumFilterSelectText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the enum filter select text.\n            </summary>\n            <value>The enum filter select text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnumFilterSelectText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AndOperatorText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the and operator text.\n            </summary>\n            <value>The and operator text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AndOperatorText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OrOperatorText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the or operator text.\n            </summary>\n            <value>The or operator text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "OrOperatorText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApplyFilterText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the apply filter text.\n            </summary>\n            <value>The apply filter text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApplyFilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ClearFilterText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the clear filter text.\n            </summary>\n            <value>The clear filter text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ClearFilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AddFilterText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the add filter text.\n            </summary>\n            <value>The add filter text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AddFilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RemoveFilterText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the remove filter text.\n            </summary>\n            <value>The remove filter text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RemoveFilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AddFilterGroupText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the add filter group text.\n            </summary>\n            <value>The add filter group text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AddFilterGroupText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EqualsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the equals text.\n            </summary>\n            <value>The equals text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotEqualsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the not equals text.\n            </summary>\n            <value>The not equals text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotEqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LessThanText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the less than text.\n            </summary>\n            <value>The less than text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LessThanText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LessThanOrEqualsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the less than or equals text.\n            </summary>\n            <value>The less than or equals text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LessThanOrEqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreaterThanText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the greater than text.\n            </summary>\n            <value>The greater than text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GreaterThanText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreaterThanOrEqualsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the greater than or equals text.\n            </summary>\n            <value>The greater than or equals text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GreaterThanOrEqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndsWithText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the ends with text.\n            </summary>\n            <value>The ends with text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EndsWithText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContainsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the contains text.\n            </summary>\n            <value>The contains text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContainsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DoesNotContainText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the does not contain text.\n            </summary>\n            <value>The does not contain text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "DoesNotContainText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartsWithText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the starts with text.\n            </summary>\n            <value>The starts with text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartsWithText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsNotNullText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the not null text.\n            </summary>\n            <value>The not null text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsNotNullText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsNullText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the is null text.\n            </summary>\n            <value>The null text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsNullText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsEmptyText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the is empty text.\n            </summary>\n            <value>The empty text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsEmptyText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsNotEmptyText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the is not empty text.\n            </summary>\n            <value>The not empty text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsNotEmptyText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ViewChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Linq.IQueryable<TItem>>",
            "Metadata": {
              "Common.PropertyName": "ViewChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDateFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the filter date format.\n            </summary>\n            <value>The filter date format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterDateFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataFilter<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1855490989,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataFilter<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenDataFilter component.\n            </summary>\n            <typeparam name=\"TItem\">The type of the item.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDataFilter"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataFilter<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Properties",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the properties.\n            </summary>\n            <value>The properties.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Properties",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Auto",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this filter is automatic.\n            </summary>\n            <value><c>true</c> if filter automatic; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Auto"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogicalFilterOperator",
            "TypeName": "Radzen.LogicalFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the logical filter operator.\n            </summary>\n            <value>The logical filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogicalFilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCaseSensitivity",
            "TypeName": "Radzen.FilterCaseSensitivity",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter case sensitivity.\n            </summary>\n            <value>The filter case sensitivity.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterCaseSensitivity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the filter text.\n            </summary>\n            <value>The filter text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnumFilterSelectText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the enum filter select text.\n            </summary>\n            <value>The enum filter select text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnumFilterSelectText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AndOperatorText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the and operator text.\n            </summary>\n            <value>The and operator text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AndOperatorText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OrOperatorText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the or operator text.\n            </summary>\n            <value>The or operator text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "OrOperatorText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApplyFilterText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the apply filter text.\n            </summary>\n            <value>The apply filter text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApplyFilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ClearFilterText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the clear filter text.\n            </summary>\n            <value>The clear filter text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ClearFilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AddFilterText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the add filter text.\n            </summary>\n            <value>The add filter text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AddFilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RemoveFilterText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the remove filter text.\n            </summary>\n            <value>The remove filter text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RemoveFilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AddFilterGroupText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the add filter group text.\n            </summary>\n            <value>The add filter group text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AddFilterGroupText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EqualsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the equals text.\n            </summary>\n            <value>The equals text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotEqualsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the not equals text.\n            </summary>\n            <value>The not equals text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotEqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LessThanText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the less than text.\n            </summary>\n            <value>The less than text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LessThanText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LessThanOrEqualsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the less than or equals text.\n            </summary>\n            <value>The less than or equals text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LessThanOrEqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreaterThanText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the greater than text.\n            </summary>\n            <value>The greater than text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GreaterThanText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreaterThanOrEqualsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the greater than or equals text.\n            </summary>\n            <value>The greater than or equals text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GreaterThanOrEqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndsWithText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the ends with text.\n            </summary>\n            <value>The ends with text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EndsWithText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContainsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the contains text.\n            </summary>\n            <value>The contains text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContainsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DoesNotContainText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the does not contain text.\n            </summary>\n            <value>The does not contain text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "DoesNotContainText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartsWithText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the starts with text.\n            </summary>\n            <value>The starts with text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartsWithText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsNotNullText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the not null text.\n            </summary>\n            <value>The not null text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsNotNullText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsNullText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the is null text.\n            </summary>\n            <value>The null text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsNullText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsEmptyText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the is empty text.\n            </summary>\n            <value>The empty text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsEmptyText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsNotEmptyText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the is not empty text.\n            </summary>\n            <value>The not empty text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsNotEmptyText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ViewChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Linq.IQueryable<TItem>>",
            "Metadata": {
              "Common.PropertyName": "ViewChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDateFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the filter date format.\n            </summary>\n            <value>The filter date format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterDateFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataFilter<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 664034045,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataFilter<TItem>.Properties",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the properties.\n            </summary>\n            <value>The properties.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Properties",
            "ParentTag": "RadzenDataFilter"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataFilter<TItem>.Properties",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 79785251,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataFilter<TItem>.Properties",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the properties.\n            </summary>\n            <value>The properties.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Properties",
            "ParentTag": "Radzen.Blazor.RadzenDataFilter"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataFilter<TItem>.Properties",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1311794748,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataFilterProperty<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenDataFilterProperty component.\n            Must be placed inside a <see cref=\"T:Radzen.Blazor.RadzenDataFilter`1\" />\n            </summary>\n            <typeparam name=\"TItem\">The type of the DataFilter item.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDataFilterProperty"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataFilterProperty<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format string.\n            </summary>\n            <value>The format string.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the title.\n            </summary>\n            <value>The title.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Property",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the property name.\n            </summary>\n            <value>The property name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Property"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterValue",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the filter value.\n            </summary>\n            <value>The filter value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenDataFilterProperty<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the filter template.\n            </summary>\n            <value>The filter template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the data type.\n            </summary>\n            <value>The data type.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "Radzen.FilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter operator.\n            </summary>\n            <value>The filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataFilterProperty<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1894209521,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataFilterProperty<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenDataFilterProperty component.\n            Must be placed inside a <see cref=\"T:Radzen.Blazor.RadzenDataFilter`1\" />\n            </summary>\n            <typeparam name=\"TItem\">The type of the DataFilter item.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDataFilterProperty"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataFilterProperty<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format string.\n            </summary>\n            <value>The format string.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the title.\n            </summary>\n            <value>The title.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Property",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the property name.\n            </summary>\n            <value>The property name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Property"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterValue",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the filter value.\n            </summary>\n            <value>The filter value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenDataFilterProperty<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the filter template.\n            </summary>\n            <value>The filter template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the data type.\n            </summary>\n            <value>The data type.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "Radzen.FilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter operator.\n            </summary>\n            <value>The filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataFilterProperty<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1547574460,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataFilterProperty<TItem>.FilterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the filter template.\n            </summary>\n            <value>The filter template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FilterTemplate",
            "ParentTag": "RadzenDataFilterProperty"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'FilterTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataFilterProperty<TItem>.FilterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1698811454,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataFilterProperty<TItem>.FilterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the filter template.\n            </summary>\n            <value>The filter template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FilterTemplate",
            "ParentTag": "Radzen.Blazor.RadzenDataFilterProperty"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'FilterTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataFilterProperty<TItem>.FilterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1822226479,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataGrid<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenDataGrid component.\n            </summary>\n            <typeparam name=\"TItem\">The type of the DataGrid data item.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenDataGrid @data=@orders TItem=\"Order\" AllowSorting=\"true\" AllowPaging=\"true\" AllowFiltering=\"true\"&gt;\n                &lt;Columns&gt;\n                    &lt;RadzenDataGridColumn TItem=\"Order\" Property=\"OrderId\" Title=\"OrderId\" /&gt;\n                    &lt;RadzenDataGridColumn TItem=\"Order\" Property=\"OrderDate\" Title=\"OrderDate\" /&gt;\n                &lt;/Columns&gt;\n            &lt;/RadzenDataGrid&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDataGrid"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataGrid<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadChildData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridLoadChildDataEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the load child data callback.\n            </summary>\n            <value>The load child data callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadChildData",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowCompositeDataCells",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether DataGrid data cells will follow the header cells structure in composite columns.\n            </summary>\n            <value><c>true</c> if DataGrid data cells will follow the header cells structure in composite columns; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowCompositeDataCells"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowEmptyMessage",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether DataGrid data body show empty message.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowEmptyMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Responsive",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether DataGrid is responsive.\n            </summary>\n            <value><c>true</c> if DataGrid is Responsive; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Responsive"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Density",
            "TypeName": "Radzen.Density",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating DataGrid density.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Density"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Group",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridColumnGroupEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the column group callback.\n            </summary>\n            <value>The column group callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Group",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the columns.\n            </summary>\n            <value>The columns.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PickedColumnsChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridPickedColumnsChangedEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the picked columns changed callback.\n            </summary>\n            <value>The picked columns changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PickedColumnsChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sort",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridColumnSortEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the column sort callback.\n            </summary>\n            <value>The column sort callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Sort",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Filter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridColumnFilterEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the column filter callback.\n            </summary>\n            <value>The column filter callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Filter",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCleared",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridColumnFilterEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the column filter cleared callback.\n            </summary>\n            <value>The column filter callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterCleared",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogicalFilterOperator",
            "TypeName": "Radzen.LogicalFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the logical filter operator.\n            </summary>\n            <value>The logical filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogicalFilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterMode",
            "TypeName": "Radzen.FilterMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter mode.\n            </summary>\n            <value>The filter mode.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandMode",
            "TypeName": "Radzen.DataGridExpandMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the expand mode.\n            </summary>\n            <value>The expand mode.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpandMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowExpandColumn",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets whether the expandable indicator column is visible.\n            </summary>\n            <value>The expandable indicator column visibility.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowExpandColumn"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditMode",
            "TypeName": "Radzen.DataGridEditMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the edit mode.\n            </summary>\n            <value>The edit mode.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the filter text.\n            </summary>\n            <value>The filter text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnumFilterSelectText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the enum filter select text.\n            </summary>\n            <value>The enum filter select text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnumFilterSelectText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AndOperatorText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the and operator text.\n            </summary>\n            <value>The and operator text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AndOperatorText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OrOperatorText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the or operator text.\n            </summary>\n            <value>The or operator text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "OrOperatorText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApplyFilterText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the apply filter text.\n            </summary>\n            <value>The apply filter text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApplyFilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ClearFilterText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the clear filter text.\n            </summary>\n            <value>The clear filter text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ClearFilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EqualsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the equals text.\n            </summary>\n            <value>The equals text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotEqualsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the not equals text.\n            </summary>\n            <value>The not equals text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotEqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LessThanText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the less than text.\n            </summary>\n            <value>The less than text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LessThanText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LessThanOrEqualsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the less than or equals text.\n            </summary>\n            <value>The less than or equals text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LessThanOrEqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreaterThanText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the greater than text.\n            </summary>\n            <value>The greater than text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GreaterThanText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreaterThanOrEqualsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the greater than or equals text.\n            </summary>\n            <value>The greater than or equals text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GreaterThanOrEqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndsWithText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the ends with text.\n            </summary>\n            <value>The ends with text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EndsWithText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContainsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the contains text.\n            </summary>\n            <value>The contains text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContainsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DoesNotContainText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the does not contain text.\n            </summary>\n            <value>The does not contain text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "DoesNotContainText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartsWithText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the starts with text.\n            </summary>\n            <value>The starts with text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartsWithText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsNotNullText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the not null text.\n            </summary>\n            <value>The not null text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsNotNullText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsNullText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the is null text.\n            </summary>\n            <value>The null text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsNullText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsEmptyText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the is empty text.\n            </summary>\n            <value>The empty text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsEmptyText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsNotEmptyText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the is not empty text.\n            </summary>\n            <value>The not empty text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsNotEmptyText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCaseSensitivity",
            "TypeName": "Radzen.FilterCaseSensitivity",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter case sensitivity.\n            </summary>\n            <value>The filter case sensitivity.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterCaseSensitivity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDelay",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the filter delay.\n            </summary>\n            <value>The filter delay.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterDelay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDateFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the filter date format.\n            </summary>\n            <value>The filter date format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterDateFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnWidth",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the width of all columns.\n            </summary>\n            <value>The width of the columns.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EmptyText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the empty text shown when Data is empty collection.\n            </summary>\n            <value>The empty text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EmptyText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EmptyTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the empty template shown when Data is empty collection.\n            </summary>\n            <value>The empty template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EmptyTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowVirtualization",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this instance is virtualized.\n            </summary>\n            <value><c>true</c> if this instance is virtualized; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowVirtualization"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsLoading",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this instance loading indicator is shown.\n            </summary>\n            <value><c>true</c> if this instance loading indicator is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsLoading"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSorting",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether sorting is allowed.\n            </summary>\n            <value><c>true</c> if sorting is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSorting"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowMultiColumnSorting",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether multi column sorting is allowed.\n            </summary>\n            <value><c>true</c> if multi column sorting is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowMultiColumnSorting"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowMultiColumnSortingIndex",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether multi column sorting index is shown.\n            </summary>\n            <value><c>true</c> if multi column sorting index is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowMultiColumnSortingIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowFiltering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether filtering is allowed.\n            </summary>\n            <value><c>true</c> if filtering is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowFiltering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowColumnResize",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether column resizing is allowed.\n            </summary>\n            <value><c>true</c> if column resizing is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowColumnResize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowColumnReorder",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether column reorder is allowed.\n            </summary>\n            <value><c>true</c> if column reorder is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowColumnReorder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowColumnPicking",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether column picking is allowed.\n            </summary>\n            <value><c>true</c> if column picking is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowColumnPicking"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnsShowingText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the column picker columns showing text.\n            </summary>\n            <value>The column picker columns showing text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnsShowingText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllColumnsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the column picker all columns text.\n            </summary>\n            <value>The column picker all columns text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllColumnsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the column picker columns text.\n            </summary>\n            <value>The column picker columns text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowPickAllColumns",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether user can pick all columns in column picker.\n            </summary>\n            <value><c>true</c> if pick of all columns is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowPickAllColumns"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowGrouping",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether grouping is allowed.\n            </summary>\n            <value><c>true</c> if grouping is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowGrouping"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideGroupedColumn",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether grouped column should be hidden.\n            </summary>\n            <value><c>true</c> if grouped columns should be hidden; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HideGroupedColumn"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupFootersAlwaysVisible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether group footers are visible even when the group is collapsed.\n            </summary>\n            <value><c>true</c> if group footers are visible when the group is collapsed otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupFootersAlwaysVisible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupHeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Group>",
            "Documentation": "\n            <summary>\n            Gets or sets the group header template.\n            </summary>\n            <value>The group header template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupHeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupPanelText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the group panel text.\n            </summary>\n            <value>The group panel text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupPanelText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnResized",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridColumnResizedEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the column resized callback.\n            </summary>\n            <value>The column resized callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnResized",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnReordered",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridColumnReorderedEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the column reordered callback.\n            </summary>\n            <value>The column reordered callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnReordered",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Collections.Generic.IList<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the selected item.\n            </summary>\n            <value>The selected item.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IList<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed callback.\n            </summary>\n            <value>The value changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowSelect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the row select callback.\n            </summary>\n            <value>The row select callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowSelect",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowDeselect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the row deselect callback.\n            </summary>\n            <value>The row deselect callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowDeselect",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridRowMouseEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the row click callback.\n            </summary>\n            <value>The row click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowClick",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowDoubleClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridRowMouseEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the row double click callback.\n            </summary>\n            <value>The row double click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowDoubleClick",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CellClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridCellMouseEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the cell click callback.\n            </summary>\n            <value>The cell click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "CellClick",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CellDoubleClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridCellMouseEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the cell double click callback.\n            </summary>\n            <value>The cell double click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "CellDoubleClick",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CellContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridCellMouseEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the row click callback.\n            </summary>\n            <value>The row click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "CellContextMenu",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowExpand",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the row expand callback.\n            </summary>\n            <value>The row expand callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowExpand",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupRowExpand",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.Group>",
            "Documentation": "\n            <summary>\n            Gets or sets the group row expand callback.\n            </summary>\n            <value>The group row expand callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupRowExpand",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowCollapse",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the row collapse callback.\n            </summary>\n            <value>The row collapse callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowCollapse",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupRowCollapse",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.Group>",
            "Documentation": "\n            <summary>\n            Gets or sets the group row collapse callback.\n            </summary>\n            <value>The group row collapse callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupRowCollapse",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowRender",
            "TypeName": "System.Action<Radzen.RowRenderEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the row render callback. Use it to set row attributes.\n            </summary>\n            <value>The row render callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowRender",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupRowRender",
            "TypeName": "System.Action<Radzen.GroupRowRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the group row render callback. Use it to set group row attributes.\n            </summary>\n            <value>The group row render callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupRowRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CellRender",
            "TypeName": "System.Action<Radzen.DataGridCellRenderEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the cell render callback. Use it to set cell attributes.\n            </summary>\n            <value>The cell render callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "CellRender",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderCellRender",
            "TypeName": "System.Action<Radzen.DataGridCellRenderEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the header cell render callback. Use it to set header cell attributes.\n            </summary>\n            <value>The cell render callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderCellRender",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FooterCellRender",
            "TypeName": "System.Action<Radzen.DataGridCellRenderEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the footer cell render callback. Use it to set footer cell attributes.\n            </summary>\n            <value>The cell render callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FooterCellRender",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Render",
            "TypeName": "System.Action<Radzen.DataGridRenderEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the render callback.\n            </summary>\n            <value>The render callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Render",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowRowSelectOnRowClick",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether DataGrid row can be selected on row click.\n            </summary>\n            <value><c>true</c> if DataGrid row can be selected on row click; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowRowSelectOnRowClick"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowAlternatingRows",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether DataGrid should use alternating row styles.\n            </summary>\n            <value><c>true</c> if DataGrid is using alternating row styles; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowAlternatingRows"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionMode",
            "TypeName": "Radzen.DataGridSelectionMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the selection mode.\n            </summary>\n            <value>The selection mode.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectionMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowEdit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the row edit callback.\n            </summary>\n            <value>The row edit callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowEdit",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowUpdate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the row update callback.\n            </summary>\n            <value>The row update callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowUpdate",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowCreate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the row create callback.\n            </summary>\n            <value>The row create callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowCreate",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Settings",
            "TypeName": "Radzen.DataGridSettings",
            "Documentation": "\n            <summary>\n            Gets or sets DataGrid settings.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Settings"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SettingsChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridSettings>",
            "Documentation": "\n            <summary>\n            Gets or sets the settings changed callback.\n            </summary>\n            <value>The settings callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SettingsChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerPosition",
            "TypeName": "Radzen.PagerPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the pager position. Set to <c>PagerPosition.Bottom</c> by default.\n            </summary>\n            <value>The pager position.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerAlwaysVisible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether pager is visible even when not enough data for paging.\n            </summary>\n            <value><c>true</c> if pager is visible even when not enough data for paging otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerAlwaysVisible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerHorizontalAlign",
            "TypeName": "Radzen.HorizontalAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the horizontal align.\n            </summary>\n            <value>The horizontal align.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerHorizontalAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether paging is allowed. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if paging is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the size of the page.\n            </summary>\n            <value>The size of the page.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageNumbersCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the page numbers count.\n            </summary>\n            <value>The page numbers count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageNumbersCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Count",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the count.\n            </summary>\n            <value>The count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Count"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the page size options.\n            </summary>\n            <value>The page size options.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the page size description text.\n            </summary>\n            <value>The page size description text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPagingSummary",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary visibility.\n            </summary>\n            <value>The pager summary visibility.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPagingSummary"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingSummaryFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary format.\n            </summary>\n            <value>The pager summary format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagingSummaryFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.PagerEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the page callback.\n            </summary>\n            <value>The page callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 112657777,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataGrid<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenDataGrid component.\n            </summary>\n            <typeparam name=\"TItem\">The type of the DataGrid data item.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenDataGrid @data=@orders TItem=\"Order\" AllowSorting=\"true\" AllowPaging=\"true\" AllowFiltering=\"true\"&gt;\n                &lt;Columns&gt;\n                    &lt;RadzenDataGridColumn TItem=\"Order\" Property=\"OrderId\" Title=\"OrderId\" /&gt;\n                    &lt;RadzenDataGridColumn TItem=\"Order\" Property=\"OrderDate\" Title=\"OrderDate\" /&gt;\n                &lt;/Columns&gt;\n            &lt;/RadzenDataGrid&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDataGrid"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataGrid<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadChildData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridLoadChildDataEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the load child data callback.\n            </summary>\n            <value>The load child data callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadChildData",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowCompositeDataCells",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether DataGrid data cells will follow the header cells structure in composite columns.\n            </summary>\n            <value><c>true</c> if DataGrid data cells will follow the header cells structure in composite columns; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowCompositeDataCells"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowEmptyMessage",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether DataGrid data body show empty message.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowEmptyMessage"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Responsive",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether DataGrid is responsive.\n            </summary>\n            <value><c>true</c> if DataGrid is Responsive; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Responsive"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Density",
            "TypeName": "Radzen.Density",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating DataGrid density.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Density"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Group",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridColumnGroupEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the column group callback.\n            </summary>\n            <value>The column group callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Group",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the columns.\n            </summary>\n            <value>The columns.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PickedColumnsChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridPickedColumnsChangedEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the picked columns changed callback.\n            </summary>\n            <value>The picked columns changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PickedColumnsChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sort",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridColumnSortEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the column sort callback.\n            </summary>\n            <value>The column sort callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Sort",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Filter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridColumnFilterEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the column filter callback.\n            </summary>\n            <value>The column filter callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Filter",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCleared",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridColumnFilterEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the column filter cleared callback.\n            </summary>\n            <value>The column filter callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterCleared",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogicalFilterOperator",
            "TypeName": "Radzen.LogicalFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the logical filter operator.\n            </summary>\n            <value>The logical filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogicalFilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterMode",
            "TypeName": "Radzen.FilterMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter mode.\n            </summary>\n            <value>The filter mode.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandMode",
            "TypeName": "Radzen.DataGridExpandMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the expand mode.\n            </summary>\n            <value>The expand mode.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpandMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowExpandColumn",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets whether the expandable indicator column is visible.\n            </summary>\n            <value>The expandable indicator column visibility.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowExpandColumn"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditMode",
            "TypeName": "Radzen.DataGridEditMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the edit mode.\n            </summary>\n            <value>The edit mode.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the filter text.\n            </summary>\n            <value>The filter text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EnumFilterSelectText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the enum filter select text.\n            </summary>\n            <value>The enum filter select text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EnumFilterSelectText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AndOperatorText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the and operator text.\n            </summary>\n            <value>The and operator text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AndOperatorText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OrOperatorText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the or operator text.\n            </summary>\n            <value>The or operator text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "OrOperatorText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApplyFilterText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the apply filter text.\n            </summary>\n            <value>The apply filter text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApplyFilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ClearFilterText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the clear filter text.\n            </summary>\n            <value>The clear filter text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ClearFilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EqualsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the equals text.\n            </summary>\n            <value>The equals text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotEqualsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the not equals text.\n            </summary>\n            <value>The not equals text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "NotEqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LessThanText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the less than text.\n            </summary>\n            <value>The less than text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LessThanText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LessThanOrEqualsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the less than or equals text.\n            </summary>\n            <value>The less than or equals text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LessThanOrEqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreaterThanText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the greater than text.\n            </summary>\n            <value>The greater than text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GreaterThanText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreaterThanOrEqualsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the greater than or equals text.\n            </summary>\n            <value>The greater than or equals text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GreaterThanOrEqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndsWithText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the ends with text.\n            </summary>\n            <value>The ends with text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EndsWithText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContainsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the contains text.\n            </summary>\n            <value>The contains text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContainsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DoesNotContainText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the does not contain text.\n            </summary>\n            <value>The does not contain text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "DoesNotContainText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartsWithText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the starts with text.\n            </summary>\n            <value>The starts with text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartsWithText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsNotNullText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the not null text.\n            </summary>\n            <value>The not null text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsNotNullText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsNullText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the is null text.\n            </summary>\n            <value>The null text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsNullText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsEmptyText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the is empty text.\n            </summary>\n            <value>The empty text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsEmptyText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsNotEmptyText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the is not empty text.\n            </summary>\n            <value>The not empty text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsNotEmptyText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCaseSensitivity",
            "TypeName": "Radzen.FilterCaseSensitivity",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter case sensitivity.\n            </summary>\n            <value>The filter case sensitivity.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterCaseSensitivity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDelay",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the filter delay.\n            </summary>\n            <value>The filter delay.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterDelay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDateFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the filter date format.\n            </summary>\n            <value>The filter date format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterDateFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnWidth",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the width of all columns.\n            </summary>\n            <value>The width of the columns.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EmptyText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the empty text shown when Data is empty collection.\n            </summary>\n            <value>The empty text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EmptyText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EmptyTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the empty template shown when Data is empty collection.\n            </summary>\n            <value>The empty template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EmptyTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowVirtualization",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this instance is virtualized.\n            </summary>\n            <value><c>true</c> if this instance is virtualized; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowVirtualization"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IsLoading",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this instance loading indicator is shown.\n            </summary>\n            <value><c>true</c> if this instance loading indicator is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "IsLoading"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSorting",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether sorting is allowed.\n            </summary>\n            <value><c>true</c> if sorting is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSorting"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowMultiColumnSorting",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether multi column sorting is allowed.\n            </summary>\n            <value><c>true</c> if multi column sorting is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowMultiColumnSorting"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowMultiColumnSortingIndex",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether multi column sorting index is shown.\n            </summary>\n            <value><c>true</c> if multi column sorting index is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowMultiColumnSortingIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowFiltering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether filtering is allowed.\n            </summary>\n            <value><c>true</c> if filtering is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowFiltering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowColumnResize",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether column resizing is allowed.\n            </summary>\n            <value><c>true</c> if column resizing is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowColumnResize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowColumnReorder",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether column reorder is allowed.\n            </summary>\n            <value><c>true</c> if column reorder is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowColumnReorder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowColumnPicking",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether column picking is allowed.\n            </summary>\n            <value><c>true</c> if column picking is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowColumnPicking"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnsShowingText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the column picker columns showing text.\n            </summary>\n            <value>The column picker columns showing text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnsShowingText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllColumnsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the column picker all columns text.\n            </summary>\n            <value>The column picker all columns text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllColumnsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the column picker columns text.\n            </summary>\n            <value>The column picker columns text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowPickAllColumns",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether user can pick all columns in column picker.\n            </summary>\n            <value><c>true</c> if pick of all columns is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowPickAllColumns"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowGrouping",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether grouping is allowed.\n            </summary>\n            <value><c>true</c> if grouping is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowGrouping"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HideGroupedColumn",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether grouped column should be hidden.\n            </summary>\n            <value><c>true</c> if grouped columns should be hidden; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HideGroupedColumn"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupFootersAlwaysVisible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether group footers are visible even when the group is collapsed.\n            </summary>\n            <value><c>true</c> if group footers are visible when the group is collapsed otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupFootersAlwaysVisible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupHeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Group>",
            "Documentation": "\n            <summary>\n            Gets or sets the group header template.\n            </summary>\n            <value>The group header template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupHeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupPanelText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the group panel text.\n            </summary>\n            <value>The group panel text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupPanelText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnResized",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridColumnResizedEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the column resized callback.\n            </summary>\n            <value>The column resized callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnResized",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnReordered",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridColumnReorderedEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the column reordered callback.\n            </summary>\n            <value>The column reordered callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnReordered",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Collections.Generic.IList<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the selected item.\n            </summary>\n            <value>The selected item.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IList<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed callback.\n            </summary>\n            <value>The value changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowSelect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the row select callback.\n            </summary>\n            <value>The row select callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowSelect",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowDeselect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the row deselect callback.\n            </summary>\n            <value>The row deselect callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowDeselect",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridRowMouseEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the row click callback.\n            </summary>\n            <value>The row click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowClick",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowDoubleClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridRowMouseEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the row double click callback.\n            </summary>\n            <value>The row double click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowDoubleClick",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CellClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridCellMouseEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the cell click callback.\n            </summary>\n            <value>The cell click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "CellClick",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CellDoubleClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridCellMouseEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the cell double click callback.\n            </summary>\n            <value>The cell double click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "CellDoubleClick",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CellContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridCellMouseEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the row click callback.\n            </summary>\n            <value>The row click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "CellContextMenu",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowExpand",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the row expand callback.\n            </summary>\n            <value>The row expand callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowExpand",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupRowExpand",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.Group>",
            "Documentation": "\n            <summary>\n            Gets or sets the group row expand callback.\n            </summary>\n            <value>The group row expand callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupRowExpand",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowCollapse",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the row collapse callback.\n            </summary>\n            <value>The row collapse callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowCollapse",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupRowCollapse",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.Group>",
            "Documentation": "\n            <summary>\n            Gets or sets the group row collapse callback.\n            </summary>\n            <value>The group row collapse callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupRowCollapse",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowRender",
            "TypeName": "System.Action<Radzen.RowRenderEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the row render callback. Use it to set row attributes.\n            </summary>\n            <value>The row render callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowRender",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupRowRender",
            "TypeName": "System.Action<Radzen.GroupRowRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the group row render callback. Use it to set group row attributes.\n            </summary>\n            <value>The group row render callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupRowRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CellRender",
            "TypeName": "System.Action<Radzen.DataGridCellRenderEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the cell render callback. Use it to set cell attributes.\n            </summary>\n            <value>The cell render callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "CellRender",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderCellRender",
            "TypeName": "System.Action<Radzen.DataGridCellRenderEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the header cell render callback. Use it to set header cell attributes.\n            </summary>\n            <value>The cell render callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderCellRender",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FooterCellRender",
            "TypeName": "System.Action<Radzen.DataGridCellRenderEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the footer cell render callback. Use it to set footer cell attributes.\n            </summary>\n            <value>The cell render callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FooterCellRender",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Render",
            "TypeName": "System.Action<Radzen.DataGridRenderEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the render callback.\n            </summary>\n            <value>The render callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Render",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowRowSelectOnRowClick",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether DataGrid row can be selected on row click.\n            </summary>\n            <value><c>true</c> if DataGrid row can be selected on row click; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowRowSelectOnRowClick"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowAlternatingRows",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether DataGrid should use alternating row styles.\n            </summary>\n            <value><c>true</c> if DataGrid is using alternating row styles; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowAlternatingRows"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionMode",
            "TypeName": "Radzen.DataGridSelectionMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the selection mode.\n            </summary>\n            <value>The selection mode.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectionMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowEdit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the row edit callback.\n            </summary>\n            <value>The row edit callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowEdit",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowUpdate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the row update callback.\n            </summary>\n            <value>The row update callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowUpdate",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowCreate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the row create callback.\n            </summary>\n            <value>The row create callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowCreate",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Settings",
            "TypeName": "Radzen.DataGridSettings",
            "Documentation": "\n            <summary>\n            Gets or sets DataGrid settings.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Settings"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SettingsChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridSettings>",
            "Documentation": "\n            <summary>\n            Gets or sets the settings changed callback.\n            </summary>\n            <value>The settings callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SettingsChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerPosition",
            "TypeName": "Radzen.PagerPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the pager position. Set to <c>PagerPosition.Bottom</c> by default.\n            </summary>\n            <value>The pager position.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerAlwaysVisible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether pager is visible even when not enough data for paging.\n            </summary>\n            <value><c>true</c> if pager is visible even when not enough data for paging otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerAlwaysVisible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerHorizontalAlign",
            "TypeName": "Radzen.HorizontalAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the horizontal align.\n            </summary>\n            <value>The horizontal align.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerHorizontalAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether paging is allowed. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if paging is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the size of the page.\n            </summary>\n            <value>The size of the page.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageNumbersCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the page numbers count.\n            </summary>\n            <value>The page numbers count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageNumbersCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Count",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the count.\n            </summary>\n            <value>The count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Count"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the page size options.\n            </summary>\n            <value>The page size options.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the page size description text.\n            </summary>\n            <value>The page size description text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPagingSummary",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary visibility.\n            </summary>\n            <value>The pager summary visibility.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPagingSummary"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingSummaryFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary format.\n            </summary>\n            <value>The pager summary format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagingSummaryFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.PagerEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the page callback.\n            </summary>\n            <value>The page callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 663695871,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGrid<TItem>.Columns",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the columns.\n            </summary>\n            <value>The columns.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "RadzenDataGrid"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -502781409,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGrid<TItem>.Columns",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the columns.\n            </summary>\n            <value>The columns.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "Radzen.Blazor.RadzenDataGrid"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1731214257,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGrid<TItem>.EmptyTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the empty template shown when Data is empty collection.\n            </summary>\n            <value>The empty template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EmptyTemplate",
            "ParentTag": "RadzenDataGrid"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>.EmptyTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1558349767,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGrid<TItem>.EmptyTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the empty template shown when Data is empty collection.\n            </summary>\n            <value>The empty template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EmptyTemplate",
            "ParentTag": "Radzen.Blazor.RadzenDataGrid"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>.EmptyTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -31134736,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGrid<TItem>.GroupHeaderTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the group header template.\n            </summary>\n            <value>The group header template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "GroupHeaderTemplate",
            "ParentTag": "RadzenDataGrid"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'GroupHeaderTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>.GroupHeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -77569599,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGrid<TItem>.GroupHeaderTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the group header template.\n            </summary>\n            <value>The group header template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "GroupHeaderTemplate",
            "ParentTag": "Radzen.Blazor.RadzenDataGrid"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'GroupHeaderTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>.GroupHeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 175501689,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGrid<TItem>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenDataGrid"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -547536962,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGrid<TItem>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenDataGrid"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 59300499,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataGridColumn<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenDataGridColumn component.\n            Must be placed inside a <see cref=\"T:Radzen.Blazor.RadzenDataGrid`1\" />\n            </summary>\n            <typeparam name=\"TItem\">The type of the DataGrid item.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataGridColumn<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the columns.\n            </summary>\n            <value>The columns.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OrderIndex",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Gets or sets the order index.\n            </summary>\n            <value>The order index.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "OrderIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortOrder",
            "TypeName": "Radzen.SortOrder?",
            "Documentation": "\n            <summary>\n            Gets or sets the sort order.\n            </summary>\n            <value>The sort order.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SortOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the title.\n            </summary>\n            <value>The title.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Property",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the property name.\n            </summary>\n            <value>The property name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Property"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the sort property name.\n            </summary>\n            <value>The sort property name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SortProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the group property name.\n            </summary>\n            <value>The group property name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the filter property name.\n            </summary>\n            <value>The filter property name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterValue",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the filter value.\n            </summary>\n            <value>The filter value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SecondFilterValue",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the second filter value.\n            </summary>\n            <value>The second filter value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SecondFilterValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the width.\n            </summary>\n            <value>The width.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinWidth",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the min-width.\n            </summary>\n            <value>The min-width.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format string.\n            </summary>\n            <value>The format string.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class applied to data cells.\n            </summary>\n            <value>The CSS class applied to data cells.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderCssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the header CSS class applied to header cell.\n            </summary>\n            <value>The header CSS class applied to header cell.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderCssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FooterCssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the footer CSS class applied to footer cell.\n            </summary>\n            <value>The footer CSS class applied to footer cell.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FooterCssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupFooterCssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the group footer CSS class applied to group footer cell.\n            </summary>\n            <value>The group footer CSS class applied to group footer cell.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupFooterCssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Filterable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is filterable.\n            </summary>\n            <value><c>true</c> if filterable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Filterable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sortable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is sortable.\n            </summary>\n            <value><c>true</c> if sortable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Sortable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Frozen",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is frozen.\n            </summary>\n            <value><c>true</c> if frozen; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Frozen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resizable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is resizable.\n            </summary>\n            <value><c>true</c> if resizable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resizable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reorderable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is reorderable.\n            </summary>\n            <value><c>true</c> if reorderable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Reorderable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Groupable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is groupable.\n            </summary>\n            <value><c>true</c> if groupable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Groupable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pickable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is pickable - listed when DataGrid AllowColumnPicking is set to true.\n            </summary>\n            <value><c>true</c> if pickable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Pickable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlign",
            "TypeName": "Radzen.TextAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the text align.\n            </summary>\n            <value>The text align.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the edit template.\n            </summary>\n            <value>The edit template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the header template.\n            </summary>\n            <value>The header template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FooterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the footer template.\n            </summary>\n            <value>The footer template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FooterTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupFooterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Group>",
            "Documentation": "\n            <summary>\n            Gets or sets the group footer template.\n            </summary>\n            <value>The group footer template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupFooterTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenDataGridColumn<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the filter template.\n            </summary>\n            <value>The filter template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogicalFilterOperator",
            "TypeName": "Radzen.LogicalFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the logical filter operator.\n            </summary>\n            <value>The logical filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogicalFilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the data type.\n            </summary>\n            <value>The data type.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "Radzen.FilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter operator.\n            </summary>\n            <value>The filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SecondFilterOperator",
            "TypeName": "Radzen.FilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the second filter operator.\n            </summary>\n            <value>The second filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SecondFilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1898544912,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataGridColumn<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenDataGridColumn component.\n            Must be placed inside a <see cref=\"T:Radzen.Blazor.RadzenDataGrid`1\" />\n            </summary>\n            <typeparam name=\"TItem\">The type of the DataGrid item.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataGridColumn<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the columns.\n            </summary>\n            <value>The columns.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OrderIndex",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Gets or sets the order index.\n            </summary>\n            <value>The order index.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "OrderIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortOrder",
            "TypeName": "Radzen.SortOrder?",
            "Documentation": "\n            <summary>\n            Gets or sets the sort order.\n            </summary>\n            <value>The sort order.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SortOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the title.\n            </summary>\n            <value>The title.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Property",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the property name.\n            </summary>\n            <value>The property name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Property"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the sort property name.\n            </summary>\n            <value>The sort property name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SortProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the group property name.\n            </summary>\n            <value>The group property name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the filter property name.\n            </summary>\n            <value>The filter property name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterValue",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the filter value.\n            </summary>\n            <value>The filter value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SecondFilterValue",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the second filter value.\n            </summary>\n            <value>The second filter value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SecondFilterValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the width.\n            </summary>\n            <value>The width.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinWidth",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the min-width.\n            </summary>\n            <value>The min-width.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format string.\n            </summary>\n            <value>The format string.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class applied to data cells.\n            </summary>\n            <value>The CSS class applied to data cells.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderCssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the header CSS class applied to header cell.\n            </summary>\n            <value>The header CSS class applied to header cell.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderCssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FooterCssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the footer CSS class applied to footer cell.\n            </summary>\n            <value>The footer CSS class applied to footer cell.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FooterCssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupFooterCssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the group footer CSS class applied to group footer cell.\n            </summary>\n            <value>The group footer CSS class applied to group footer cell.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupFooterCssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Filterable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is filterable.\n            </summary>\n            <value><c>true</c> if filterable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Filterable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sortable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is sortable.\n            </summary>\n            <value><c>true</c> if sortable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Sortable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Frozen",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is frozen.\n            </summary>\n            <value><c>true</c> if frozen; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Frozen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resizable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is resizable.\n            </summary>\n            <value><c>true</c> if resizable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resizable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reorderable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is reorderable.\n            </summary>\n            <value><c>true</c> if reorderable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Reorderable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Groupable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is groupable.\n            </summary>\n            <value><c>true</c> if groupable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Groupable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pickable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is pickable - listed when DataGrid AllowColumnPicking is set to true.\n            </summary>\n            <value><c>true</c> if pickable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Pickable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlign",
            "TypeName": "Radzen.TextAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the text align.\n            </summary>\n            <value>The text align.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the edit template.\n            </summary>\n            <value>The edit template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the header template.\n            </summary>\n            <value>The header template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FooterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the footer template.\n            </summary>\n            <value>The footer template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FooterTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupFooterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Group>",
            "Documentation": "\n            <summary>\n            Gets or sets the group footer template.\n            </summary>\n            <value>The group footer template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupFooterTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenDataGridColumn<TItem>>",
            "Documentation": "\n            <summary>\n            Gets or sets the filter template.\n            </summary>\n            <value>The filter template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogicalFilterOperator",
            "TypeName": "Radzen.LogicalFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the logical filter operator.\n            </summary>\n            <value>The logical filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogicalFilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the data type.\n            </summary>\n            <value>The data type.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "Radzen.FilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter operator.\n            </summary>\n            <value>The filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SecondFilterOperator",
            "TypeName": "Radzen.FilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the second filter operator.\n            </summary>\n            <value>The second filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SecondFilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1937476631,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGridColumn<TItem>.Columns",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the columns.\n            </summary>\n            <value>The columns.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "RadzenDataGridColumn"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 113898305,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGridColumn<TItem>.Columns",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the columns.\n            </summary>\n            <value>The columns.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "Radzen.Blazor.RadzenDataGridColumn"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1529298068,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGridColumn<TItem>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -665551466,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGridColumn<TItem>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 952530034,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGridColumn<TItem>.EditTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the edit template.\n            </summary>\n            <value>The edit template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditTemplate",
            "ParentTag": "RadzenDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'EditTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>.EditTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -208949090,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGridColumn<TItem>.EditTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the edit template.\n            </summary>\n            <value>The edit template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditTemplate",
            "ParentTag": "Radzen.Blazor.RadzenDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'EditTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>.EditTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1395736916,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGridColumn<TItem>.HeaderTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the header template.\n            </summary>\n            <value>The header template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "RadzenDataGridColumn"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -498530689,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGridColumn<TItem>.HeaderTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the header template.\n            </summary>\n            <value>The header template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "Radzen.Blazor.RadzenDataGridColumn"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1407452119,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGridColumn<TItem>.FooterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the footer template.\n            </summary>\n            <value>The footer template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FooterTemplate",
            "ParentTag": "RadzenDataGridColumn"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>.FooterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1489923295,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGridColumn<TItem>.FooterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the footer template.\n            </summary>\n            <value>The footer template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FooterTemplate",
            "ParentTag": "Radzen.Blazor.RadzenDataGridColumn"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>.FooterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1124951462,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGridColumn<TItem>.GroupFooterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the group footer template.\n            </summary>\n            <value>The group footer template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "GroupFooterTemplate",
            "ParentTag": "RadzenDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'GroupFooterTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>.GroupFooterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 875257769,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGridColumn<TItem>.GroupFooterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the group footer template.\n            </summary>\n            <value>The group footer template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "GroupFooterTemplate",
            "ParentTag": "Radzen.Blazor.RadzenDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'GroupFooterTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>.GroupFooterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1305011171,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGridColumn<TItem>.FilterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the filter template.\n            </summary>\n            <value>The filter template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FilterTemplate",
            "ParentTag": "RadzenDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'FilterTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>.FilterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -201172802,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGridColumn<TItem>.FilterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the filter template.\n            </summary>\n            <value>The filter template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FilterTemplate",
            "ParentTag": "Radzen.Blazor.RadzenDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'FilterTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>.FilterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1731723917,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataList<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenDataList component.\n            </summary>\n            <typeparam name=\"TItem\">The type of the item.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenDataList @data=@orders TItem=\"Order\" AllowPaging=\"true\" WrapItems=\"true\"&gt;\n                &lt;Template&gt;\n                    @context.OrderId\n                &lt;/Template&gt;\n            &lt;/RadzenDataList&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDataList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataList<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "WrapItems",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to wrap items.\n            </summary>\n            <value><c>true</c> if wrap items; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "WrapItems"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerPosition",
            "TypeName": "Radzen.PagerPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the pager position. Set to <c>PagerPosition.Bottom</c> by default.\n            </summary>\n            <value>The pager position.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerAlwaysVisible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether pager is visible even when not enough data for paging.\n            </summary>\n            <value><c>true</c> if pager is visible even when not enough data for paging otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerAlwaysVisible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerHorizontalAlign",
            "TypeName": "Radzen.HorizontalAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the horizontal align.\n            </summary>\n            <value>The horizontal align.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerHorizontalAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether paging is allowed. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if paging is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the size of the page.\n            </summary>\n            <value>The size of the page.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageNumbersCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the page numbers count.\n            </summary>\n            <value>The page numbers count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageNumbersCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Count",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the count.\n            </summary>\n            <value>The count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Count"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the page size options.\n            </summary>\n            <value>The page size options.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the page size description text.\n            </summary>\n            <value>The page size description text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPagingSummary",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary visibility.\n            </summary>\n            <value>The pager summary visibility.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPagingSummary"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingSummaryFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary format.\n            </summary>\n            <value>The pager summary format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagingSummaryFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.PagerEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the page callback.\n            </summary>\n            <value>The page callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataList<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -665712127,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataList<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenDataList component.\n            </summary>\n            <typeparam name=\"TItem\">The type of the item.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenDataList @data=@orders TItem=\"Order\" AllowPaging=\"true\" WrapItems=\"true\"&gt;\n                &lt;Template&gt;\n                    @context.OrderId\n                &lt;/Template&gt;\n            &lt;/RadzenDataList&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDataList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataList<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "WrapItems",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to wrap items.\n            </summary>\n            <value><c>true</c> if wrap items; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "WrapItems"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerPosition",
            "TypeName": "Radzen.PagerPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the pager position. Set to <c>PagerPosition.Bottom</c> by default.\n            </summary>\n            <value>The pager position.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerAlwaysVisible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether pager is visible even when not enough data for paging.\n            </summary>\n            <value><c>true</c> if pager is visible even when not enough data for paging otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerAlwaysVisible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerHorizontalAlign",
            "TypeName": "Radzen.HorizontalAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the horizontal align.\n            </summary>\n            <value>The horizontal align.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerHorizontalAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether paging is allowed. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if paging is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the size of the page.\n            </summary>\n            <value>The size of the page.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageNumbersCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the page numbers count.\n            </summary>\n            <value>The page numbers count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageNumbersCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Count",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the count.\n            </summary>\n            <value>The count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Count"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the page size options.\n            </summary>\n            <value>The page size options.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the page size description text.\n            </summary>\n            <value>The page size description text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPagingSummary",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary visibility.\n            </summary>\n            <value>The pager summary visibility.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPagingSummary"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingSummaryFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary format.\n            </summary>\n            <value>The pager summary format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagingSummaryFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.PagerEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the page callback.\n            </summary>\n            <value>The page callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataList<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 613172734,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataList<TItem>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenDataList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataList<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -723254053,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataList<TItem>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenDataList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataList<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 599486623,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDatePicker<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenDatePicker component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the t value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenDatePicker @bind-Value=@someValue TValue=\"DateTime\" Change=@(args =&gt; Console.WriteLine($\"Selected date: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDatePicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenDatePicker<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowClear",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether value can be cleared.\n            </summary>\n            <value><c>true</c> if value can be cleared; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowClear"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the tab index.\n            </summary>\n            <value>The tab index.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the form component.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the input CSS class.\n            </summary>\n            <value>The input CSS class.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.DateTime?",
            "Documentation": "\n            <summary>\n            Gets or sets the Minimum Selectable Date.\n            </summary>\n            <value>The Minimum Selectable Date.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.DateTime?",
            "Documentation": "\n            <summary>\n            Gets or sets the Maximum Selectable Date.\n            </summary>\n            <value>The Maximum Selectable Date.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InitialViewDate",
            "TypeName": "System.DateTime?",
            "Documentation": "\n            <summary>\n            Gets or sets the Initial Date/Month View.\n            </summary>\n            <value>The Initial Date/Month View.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "InitialViewDate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DateRender",
            "TypeName": "System.Action<Radzen.DateRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the date render callback. Use it to set attributes.\n            </summary>\n            <value>The date render callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "DateRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Kind",
            "TypeName": "System.DateTimeKind",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the kind of DateTime bind to control\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Kind"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CurrentDateChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTime>",
            "Documentation": "\n            <summary>\n            Gets or set the current date changed callback.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CurrentDateChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Inline",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDatePicker`1\" /> is inline - only Calender.\n            </summary>\n            <value><c>true</c> if inline; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Inline"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether time only can be set.\n            </summary>\n            <value><c>true</c> if time only can be set; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TimeOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether read only.\n            </summary>\n            <value><c>true</c> if read only; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether input is allowed.\n            </summary>\n            <value><c>true</c> if input is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDatePicker`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowTime",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether time part is shown.\n            </summary>\n            <value><c>true</c> if time part is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowSeconds",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether seconds are shown.\n            </summary>\n            <value><c>true</c> if seconds are shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowSeconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HoursStep",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the hours step.\n            </summary>\n            <value>The hours step.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HoursStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinutesStep",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the minutes step.\n            </summary>\n            <value>The minutes step.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinutesStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SecondsStep",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the seconds step.\n            </summary>\n            <value>The seconds step.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SecondsStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PadHours",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the hour picker is padded with a leading zero.\n            </summary>\n            <value><c>true</c> if hour component is padded; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PadHours"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PadMinutes",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the minute picker is padded with a leading zero.\n            </summary>\n            <value><c>true</c> if hour component is padded; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PadMinutes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PadSeconds",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the second picker is padded with a leading zero.\n            </summary>\n            <value><c>true</c> if hour component is padded; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PadSeconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowTimeOkButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether time ok button is shown.\n            </summary>\n            <value><c>true</c> if time ok button is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowTimeOkButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DateFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the date format.\n            </summary>\n            <value>The date format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "DateFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "YearRange",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the year range.\n            </summary>\n            <value>The year range.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "YearRange"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HourFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the hour format.\n            </summary>\n            <value>The hour format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HourFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the input placeholder.\n            </summary>\n            <value>The input placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>",
            "Documentation": "\n            <summary>\n            Gets or sets the change callback.\n            </summary>\n            <value>The change callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed callback.\n            </summary>\n            <value>The value changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FooterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the footer template.\n            </summary>\n            <value>The footer template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FooterTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PopupRenderMode",
            "TypeName": "Radzen.PopupRenderMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the render mode.\n            </summary>\n            <value>The render mode.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PopupRenderMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDatePicker<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1624158724,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDatePicker<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenDatePicker component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the t value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenDatePicker @bind-Value=@someValue TValue=\"DateTime\" Change=@(args =&gt; Console.WriteLine($\"Selected date: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDatePicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenDatePicker<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowClear",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether value can be cleared.\n            </summary>\n            <value><c>true</c> if value can be cleared; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowClear"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the tab index.\n            </summary>\n            <value>The tab index.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the form component.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InputClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the input CSS class.\n            </summary>\n            <value>The input CSS class.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "InputClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.DateTime?",
            "Documentation": "\n            <summary>\n            Gets or sets the Minimum Selectable Date.\n            </summary>\n            <value>The Minimum Selectable Date.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.DateTime?",
            "Documentation": "\n            <summary>\n            Gets or sets the Maximum Selectable Date.\n            </summary>\n            <value>The Maximum Selectable Date.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InitialViewDate",
            "TypeName": "System.DateTime?",
            "Documentation": "\n            <summary>\n            Gets or sets the Initial Date/Month View.\n            </summary>\n            <value>The Initial Date/Month View.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "InitialViewDate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DateRender",
            "TypeName": "System.Action<Radzen.DateRenderEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the date render callback. Use it to set attributes.\n            </summary>\n            <value>The date render callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "DateRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Kind",
            "TypeName": "System.DateTimeKind",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the kind of DateTime bind to control\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Kind"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CurrentDateChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTime>",
            "Documentation": "\n            <summary>\n            Gets or set the current date changed callback.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CurrentDateChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Inline",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDatePicker`1\" /> is inline - only Calender.\n            </summary>\n            <value><c>true</c> if inline; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Inline"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether time only can be set.\n            </summary>\n            <value><c>true</c> if time only can be set; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TimeOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether read only.\n            </summary>\n            <value><c>true</c> if read only; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowInput",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether input is allowed.\n            </summary>\n            <value><c>true</c> if input is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowInput"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDatePicker`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowTime",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether time part is shown.\n            </summary>\n            <value><c>true</c> if time part is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowSeconds",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether seconds are shown.\n            </summary>\n            <value><c>true</c> if seconds are shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowSeconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HoursStep",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the hours step.\n            </summary>\n            <value>The hours step.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HoursStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinutesStep",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the minutes step.\n            </summary>\n            <value>The minutes step.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinutesStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SecondsStep",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the seconds step.\n            </summary>\n            <value>The seconds step.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SecondsStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PadHours",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the hour picker is padded with a leading zero.\n            </summary>\n            <value><c>true</c> if hour component is padded; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PadHours"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PadMinutes",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the minute picker is padded with a leading zero.\n            </summary>\n            <value><c>true</c> if hour component is padded; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PadMinutes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PadSeconds",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the second picker is padded with a leading zero.\n            </summary>\n            <value><c>true</c> if hour component is padded; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PadSeconds"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowTimeOkButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether time ok button is shown.\n            </summary>\n            <value><c>true</c> if time ok button is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowTimeOkButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DateFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the date format.\n            </summary>\n            <value>The date format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "DateFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "YearRange",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the year range.\n            </summary>\n            <value>The year range.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "YearRange"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HourFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the hour format.\n            </summary>\n            <value>The hour format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HourFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the input placeholder.\n            </summary>\n            <value>The input placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.DateTime?>",
            "Documentation": "\n            <summary>\n            Gets or sets the change callback.\n            </summary>\n            <value>The change callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed callback.\n            </summary>\n            <value>The value changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FooterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the footer template.\n            </summary>\n            <value>The footer template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FooterTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PopupRenderMode",
            "TypeName": "Radzen.PopupRenderMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the render mode.\n            </summary>\n            <value>The render mode.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PopupRenderMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDatePicker<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -44092834,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDatePicker<TValue>.FooterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the footer template.\n            </summary>\n            <value>The footer template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FooterTemplate",
            "ParentTag": "RadzenDatePicker"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDatePicker<TValue>.FooterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 167141462,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDatePicker<TValue>.FooterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the footer template.\n            </summary>\n            <value>The footer template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FooterTemplate",
            "ParentTag": "Radzen.Blazor.RadzenDatePicker"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDatePicker<TValue>.FooterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1581587239,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDayView",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays the appointments in a single day in <see cref=\"T:Radzen.Blazor.RadzenScheduler`1\" />\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenScheduler Data=\"@appointments\"&gt;\n                &lt;RadzenDayView /&gt;\n            &lt;/RadzenScheduler&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDayView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the time format.\n            </summary>\n            <value>The time format. Set to <c>h tt</c> by default.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TimeFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartTime",
            "TypeName": "System.TimeSpan",
            "Documentation": "\n            <summary>\n            Gets or sets the start time.\n            </summary>\n            <value>The start time.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndTime",
            "TypeName": "System.TimeSpan",
            "Documentation": "\n            <summary>\n            Gets or sets the end time.\n            </summary>\n            <value>The end time.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EndTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinutesPerSlot",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets slot size in minutes. Set to <c>30</c> by default.\n            </summary>\n            <value>The slot size in minutes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinutesPerSlot"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDayView"
        }
      },
      {
        "HashCode": 1630704910,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDayView",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays the appointments in a single day in <see cref=\"T:Radzen.Blazor.RadzenScheduler`1\" />\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenScheduler Data=\"@appointments\"&gt;\n                &lt;RadzenDayView /&gt;\n            &lt;/RadzenScheduler&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDayView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the time format.\n            </summary>\n            <value>The time format. Set to <c>h tt</c> by default.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TimeFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartTime",
            "TypeName": "System.TimeSpan",
            "Documentation": "\n            <summary>\n            Gets or sets the start time.\n            </summary>\n            <value>The start time.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndTime",
            "TypeName": "System.TimeSpan",
            "Documentation": "\n            <summary>\n            Gets or sets the end time.\n            </summary>\n            <value>The end time.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EndTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinutesPerSlot",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets slot size in minutes. Set to <c>30</c> by default.\n            </summary>\n            <value>The slot size in minutes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinutesPerSlot"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDayView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1486983703,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDonutSeries<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Renders donut series in <see cref=\"T:Radzen.Blazor.RadzenChart\" />.\n            </summary>\n            <typeparam name=\"TItem\">The type of the series data item.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDonutSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDonutSeries<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InnerRadius",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Gets or sets the inner radius of the donut.\n            </summary>\n            <value>The inner radius.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "InnerRadius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TitleTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the title template.\n            </summary>\n            <value>The title template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TitleTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Specifies the x coordinate of the pie center. Not set by default which centers pie horizontally.\n            </summary>\n            <value>The x.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Specifies the y coordinate of the pie center. Not set by default which centers pie vertically.\n            </summary>\n            <value>The y.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Specifies the radius of the pie. Not set by default - the pie takes as much size of the chart as possible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fills",
            "TypeName": "System.Collections.Generic.IEnumerable<System.String>",
            "Documentation": "\n            <summary>\n            The fill colors of the pie segments. Used as the background of the segments.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fills"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Strokes",
            "TypeName": "System.Collections.Generic.IEnumerable<System.String>",
            "Documentation": "\n            <summary>\n            The stroke colors of the pie segments.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Strokes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The stroke width of the segments in pixels. By default set to <c>0</c>.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CategoryProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the X axis (a.k.a. category axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CategoryProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is visible.\n            Invisible series do not appear in the legend and cannot be shown by the user.\n            Use the <c>Visible</c> property to programatically show or hide a series.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Hidden",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is hidden.\n            Hidden series are initially invisible and the user can show them by clicking on their label in the legend.\n            Use the <c>Hidden</c> property to hide certain series from your users but still allow them to see them.\n            </summary>\n            <value><c>true</c> if hidden; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Hidden"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the Y axis (a.k.a. value axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RenderingOrder",
            "TypeName": "System.Int32",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "RenderingOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data of the series. The data is enumerated and its items are displayed by the series.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDonutSeries<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 792247329,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDonutSeries<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Renders donut series in <see cref=\"T:Radzen.Blazor.RadzenChart\" />.\n            </summary>\n            <typeparam name=\"TItem\">The type of the series data item.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDonutSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDonutSeries<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InnerRadius",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Gets or sets the inner radius of the donut.\n            </summary>\n            <value>The inner radius.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "InnerRadius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TitleTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the title template.\n            </summary>\n            <value>The title template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TitleTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Specifies the x coordinate of the pie center. Not set by default which centers pie horizontally.\n            </summary>\n            <value>The x.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Specifies the y coordinate of the pie center. Not set by default which centers pie vertically.\n            </summary>\n            <value>The y.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Specifies the radius of the pie. Not set by default - the pie takes as much size of the chart as possible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fills",
            "TypeName": "System.Collections.Generic.IEnumerable<System.String>",
            "Documentation": "\n            <summary>\n            The fill colors of the pie segments. Used as the background of the segments.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fills"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Strokes",
            "TypeName": "System.Collections.Generic.IEnumerable<System.String>",
            "Documentation": "\n            <summary>\n            The stroke colors of the pie segments.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Strokes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The stroke width of the segments in pixels. By default set to <c>0</c>.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CategoryProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the X axis (a.k.a. category axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CategoryProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is visible.\n            Invisible series do not appear in the legend and cannot be shown by the user.\n            Use the <c>Visible</c> property to programatically show or hide a series.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Hidden",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is hidden.\n            Hidden series are initially invisible and the user can show them by clicking on their label in the legend.\n            Use the <c>Hidden</c> property to hide certain series from your users but still allow them to see them.\n            </summary>\n            <value><c>true</c> if hidden; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Hidden"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the Y axis (a.k.a. value axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RenderingOrder",
            "TypeName": "System.Int32",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "RenderingOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data of the series. The data is enumerated and its items are displayed by the series.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDonutSeries<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1313190844,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDonutSeries<TItem>.TitleTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the title template.\n            </summary>\n            <value>The title template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TitleTemplate",
            "ParentTag": "RadzenDonutSeries"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDonutSeries<TItem>.TitleTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1538776824,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDonutSeries<TItem>.TitleTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the title template.\n            </summary>\n            <value>The title template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TitleTemplate",
            "ParentTag": "Radzen.Blazor.RadzenDonutSeries"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDonutSeries<TItem>.TitleTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1941237498,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDonutSeries<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenDonutSeries"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDonutSeries<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -105138108,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDonutSeries<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenDonutSeries"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDonutSeries<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 595696476,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDonutSeries<TItem>.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "RadzenDonutSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDonutSeries<TItem>.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -869848870,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDonutSeries<TItem>.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "Radzen.Blazor.RadzenDonutSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDonutSeries<TItem>.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2012913265,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDropDown<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenDropDown component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenDropDown @bind-Value=@customerID TValue=\"string\" Data=@customers TextProperty=\"CompanyName\" ValueProperty=\"CustomerID\" Change=@(args =&gt; Console.WriteLine($\"Selected CustomerID: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDropDown"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenDropDown<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether is read only.\n            </summary>\n            <value><c>true</c> if is read only; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<dynamic>",
            "Documentation": "\n            <summary>\n            Gets or sets the value template.\n            </summary>\n            <value>The value template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpenOnFocus",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether popup should open on focus. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if popup should open on focus; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "OpenOnFocus"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxSelectedLabels",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the number of maximum selected labels.\n            </summary>\n            <value>The number of maximum selected labels.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxSelectedLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Chips",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the selected items will be displayed as chips. Set to <c>false</c> by default.\n            Requires <see cref=\"P:Radzen.DropDownBase`1.Multiple\" /> to be set to <c>true</c>. \n            </summary>\n            <value><c>true</c> to display the selected items as chips; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Chips"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItemsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the selected items text.\n            </summary>\n            <value>The selected items text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItemsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectAllText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the select all text.\n            </summary>\n            <value>The select all text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectAllText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Count",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the total number of items in the data source.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Count"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowVirtualization",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies wether virtualization is enabled. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowVirtualization"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the default page size. Set to <c>5</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowFiltering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether filtering is allowed. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if filtering is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowFiltering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowClear",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the user can clear the value. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if clearing is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowClear"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multiple",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DropDownBase`1\" /> is multiple.\n            </summary>\n            <value><c>true</c> if multiple; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Multiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelectAll",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the user can select all values in multiple selection. Set to <c>true</c> by default.\n            </summary>\n            <value><c>true</c> if select all values is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelectAll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<dynamic>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value property.\n            </summary>\n            <value>The value property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisabledProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the disabled property.\n            </summary>\n            <value>The disabled property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisabledProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItemChanged",
            "TypeName": "System.Action<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the selected item changed.\n            </summary>\n            <value>The selected item changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItemChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDelay",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the filter delay.\n            </summary>\n            <value>The filter delay.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterDelay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItem",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the selected item.\n            </summary>\n            <value>The selected item.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Separator",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the item separator for Multiple dropdown.\n            </summary>\n            <value>Item separator</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Separator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCaseSensitivity",
            "TypeName": "Radzen.FilterCaseSensitivity",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter case sensitivity.\n            </summary>\n            <value>The filter case sensitivity.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterCaseSensitivity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "Radzen.StringFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter operator.\n            </summary>\n            <value>The filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DataBoundFormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text property.\n            </summary>\n            <value>The text property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDown<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -726782995,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDropDown<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenDropDown component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenDropDown @bind-Value=@customerID TValue=\"string\" Data=@customers TextProperty=\"CompanyName\" ValueProperty=\"CustomerID\" Change=@(args =&gt; Console.WriteLine($\"Selected CustomerID: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDropDown"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenDropDown<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether is read only.\n            </summary>\n            <value><c>true</c> if is read only; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<dynamic>",
            "Documentation": "\n            <summary>\n            Gets or sets the value template.\n            </summary>\n            <value>The value template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpenOnFocus",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether popup should open on focus. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if popup should open on focus; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "OpenOnFocus"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxSelectedLabels",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the number of maximum selected labels.\n            </summary>\n            <value>The number of maximum selected labels.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxSelectedLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Chips",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the selected items will be displayed as chips. Set to <c>false</c> by default.\n            Requires <see cref=\"P:Radzen.DropDownBase`1.Multiple\" /> to be set to <c>true</c>. \n            </summary>\n            <value><c>true</c> to display the selected items as chips; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Chips"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItemsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the selected items text.\n            </summary>\n            <value>The selected items text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItemsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectAllText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the select all text.\n            </summary>\n            <value>The select all text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectAllText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Count",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the total number of items in the data source.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Count"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowVirtualization",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies wether virtualization is enabled. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowVirtualization"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the default page size. Set to <c>5</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowFiltering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether filtering is allowed. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if filtering is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowFiltering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowClear",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the user can clear the value. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if clearing is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowClear"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multiple",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DropDownBase`1\" /> is multiple.\n            </summary>\n            <value><c>true</c> if multiple; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Multiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelectAll",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the user can select all values in multiple selection. Set to <c>true</c> by default.\n            </summary>\n            <value><c>true</c> if select all values is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelectAll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<dynamic>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value property.\n            </summary>\n            <value>The value property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisabledProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the disabled property.\n            </summary>\n            <value>The disabled property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisabledProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItemChanged",
            "TypeName": "System.Action<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the selected item changed.\n            </summary>\n            <value>The selected item changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItemChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDelay",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the filter delay.\n            </summary>\n            <value>The filter delay.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterDelay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItem",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the selected item.\n            </summary>\n            <value>The selected item.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Separator",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the item separator for Multiple dropdown.\n            </summary>\n            <value>Item separator</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Separator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCaseSensitivity",
            "TypeName": "Radzen.FilterCaseSensitivity",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter case sensitivity.\n            </summary>\n            <value>The filter case sensitivity.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterCaseSensitivity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "Radzen.StringFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter operator.\n            </summary>\n            <value>The filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DataBoundFormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text property.\n            </summary>\n            <value>The text property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDown<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -198969342,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDown<TValue>.ValueTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the value template.\n            </summary>\n            <value>The value template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValueTemplate",
            "ParentTag": "RadzenDropDown"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ValueTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDown<TValue>.ValueTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2057570915,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDown<TValue>.ValueTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the value template.\n            </summary>\n            <value>The value template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValueTemplate",
            "ParentTag": "Radzen.Blazor.RadzenDropDown"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ValueTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDown<TValue>.ValueTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -111146030,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDown<TValue>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenDropDown"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDown<TValue>.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1557007343,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDown<TValue>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenDropDown"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDown<TValue>.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1031421516,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenDropDownDataGrid component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the t value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenDropDownDataGrid @bind-Value=@customerID TValue=\"string\" Data=@customers TextProperty=\"CompanyName\" ValueProperty=\"CustomerID\" Change=@(args =&gt; Console.WriteLine($\"Selected CustomerID: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDropDownDataGrid"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenDropDownDataGrid<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowRender",
            "TypeName": "System.Action<Radzen.RowRenderEventArgs<System.Object>>",
            "Documentation": "\n            <summary>\n            Gets or sets the row render callback. Use it to set row attributes.\n            </summary>\n            <value>The row render callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CellRender",
            "TypeName": "System.Action<Radzen.DataGridCellRenderEventArgs<System.Object>>",
            "Documentation": "\n            <summary>\n            Gets or sets the cell render callback. Use it to set cell attributes.\n            </summary>\n            <value>The cell render callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "CellRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Chips",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the selected items will be displayed as chips. Set to <c>false</c> by default.\n            Requires <see cref=\"P:Radzen.DropDownBase`1.Multiple\" /> to be set to <c>true</c>. \n            </summary>\n            <value><c>true</c> to display the selected items as chips; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Chips"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpenOnFocus",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether popup should open on focus. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if popup should open on focus; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "OpenOnFocus"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<dynamic>",
            "Documentation": "\n            <summary>\n            Gets or sets the value template.\n            </summary>\n            <value>The value template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EmptyTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the empty template shown when Data is empty collection.\n            </summary>\n            <value>The empty template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EmptyTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerAlwaysVisible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether pager is visible even when not enough data for paging.\n            </summary>\n            <value><c>true</c> if pager is visible even when not enough data for paging otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerAlwaysVisible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerHorizontalAlign",
            "TypeName": "Radzen.HorizontalAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the horizontal align.\n            </summary>\n            <value>The horizontal align.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerHorizontalAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowColumnResize",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether column resizing is allowed.\n            </summary>\n            <value><c>true</c> if column resizing is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowColumnResize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnWidth",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the width of all columns.\n            </summary>\n            <value>The width of all columns.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Responsive",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDropDownDataGrid`1\" /> is responsive.\n            </summary>\n            <value><c>true</c> if responsive; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Responsive"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowSearch",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether search button is shown.\n            </summary>\n            <value><c>true</c> if search button is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowSearch"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageNumbersCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the page numbers count.\n            </summary>\n            <value>The page numbers count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageNumbersCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPagingSummary",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary visibility.\n            </summary>\n            <value>The pager summary visibility.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPagingSummary"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingSummaryFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary format.\n            </summary>\n            <value>The pager summary format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagingSummaryFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EmptyText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the empty text.\n            </summary>\n            <value>The empty text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EmptyText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the search input placeholder text.\n            </summary>\n            <value>The search input placeholder text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedValue",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the selected value.\n            </summary>\n            <value>The selected value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the columns.\n            </summary>\n            <value>The columns.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxSelectedLabels",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the number of maximum selected labels.\n            </summary>\n            <value>The maximum selected labels.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxSelectedLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItemsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the selected items text.\n            </summary>\n            <value>The selected items text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItemsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSorting",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether sorting is allowed.\n            </summary>\n            <value><c>true</c> if sorting is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSorting"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowFiltering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether filtering is allowed.\n            </summary>\n            <value><c>true</c> if filtering is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowFiltering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowFilteringByAllStringColumns",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether filtering by all string columns is allowed.\n            </summary>\n            <value><c>true</c> if filtering by all string columns is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowFilteringByAllStringColumns"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowRowSelectOnRowClick",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether DataGrid row can be selected on row click.\n            </summary>\n            <value><c>true</c> if DataGrid row can be selected on row click; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowRowSelectOnRowClick"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Count",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the total number of items in the data source.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Count"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowVirtualization",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies wether virtualization is enabled. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowVirtualization"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the default page size. Set to <c>5</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowClear",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the user can clear the value. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if clearing is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowClear"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multiple",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DropDownBase`1\" /> is multiple.\n            </summary>\n            <value><c>true</c> if multiple; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Multiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelectAll",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the user can select all values in multiple selection. Set to <c>true</c> by default.\n            </summary>\n            <value><c>true</c> if select all values is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelectAll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<dynamic>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value property.\n            </summary>\n            <value>The value property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisabledProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the disabled property.\n            </summary>\n            <value>The disabled property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisabledProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItemChanged",
            "TypeName": "System.Action<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the selected item changed.\n            </summary>\n            <value>The selected item changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItemChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDelay",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the filter delay.\n            </summary>\n            <value>The filter delay.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterDelay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItem",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the selected item.\n            </summary>\n            <value>The selected item.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Separator",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the item separator for Multiple dropdown.\n            </summary>\n            <value>Item separator</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Separator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCaseSensitivity",
            "TypeName": "Radzen.FilterCaseSensitivity",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter case sensitivity.\n            </summary>\n            <value>The filter case sensitivity.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterCaseSensitivity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "Radzen.StringFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter operator.\n            </summary>\n            <value>The filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DataBoundFormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text property.\n            </summary>\n            <value>The text property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -137528573,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenDropDownDataGrid component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the t value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenDropDownDataGrid @bind-Value=@customerID TValue=\"string\" Data=@customers TextProperty=\"CompanyName\" ValueProperty=\"CustomerID\" Change=@(args =&gt; Console.WriteLine($\"Selected CustomerID: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDropDownDataGrid"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenDropDownDataGrid<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowRender",
            "TypeName": "System.Action<Radzen.RowRenderEventArgs<System.Object>>",
            "Documentation": "\n            <summary>\n            Gets or sets the row render callback. Use it to set row attributes.\n            </summary>\n            <value>The row render callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RowRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CellRender",
            "TypeName": "System.Action<Radzen.DataGridCellRenderEventArgs<System.Object>>",
            "Documentation": "\n            <summary>\n            Gets or sets the cell render callback. Use it to set cell attributes.\n            </summary>\n            <value>The cell render callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "CellRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Chips",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the selected items will be displayed as chips. Set to <c>false</c> by default.\n            Requires <see cref=\"P:Radzen.DropDownBase`1.Multiple\" /> to be set to <c>true</c>. \n            </summary>\n            <value><c>true</c> to display the selected items as chips; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Chips"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpenOnFocus",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether popup should open on focus. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if popup should open on focus; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "OpenOnFocus"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<dynamic>",
            "Documentation": "\n            <summary>\n            Gets or sets the value template.\n            </summary>\n            <value>The value template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EmptyTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the empty template shown when Data is empty collection.\n            </summary>\n            <value>The empty template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EmptyTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerAlwaysVisible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether pager is visible even when not enough data for paging.\n            </summary>\n            <value><c>true</c> if pager is visible even when not enough data for paging otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerAlwaysVisible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerHorizontalAlign",
            "TypeName": "Radzen.HorizontalAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the horizontal align.\n            </summary>\n            <value>The horizontal align.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerHorizontalAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowColumnResize",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether column resizing is allowed.\n            </summary>\n            <value><c>true</c> if column resizing is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowColumnResize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnWidth",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the width of all columns.\n            </summary>\n            <value>The width of all columns.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ColumnWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Responsive",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDropDownDataGrid`1\" /> is responsive.\n            </summary>\n            <value><c>true</c> if responsive; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Responsive"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowSearch",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether search button is shown.\n            </summary>\n            <value><c>true</c> if search button is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowSearch"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageNumbersCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the page numbers count.\n            </summary>\n            <value>The page numbers count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageNumbersCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPagingSummary",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary visibility.\n            </summary>\n            <value>The pager summary visibility.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPagingSummary"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingSummaryFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary format.\n            </summary>\n            <value>The pager summary format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagingSummaryFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EmptyText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the empty text.\n            </summary>\n            <value>The empty text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EmptyText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SearchText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the search input placeholder text.\n            </summary>\n            <value>The search input placeholder text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SearchText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedValue",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the selected value.\n            </summary>\n            <value>The selected value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the columns.\n            </summary>\n            <value>The columns.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxSelectedLabels",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the number of maximum selected labels.\n            </summary>\n            <value>The maximum selected labels.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxSelectedLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItemsText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the selected items text.\n            </summary>\n            <value>The selected items text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItemsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSorting",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether sorting is allowed.\n            </summary>\n            <value><c>true</c> if sorting is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSorting"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowFiltering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether filtering is allowed.\n            </summary>\n            <value><c>true</c> if filtering is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowFiltering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowFilteringByAllStringColumns",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether filtering by all string columns is allowed.\n            </summary>\n            <value><c>true</c> if filtering by all string columns is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowFilteringByAllStringColumns"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowRowSelectOnRowClick",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether DataGrid row can be selected on row click.\n            </summary>\n            <value><c>true</c> if DataGrid row can be selected on row click; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowRowSelectOnRowClick"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Count",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the total number of items in the data source.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Count"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowVirtualization",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies wether virtualization is enabled. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowVirtualization"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the default page size. Set to <c>5</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowClear",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the user can clear the value. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if clearing is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowClear"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multiple",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DropDownBase`1\" /> is multiple.\n            </summary>\n            <value><c>true</c> if multiple; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Multiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelectAll",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the user can select all values in multiple selection. Set to <c>true</c> by default.\n            </summary>\n            <value><c>true</c> if select all values is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelectAll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<dynamic>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value property.\n            </summary>\n            <value>The value property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisabledProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the disabled property.\n            </summary>\n            <value>The disabled property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisabledProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItemChanged",
            "TypeName": "System.Action<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the selected item changed.\n            </summary>\n            <value>The selected item changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItemChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDelay",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the filter delay.\n            </summary>\n            <value>The filter delay.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterDelay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItem",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the selected item.\n            </summary>\n            <value>The selected item.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Separator",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the item separator for Multiple dropdown.\n            </summary>\n            <value>Item separator</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Separator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCaseSensitivity",
            "TypeName": "Radzen.FilterCaseSensitivity",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter case sensitivity.\n            </summary>\n            <value>The filter case sensitivity.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterCaseSensitivity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "Radzen.StringFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter operator.\n            </summary>\n            <value>The filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DataBoundFormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text property.\n            </summary>\n            <value>The text property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1382731592,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>.ValueTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the value template.\n            </summary>\n            <value>The value template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValueTemplate",
            "ParentTag": "RadzenDropDownDataGrid"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ValueTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>.ValueTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1130173555,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>.ValueTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the value template.\n            </summary>\n            <value>The value template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValueTemplate",
            "ParentTag": "Radzen.Blazor.RadzenDropDownDataGrid"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ValueTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>.ValueTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -537114401,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>.EmptyTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the empty template shown when Data is empty collection.\n            </summary>\n            <value>The empty template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EmptyTemplate",
            "ParentTag": "RadzenDropDownDataGrid"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>.EmptyTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1691749035,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>.EmptyTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the empty template shown when Data is empty collection.\n            </summary>\n            <value>The empty template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EmptyTemplate",
            "ParentTag": "Radzen.Blazor.RadzenDropDownDataGrid"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>.EmptyTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -448560400,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>.Columns",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the columns.\n            </summary>\n            <value>The columns.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "RadzenDropDownDataGrid"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 474407205,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>.Columns",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the columns.\n            </summary>\n            <value>The columns.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "Radzen.Blazor.RadzenDropDownDataGrid"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1207951403,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenDropDownDataGrid"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1343061636,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenDropDownDataGrid"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2029509483,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenEmailValidator",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A validator component which checks if a component value is a valid email address.\n            Must be placed inside a <see cref=\"T:Radzen.Blazor.RadzenTemplateForm`1\" />\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTemplateForm TItem=\"Model\" Data=@model&gt;\n              &lt;RadzenTextBox style=\"display: block\" Name=\"Email\" @bind-Value=@model.Email /&gt;\n              &lt;RadzenEmailValidator Component=\"Email\" Style=\"position: absolute\" /&gt;\n            &lt;/RadzenTemplateForm&gt;\n            @code {\n             class Model\n              {\n               public string Email { get; set; }\n             }\n             \n             Model model = new Model();\n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenEmailValidator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the message displayed when the component is invalid. Set to <c>\"Invalid email\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Component",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the component which this validator should validate. Must be set to the <see cref=\"P:Radzen.IRadzenFormComponent.Name\" /> of an existing component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Component"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Popup",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if the validator is displayed as a popup or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Popup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenEmailValidator"
        }
      },
      {
        "HashCode": -1683431935,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenEmailValidator",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A validator component which checks if a component value is a valid email address.\n            Must be placed inside a <see cref=\"T:Radzen.Blazor.RadzenTemplateForm`1\" />\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTemplateForm TItem=\"Model\" Data=@model&gt;\n              &lt;RadzenTextBox style=\"display: block\" Name=\"Email\" @bind-Value=@model.Email /&gt;\n              &lt;RadzenEmailValidator Component=\"Email\" Style=\"position: absolute\" /&gt;\n            &lt;/RadzenTemplateForm&gt;\n            @code {\n             class Model\n              {\n               public string Email { get; set; }\n             }\n             \n             Model model = new Model();\n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenEmailValidator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the message displayed when the component is invalid. Set to <c>\"Invalid email\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Component",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the component which this validator should validate. Must be set to the <see cref=\"P:Radzen.IRadzenFormComponent.Name\" /> of an existing component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Component"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Popup",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if the validator is displayed as a popup or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Popup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenEmailValidator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -529739328,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenFieldset",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenFieldset component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenFieldset AllowCollapse=\"true\"\"&gt;\n                &lt;HeaderTemplate&gt;\n                    Header\n                &lt;/HeaderTemplate&gt;\n                &lt;ChildContent&gt;\n                    Content\n                &lt;/ChildContent&gt;\n                &lt;SummaryTemplate&gt;\n                    Summary\n                &lt;/SummaryTemplate&gt;\n            &lt;/RadzenFieldset&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenFieldset"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AllowCollapse",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether collapsing is allowed. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if collapsing is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowCollapse"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Collapsed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenFieldset\" /> is collapsed.\n            </summary>\n            <value><c>true</c> if collapsed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Collapsed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the header template.\n            </summary>\n            <value>The header template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SummaryTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the summary template.\n            </summary>\n            <value>The summary template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SummaryTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expand",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Documentation": "\n            <summary>\n            Gets or sets the expand callback.\n            </summary>\n            <value>The expand callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expand",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Collapse",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Documentation": "\n            <summary>\n            Gets or sets the collapse callback.\n            </summary>\n            <value>The collapse callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Collapse",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenFieldset"
        }
      },
      {
        "HashCode": 828631042,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenFieldset",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenFieldset component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenFieldset AllowCollapse=\"true\"\"&gt;\n                &lt;HeaderTemplate&gt;\n                    Header\n                &lt;/HeaderTemplate&gt;\n                &lt;ChildContent&gt;\n                    Content\n                &lt;/ChildContent&gt;\n                &lt;SummaryTemplate&gt;\n                    Summary\n                &lt;/SummaryTemplate&gt;\n            &lt;/RadzenFieldset&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenFieldset"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AllowCollapse",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether collapsing is allowed. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if collapsing is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowCollapse"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Collapsed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenFieldset\" /> is collapsed.\n            </summary>\n            <value><c>true</c> if collapsed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Collapsed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the header template.\n            </summary>\n            <value>The header template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SummaryTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the summary template.\n            </summary>\n            <value>The summary template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SummaryTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expand",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Documentation": "\n            <summary>\n            Gets or sets the expand callback.\n            </summary>\n            <value>The expand callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expand",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Collapse",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Documentation": "\n            <summary>\n            Gets or sets the collapse callback.\n            </summary>\n            <value>The collapse callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Collapse",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenFieldset",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2131352479,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenFieldset.HeaderTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the header template.\n            </summary>\n            <value>The header template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "RadzenFieldset"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenFieldset.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 549901798,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenFieldset.HeaderTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the header template.\n            </summary>\n            <value>The header template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "Radzen.Blazor.RadzenFieldset"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenFieldset.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1844919961,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenFieldset.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenFieldset"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenFieldset.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1552745036,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenFieldset.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenFieldset"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenFieldset.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1584063772,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenFieldset.SummaryTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the summary template.\n            </summary>\n            <value>The summary template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SummaryTemplate",
            "ParentTag": "RadzenFieldset"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenFieldset.SummaryTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -904997607,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenFieldset.SummaryTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the summary template.\n            </summary>\n            <value>The summary template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SummaryTemplate",
            "ParentTag": "Radzen.Blazor.RadzenFieldset"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenFieldset.SummaryTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -142935735,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenFileInput<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenFileInput component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenFileInput @bind-Value=@employee.Photo TValue=\"string\" Change=@(args =&gt; Console.WriteLine($\"File content as base64 string: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenFileInput"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenFileInput<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChooseText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the choose button text.\n            </summary>\n            <value>The choose button text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChooseText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the title.\n            </summary>\n            <value>The title.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Error",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.UploadErrorEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the error callback.\n            </summary>\n            <value>The error callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Error",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ImageClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the image click callback.\n            </summary>\n            <value>The image click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ImageClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Accept",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the comma-separated accepted MIME types.\n            </summary>\n            <value>The comma-separated accepted MIME types.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Accept"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxFileSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the maximum size of the file.\n            </summary>\n            <value>The maximum size of the file.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxFileSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxWidth",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the maximum width of the file, keeping aspect ratio.\n            </summary>\n            <value>The maximum width of the file.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxHeight",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the maximum height of the file, keeping aspect ratio.\n            </summary>\n            <value>The maximum height of the file.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ImageStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the image style.\n            </summary>\n            <value>The image style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ImageStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FileName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the image file name.\n            </summary>\n            <value>The image file name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FileName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FileNameChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the FileName changed.\n            </summary>\n            <value>The FileName changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FileNameChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FileSize",
            "TypeName": "System.Int64?",
            "Documentation": "\n            <summary>\n            Gets or sets the image file size.\n            </summary>\n            <value>The image file size.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FileSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FileSizeChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int64?>",
            "Documentation": "\n            <summary>\n            Gets or sets the FileSize changed.\n            </summary>\n            <value>The FileSize changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FileSizeChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenFileInput<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 32368769,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenFileInput<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenFileInput component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenFileInput @bind-Value=@employee.Photo TValue=\"string\" Change=@(args =&gt; Console.WriteLine($\"File content as base64 string: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenFileInput"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenFileInput<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChooseText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the choose button text.\n            </summary>\n            <value>The choose button text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChooseText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the title.\n            </summary>\n            <value>The title.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Error",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.UploadErrorEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the error callback.\n            </summary>\n            <value>The error callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Error",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ImageClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the image click callback.\n            </summary>\n            <value>The image click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ImageClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Accept",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the comma-separated accepted MIME types.\n            </summary>\n            <value>The comma-separated accepted MIME types.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Accept"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxFileSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the maximum size of the file.\n            </summary>\n            <value>The maximum size of the file.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxFileSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxWidth",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the maximum width of the file, keeping aspect ratio.\n            </summary>\n            <value>The maximum width of the file.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxHeight",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the maximum height of the file, keeping aspect ratio.\n            </summary>\n            <value>The maximum height of the file.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxHeight"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ImageStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the image style.\n            </summary>\n            <value>The image style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ImageStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FileName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the image file name.\n            </summary>\n            <value>The image file name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FileName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FileNameChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the FileName changed.\n            </summary>\n            <value>The FileName changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FileNameChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FileSize",
            "TypeName": "System.Int64?",
            "Documentation": "\n            <summary>\n            Gets or sets the image file size.\n            </summary>\n            <value>The image file size.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FileSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FileSizeChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int64?>",
            "Documentation": "\n            <summary>\n            Gets or sets the FileSize changed.\n            </summary>\n            <value>The FileSize changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FileSizeChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenFileInput<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1316474051,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenFooter",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenFooter component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenFooter"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenFooter"
        }
      },
      {
        "HashCode": -1233253125,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenFooter",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenFooter component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenFooter"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenFooter",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 358519096,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenFooter.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenFooter"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenFooter.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 33943010,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenFooter.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenFooter"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenFooter.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 211879285,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenGoogleMap",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenGoogleMap component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenGoogleMap Zoom=\"3\" Center=@(new GoogleMapPosition() { Lat = 42.6977, Lng = 23.3219 }) MapClick=@OnMapClick MarkerClick=@OnMarkerClick\"&gt;\n                &lt;Markers&gt;\n                    &lt;RadzenGoogleMapMarker Title=\"London\" Label=\"London\" Position=@(new GoogleMapPosition() { Lat = 51.5074, Lng = 0.1278 }) /&gt;\n                    &lt;RadzenGoogleMapMarker Title=\"Paris \" Label=\"Paris\" Position=@(new GoogleMapPosition() { Lat = 48.8566, Lng = 2.3522 }) /&gt;\n                &lt;/Markers&gt;\n            &lt;/RadzenGoogleMap&gt;\n            @code {\n              void OnMapClick(GoogleMapClickEventArgs args)\n              {\n                Console.WriteLine($\"Map clicked at Lat: {args.Position.Lat}, Lng: {args.Position.Lng}\");\n              }\n              \n              void OnMarkerClick(RadzenGoogleMapMarker marker)\n              {\n                Console.WriteLine($\"Map {marker.Title} marker clicked. Marker position -&gt; Lat: {marker.Position.Lat}, Lng: {marker.Position.Lng}\");\n              }\n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenGoogleMap"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<Radzen.Blazor.RadzenGoogleMapMarker>",
            "Documentation": "\n            <summary>\n            Gets or sets the data - collection of RadzenGoogleMapMarker.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MapClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.GoogleMapClickEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the map click callback.\n            </summary>\n            <value>The map click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MapClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MarkerClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.Blazor.RadzenGoogleMapMarker>",
            "Documentation": "\n            <summary>\n            Gets or sets the marker click callback.\n            </summary>\n            <value>The marker click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MarkerClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApiKey",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the Google API key.\n            </summary>\n            <value>The Google API key.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApiKey"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Options",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the Google map options: https://developers.google.com/maps/documentation/javascript/reference/map#MapOptions.\n            </summary>\n            <value>The Google map options.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Options"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Zoom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the zoom.\n            </summary>\n            <value>The zoom.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Zoom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Center",
            "TypeName": "Radzen.GoogleMapPosition",
            "Documentation": "\n            <summary>\n            Gets or sets the center map position.\n            </summary>\n            <value>The center.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Center"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Markers",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the markers.\n            </summary>\n            <value>The markers.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Markers",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenGoogleMap"
        }
      },
      {
        "HashCode": 336887329,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenGoogleMap",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenGoogleMap component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenGoogleMap Zoom=\"3\" Center=@(new GoogleMapPosition() { Lat = 42.6977, Lng = 23.3219 }) MapClick=@OnMapClick MarkerClick=@OnMarkerClick\"&gt;\n                &lt;Markers&gt;\n                    &lt;RadzenGoogleMapMarker Title=\"London\" Label=\"London\" Position=@(new GoogleMapPosition() { Lat = 51.5074, Lng = 0.1278 }) /&gt;\n                    &lt;RadzenGoogleMapMarker Title=\"Paris \" Label=\"Paris\" Position=@(new GoogleMapPosition() { Lat = 48.8566, Lng = 2.3522 }) /&gt;\n                &lt;/Markers&gt;\n            &lt;/RadzenGoogleMap&gt;\n            @code {\n              void OnMapClick(GoogleMapClickEventArgs args)\n              {\n                Console.WriteLine($\"Map clicked at Lat: {args.Position.Lat}, Lng: {args.Position.Lng}\");\n              }\n              \n              void OnMarkerClick(RadzenGoogleMapMarker marker)\n              {\n                Console.WriteLine($\"Map {marker.Title} marker clicked. Marker position -&gt; Lat: {marker.Position.Lat}, Lng: {marker.Position.Lng}\");\n              }\n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenGoogleMap"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<Radzen.Blazor.RadzenGoogleMapMarker>",
            "Documentation": "\n            <summary>\n            Gets or sets the data - collection of RadzenGoogleMapMarker.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MapClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.GoogleMapClickEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the map click callback.\n            </summary>\n            <value>The map click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MapClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MarkerClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.Blazor.RadzenGoogleMapMarker>",
            "Documentation": "\n            <summary>\n            Gets or sets the marker click callback.\n            </summary>\n            <value>The marker click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MarkerClick",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApiKey",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the Google API key.\n            </summary>\n            <value>The Google API key.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ApiKey"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Options",
            "TypeName": "System.Collections.Generic.Dictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the Google map options: https://developers.google.com/maps/documentation/javascript/reference/map#MapOptions.\n            </summary>\n            <value>The Google map options.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Options"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Zoom",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the zoom.\n            </summary>\n            <value>The zoom.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Zoom"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Center",
            "TypeName": "Radzen.GoogleMapPosition",
            "Documentation": "\n            <summary>\n            Gets or sets the center map position.\n            </summary>\n            <value>The center.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Center"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Markers",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the markers.\n            </summary>\n            <value>The markers.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Markers",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenGoogleMap",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1831314509,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGoogleMap.Markers",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the markers.\n            </summary>\n            <value>The markers.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Markers",
            "ParentTag": "RadzenGoogleMap"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGoogleMap.Markers",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1684087223,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGoogleMap.Markers",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the markers.\n            </summary>\n            <value>The markers.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Markers",
            "ParentTag": "Radzen.Blazor.RadzenGoogleMap"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGoogleMap.Markers",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 247812288,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenGoogleMapMarker",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenGoogleMapMarker component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenGoogleMapMarker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "Radzen.GoogleMapPosition",
            "Documentation": "\n            <summary>\n            Gets or sets the position.\n            </summary>\n            <value>The position.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the title.\n            </summary>\n            <value>The title.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the label.\n            </summary>\n            <value>The label.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenGoogleMapMarker"
        }
      },
      {
        "HashCode": 704169268,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenGoogleMapMarker",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenGoogleMapMarker component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenGoogleMapMarker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "Radzen.GoogleMapPosition",
            "Documentation": "\n            <summary>\n            Gets or sets the position.\n            </summary>\n            <value>The position.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the title.\n            </summary>\n            <value>The title.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the label.\n            </summary>\n            <value>The label.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenGoogleMapMarker",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1845200053,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenGravatar",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenGravatar component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenGravatar Email=\"info@radzen.com\" /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenGravatar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Email",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the email.\n            </summary>\n            <value>The email.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Email"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenGravatar"
        }
      },
      {
        "HashCode": 2122788927,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenGravatar",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenGravatar component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenGravatar Email=\"info@radzen.com\" /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenGravatar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Email",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the email.\n            </summary>\n            <value>The email.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Email"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenGravatar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 467636439,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenGridLines",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Grid line configuration of <see cref=\"T:Radzen.Blazor.IChartAxis\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenGridLines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the pixel width of the grid lines. Set to <c>1</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of line used to render the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to display grid lines or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenGridLines"
        }
      },
      {
        "HashCode": 1561659360,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenGridLines",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Grid line configuration of <see cref=\"T:Radzen.Blazor.IChartAxis\" />.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenGridLines"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the pixel width of the grid lines. Set to <c>1</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of line used to render the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to display grid lines or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenGridLines",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1308392396,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHeader",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenHeader component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHeader"
        }
      },
      {
        "HashCode": 1614209510,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHeader",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenHeader component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -600746472,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenHeader.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 187496585,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenHeader.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenHeader"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenHeader.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -571479954,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHeading",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenHeading component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHeading"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the size.\n            </summary>\n            <value>The size.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHeading"
        }
      },
      {
        "HashCode": -572311405,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHeading",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenHeading component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHeading"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the size.\n            </summary>\n            <value>The size.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHeading",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1770058416,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtml",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenHtml component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtml"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenHtml\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtml"
        }
      },
      {
        "HashCode": -1826437701,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtml",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenHtml component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtml"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenHtml\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtml",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -598409268,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenHtml.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenHtml"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenHtml.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1136063627,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenHtml.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenHtml"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenHtml.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1839637437,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditor",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A component which edits HTML content. Provides built-in upload capabilities.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html /&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditor"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UploadHeaders",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
            "Documentation": "\n            <summary>\n            Specifies custom headers that will be submit during uploads.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UploadHeaders"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Paste",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.HtmlEditorPasteEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user pastes content in the editor. Commonly used to filter unwanted HTML.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html Paste=@OnPaste /&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n              void OnPaste(HtmlEditorPasteEventArgs args)\n              {\n                // Set args.Html to filter unwanted tags.\n                args.Html = args.Html.Replace(\"&lt;br&gt;&gt;\", \"\");\n              }\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Paste",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Execute",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.HtmlEditorExecuteEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user executes a command of the editor (e.g. by clicking one of the tools).\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor Execute=@OnExecute&gt;\n              &lt;RadzenHtmlEditorCustomTool CommandName=\"InsertToday\" Icon=\"today\" Title=\"Insert today\" /&gt;\n            &lt;/RadzenHtmlEditor&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n              async Task OnExecute(HtmlEditorExecuteEventArgs args)\n              {\n                if (args.CommandName == \"InsertToday\")\n                {\n                  await args.Editor.ExecuteCommandAsync(HtmlEditorCommands.InsertHtml, DateTime.Today.ToLongDateString());\n                }\n             }\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Execute",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UploadUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the URL to which RadzenHtmlEditor will submit files.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UploadUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditor"
        }
      },
      {
        "HashCode": -1175489402,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditor",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A component which edits HTML content. Provides built-in upload capabilities.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html /&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditor"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UploadHeaders",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.String>",
            "Documentation": "\n            <summary>\n            Specifies custom headers that will be submit during uploads.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UploadHeaders"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Paste",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.HtmlEditorPasteEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user pastes content in the editor. Commonly used to filter unwanted HTML.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html Paste=@OnPaste /&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n              void OnPaste(HtmlEditorPasteEventArgs args)\n              {\n                // Set args.Html to filter unwanted tags.\n                args.Html = args.Html.Replace(\"&lt;br&gt;&gt;\", \"\");\n              }\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Paste",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Execute",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.HtmlEditorExecuteEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user executes a command of the editor (e.g. by clicking one of the tools).\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor Execute=@OnExecute&gt;\n              &lt;RadzenHtmlEditorCustomTool CommandName=\"InsertToday\" Icon=\"today\" Title=\"Insert today\" /&gt;\n            &lt;/RadzenHtmlEditor&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n              async Task OnExecute(HtmlEditorExecuteEventArgs args)\n              {\n                if (args.CommandName == \"InsertToday\")\n                {\n                  await args.Editor.ExecuteCommandAsync(HtmlEditorCommands.InsertHtml, DateTime.Today.ToLongDateString());\n                }\n             }\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Execute",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UploadUrl",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the URL to which RadzenHtmlEditor will submit files.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UploadUrl"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditor",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -182320977,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenHtmlEditor.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenHtmlEditor"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditor.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 503277633,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenHtmlEditor.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenHtmlEditor"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditor.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1266007238,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorAlignCenter",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which centers the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorAlignCenter /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorAlignCenter"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Align center\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorAlignCenter"
        }
      },
      {
        "HashCode": 2076587093,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorAlignCenter",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which centers the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorAlignCenter /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorAlignCenter"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Align center\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorAlignCenter",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 749235305,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorAlignLeft",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which aligns the selection to the left.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorAlignLeft /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorAlignLeft"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Align left\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorAlignLeft"
        }
      },
      {
        "HashCode": 1788389046,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorAlignLeft",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which aligns the selection to the left.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorAlignLeft /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorAlignLeft"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Align left\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorAlignLeft",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1559527907,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorAlignRight",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which aligns the selection to the right.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorAlignRight /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorAlignRight"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Align right\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorAlignRight"
        }
      },
      {
        "HashCode": -596489226,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorAlignRight",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which aligns the selection to the right.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorAlignRight /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorAlignRight"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Align right\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorAlignRight",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1098686167,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorBackground",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which sets the background color of the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorBackground /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorBackground"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the default background color. Set to <c>\"rgb(0, 0, 255)\"</c> by default;\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Background color\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowHSV",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ShowHSV\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowHSV"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowRGBA",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ShowRGBA\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowRGBA"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowColors",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ShowColors\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowColors"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ShowButton\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HexText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.HexText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HexText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RedText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.RedText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RedText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreenText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.GreenText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "GreenText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BlueText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.BlueText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BlueText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AlphaText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.AlphaText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AlphaText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ButtonText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ButtonText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ButtonText"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorBackground"
        }
      },
      {
        "HashCode": -1760597454,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorBackground",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which sets the background color of the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorBackground /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorBackground"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the default background color. Set to <c>\"rgb(0, 0, 255)\"</c> by default;\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Background color\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowHSV",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ShowHSV\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowHSV"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowRGBA",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ShowRGBA\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowRGBA"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowColors",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ShowColors\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowColors"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ShowButton\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HexText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.HexText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HexText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RedText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.RedText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RedText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreenText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.GreenText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "GreenText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BlueText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.BlueText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BlueText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AlphaText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.AlphaText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AlphaText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ButtonText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ButtonText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ButtonText"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorBackground",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -901437574,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenHtmlEditorBackground.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenHtmlEditorBackground"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorBackground.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 569879243,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenHtmlEditorBackground.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenHtmlEditorBackground"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorBackground.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -974462858,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorBackgroundItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Adds a custom color to <see cref=\"T:Radzen.Blazor.RadzenHtmlEditorBackground\" />.\n            </summary>\n            <example>\n            <code>\n             &lt;RadzenHtmlEditorBackground &gt;\n                &lt;RadzenHtmlEditorBackgroundItem Value=\"red\" /&gt;\n                &lt;RadzenHtmlEditorBackgroundItem Value=\"green\" /&gt;\n             &lt;/RadzenHtmlEditorBackground &gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorBackgroundItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The custom color to add.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorBackgroundItem"
        }
      },
      {
        "HashCode": -797425358,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorBackgroundItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Adds a custom color to <see cref=\"T:Radzen.Blazor.RadzenHtmlEditorBackground\" />.\n            </summary>\n            <example>\n            <code>\n             &lt;RadzenHtmlEditorBackground &gt;\n                &lt;RadzenHtmlEditorBackgroundItem Value=\"red\" /&gt;\n                &lt;RadzenHtmlEditorBackgroundItem Value=\"green\" /&gt;\n             &lt;/RadzenHtmlEditorBackground &gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorBackgroundItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The custom color to add.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorBackgroundItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 365525139,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorBold",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which bolds the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorBold /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorBold"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Bold\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorBold"
        }
      },
      {
        "HashCode": 2069369740,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorBold",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which bolds the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorBold /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorBold"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Bold\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorBold",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1888137014,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorColor",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which sets the text color of the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorColor /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorColor"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the default text color. Set to <c>\"rgb(255, 0, 0)\"</c> by default;\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Text color\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowHSV",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ShowHSV\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowHSV"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowRGBA",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ShowRGBA\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowRGBA"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowColors",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ShowColors\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowColors"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ShowButton\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HexText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.HexText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HexText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RedText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.RedText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RedText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreenText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.GreenText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "GreenText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BlueText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.BlueText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BlueText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AlphaText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.AlphaText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AlphaText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ButtonText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ButtonText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ButtonText"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorColor"
        }
      },
      {
        "HashCode": -168969563,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorColor",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which sets the text color of the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorColor /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorColor"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the default text color. Set to <c>\"rgb(255, 0, 0)\"</c> by default;\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Text color\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowHSV",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ShowHSV\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowHSV"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowRGBA",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ShowRGBA\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowRGBA"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowColors",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ShowColors\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowColors"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowButton",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ShowButton\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HexText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.HexText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HexText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RedText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.RedText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "RedText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreenText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.GreenText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "GreenText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BlueText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.BlueText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "BlueText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AlphaText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.AlphaText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AlphaText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ButtonText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Sets <see cref=\"P:Radzen.Blazor.RadzenColorPicker.ButtonText\" /> of the built-in RadzenColorPicker.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ButtonText"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorColor",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1642468669,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenHtmlEditorColor.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenHtmlEditorColor"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorColor.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2006427208,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenHtmlEditorColor.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenHtmlEditorColor"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorColor.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 393837483,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorColorItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Adds a custom color to <see cref=\"T:Radzen.Blazor.RadzenHtmlEditorColor\" />.\n            </summary>\n            <example>\n            <code>\n             &lt;RadzenHtmlEditorColor &gt;\n                &lt;RadzenHtmlEditorColorItem Value=\"red\" /&gt;\n                &lt;RadzenHtmlEditorColorItem Value=\"green\" /&gt;\n             &lt;/RadzenHtmlEditorColor &gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorColorItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The custom color to add.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorColorItem"
        }
      },
      {
        "HashCode": -1967336682,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorColorItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Adds a custom color to <see cref=\"T:Radzen.Blazor.RadzenHtmlEditorColor\" />.\n            </summary>\n            <example>\n            <code>\n             &lt;RadzenHtmlEditorColor &gt;\n                &lt;RadzenHtmlEditorColorItem Value=\"red\" /&gt;\n                &lt;RadzenHtmlEditorColorItem Value=\"green\" /&gt;\n             &lt;/RadzenHtmlEditorColor &gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorColorItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The custom color to add.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorColorItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -470576901,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorCustomTool",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A custom tool in RadzenHtmlEditor\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor Execute=@OnExecute&gt;\n              &lt;RadzenHtmlEditorCustomTool CommandName=\"InsertToday\" Icon=\"today\" Title=\"Insert today\" /&gt;\n            &lt;/RadzenHtmlEditor&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n              async Task OnExecute(HtmlEditorExecuteEventArgs args)\n              {\n                if (args.CommandName == \"InsertToday\")\n                {\n                  await args.Editor.ExecuteCommandAsync(HtmlEditorCommands.InsertHtml, DateTime.Today.ToLongDateString());\n                }\n             }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorCustomTool"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if the tools is visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the icon of the tool. Set to <c>\"settings\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenHtmlEditor>",
            "Documentation": "\n            <summary>\n            The template of the tool. Use to render a custom tool.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether the tool is selected.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether the tool is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandName",
            "TypeName": "System.String",
            "Documentation": "\n            Specifies the name of the command. It is available as <see cref=\"P:Radzen.HtmlEditorExecuteEventArgs.CommandName\" /> when\n            <see cref=\"P:Radzen.Blazor.RadzenHtmlEditor.Execute\" /> is raised.\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorCustomTool"
        }
      },
      {
        "HashCode": 156653263,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorCustomTool",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A custom tool in RadzenHtmlEditor\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor Execute=@OnExecute&gt;\n              &lt;RadzenHtmlEditorCustomTool CommandName=\"InsertToday\" Icon=\"today\" Title=\"Insert today\" /&gt;\n            &lt;/RadzenHtmlEditor&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n              async Task OnExecute(HtmlEditorExecuteEventArgs args)\n              {\n                if (args.CommandName == \"InsertToday\")\n                {\n                  await args.Editor.ExecuteCommandAsync(HtmlEditorCommands.InsertHtml, DateTime.Today.ToLongDateString());\n                }\n             }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorCustomTool"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if the tools is visible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the icon of the tool. Set to <c>\"settings\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenHtmlEditor>",
            "Documentation": "\n            <summary>\n            The template of the tool. Use to render a custom tool.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether the tool is selected.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether the tool is disabled.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CommandName",
            "TypeName": "System.String",
            "Documentation": "\n            Specifies the name of the command. It is available as <see cref=\"P:Radzen.HtmlEditorExecuteEventArgs.CommandName\" /> when\n            <see cref=\"P:Radzen.Blazor.RadzenHtmlEditor.Execute\" /> is raised.\n        ",
            "Metadata": {
              "Common.PropertyName": "CommandName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorCustomTool",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1530184403,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenHtmlEditorCustomTool.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            The template of the tool. Use to render a custom tool.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenHtmlEditorCustomTool"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorCustomTool.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1625322927,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenHtmlEditorCustomTool.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            The template of the tool. Use to render a custom tool.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenHtmlEditorCustomTool"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorCustomTool.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1964766300,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorFontName",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A tool which changes the font of the selected text.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorFontName /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorFontName"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Sets the child content.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the placeholder displayed to the user. Set to <c>\"Font\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Font name\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorFontName"
        }
      },
      {
        "HashCode": 382219842,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorFontName",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A tool which changes the font of the selected text.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorFontName /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorFontName"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Sets the child content.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the placeholder displayed to the user. Set to <c>\"Font\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Font name\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorFontName",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 976627072,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenHtmlEditorFontName.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Sets the child content.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenHtmlEditorFontName"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorFontName.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1392605123,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenHtmlEditorFontName.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Sets the child content.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenHtmlEditorFontName"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorFontName.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -288246428,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorFontNameItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Adds a custom font to a <see cref=\"T:Radzen.Blazor.RadzenHtmlEditorFontName\" />.\n            </summary>\n            <example>\n            <code>\n             &lt;RadzenHtmlEditorFontName&gt;\n             &lt;RadzenHtmlEditorFontNameItem Text=\"Times New Roman\" Value='\"Times New Roman\"' /&gt;\n             &lt;/RadzenHtmlEditorFontName&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorFontNameItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the font e.g. <c>\"Times New Roman\"</c>.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The CSS value of the font. Use quotes if it contains spaces.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorFontNameItem"
        }
      },
      {
        "HashCode": -564774877,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorFontNameItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Adds a custom font to a <see cref=\"T:Radzen.Blazor.RadzenHtmlEditorFontName\" />.\n            </summary>\n            <example>\n            <code>\n             &lt;RadzenHtmlEditorFontName&gt;\n             &lt;RadzenHtmlEditorFontNameItem Text=\"Times New Roman\" Value='\"Times New Roman\"' /&gt;\n             &lt;/RadzenHtmlEditorFontName&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorFontNameItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the font e.g. <c>\"Times New Roman\"</c>.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The CSS value of the font. Use quotes if it contains spaces.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorFontNameItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -461782113,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorFontSize",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A tool which changes the font size of the selected text.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorFontSize /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorFontSize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the placeholder displayed to the user. Set to <c>\"Font size\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Font size\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorFontSize"
        }
      },
      {
        "HashCode": -699248051,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorFontSize",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A tool which changes the font size of the selected text.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorFontSize /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorFontSize"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the placeholder displayed to the user. Set to <c>\"Font size\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Font size\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorFontSize",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -971959248,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorFormatBlock",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A tool which changes the style of a the selected text by making it a heading or paragraph.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorFormatBlock /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorFormatBlock"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the placeholder displayed to the user. Set to <c>\"Format block\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Text style\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorFormatBlock"
        }
      },
      {
        "HashCode": -1849629688,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorFormatBlock",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A tool which changes the style of a the selected text by making it a heading or paragraph.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorFormatBlock /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorFormatBlock"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the placeholder displayed to the user. Set to <c>\"Format block\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Text style\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorFormatBlock",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1774716092,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorImage",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A tool which inserts and uploads images in a <see cref=\"T:Radzen.Blazor.RadzenHtmlEditor\" />.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorImage /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorImage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Insert image\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of the label suggesting the user to select a file for upload. Set to <c>\"Select image file to upload\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UploadChooseText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of the upload label. Set to <c>\"Browse\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UploadChooseText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UrlText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of the label suggesting the user to enter a web address. Set to <c>\"or enter a web address\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UrlText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AltText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of the label suggesting the user to enter a alternative text (<c>alt</c>) for the image. Set to <c>\"Alternative text\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AltText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OkText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of button which inserts the image. Set to <c>\"OK\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OkText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CancelText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of button which cancels image insertion and closes the dialog. Set to <c>\"Cancel\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CancelText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "WidthText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of label for image width. Set to <c>\"Image Width\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "WidthText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeightText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of label for image height. Set to <c>\"Image Height\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeightText"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorImage"
        }
      },
      {
        "HashCode": -1061963867,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorImage",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A tool which inserts and uploads images in a <see cref=\"T:Radzen.Blazor.RadzenHtmlEditor\" />.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorImage /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorImage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Insert image\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of the label suggesting the user to select a file for upload. Set to <c>\"Select image file to upload\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UploadChooseText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of the upload label. Set to <c>\"Browse\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UploadChooseText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UrlText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of the label suggesting the user to enter a web address. Set to <c>\"or enter a web address\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UrlText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AltText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of the label suggesting the user to enter a alternative text (<c>alt</c>) for the image. Set to <c>\"Alternative text\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AltText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OkText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of button which inserts the image. Set to <c>\"OK\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OkText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CancelText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of button which cancels image insertion and closes the dialog. Set to <c>\"Cancel\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CancelText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "WidthText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of label for image width. Set to <c>\"Image Width\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "WidthText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeightText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of label for image height. Set to <c>\"Image Height\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeightText"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorImage",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -463130648,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorIndent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which indents the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorIndent /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorIndent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Indent\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorIndent"
        }
      },
      {
        "HashCode": 46920122,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorIndent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which indents the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorIndent /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorIndent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Indent\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorIndent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 429092881,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorItalic",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which makes the selection italic.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorItalic /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorItalic"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Italic\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorItalic"
        }
      },
      {
        "HashCode": 790163696,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorItalic",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which makes the selection italic.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorItalic /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorItalic"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Italic\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorItalic",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -233626186,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorJustify",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which justifies the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorJustify /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorJustify"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Justify\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorJustify"
        }
      },
      {
        "HashCode": 1456554701,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorJustify",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which justifies the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorJustify /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorJustify"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Justify\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorJustify",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 293247382,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorLink",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A tool which creates links from the selection of a <see cref=\"T:Radzen.Blazor.RadzenHtmlEditor\" />.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorLink /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Insert link\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UrlText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of the label suggesting the user to enter a web address. Set to <c>\"Web address\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UrlText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpenInNewWindowText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of the checkbox that opens the link in new window. Set to <c>\"Open in new window\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OpenInNewWindowText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LinkText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of the label suggesting the user to change the text of the link. Set to <c>\"Text\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LinkText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OkText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of button which inserts the image. Set to <c>\"OK\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OkText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CancelText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of button which cancels image insertion and closes the dialog. Set to <c>\"Cancel\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CancelText"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorLink"
        }
      },
      {
        "HashCode": -759143309,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorLink",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A tool which creates links from the selection of a <see cref=\"T:Radzen.Blazor.RadzenHtmlEditor\" />.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorLink /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Insert link\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UrlText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of the label suggesting the user to enter a web address. Set to <c>\"Web address\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "UrlText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OpenInNewWindowText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of the checkbox that opens the link in new window. Set to <c>\"Open in new window\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OpenInNewWindowText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LinkText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of the label suggesting the user to change the text of the link. Set to <c>\"Text\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LinkText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OkText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of button which inserts the image. Set to <c>\"OK\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OkText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CancelText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text of button which cancels image insertion and closes the dialog. Set to <c>\"Cancel\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CancelText"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1983251303,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorOrderedList",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which inserts an ordered list (<c>ol</c>).\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorOrderedList /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorOrderedList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Ordered list\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorOrderedList"
        }
      },
      {
        "HashCode": -616036701,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorOrderedList",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which inserts an ordered list (<c>ol</c>).\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorOrderedList /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorOrderedList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Ordered list\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorOrderedList",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1023960563,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorOutdent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which outdents the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorOutdent /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorOutdent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Outdent\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorOutdent"
        }
      },
      {
        "HashCode": -858912656,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorOutdent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which outdents the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorOutdent /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorOutdent"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Outdent\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorOutdent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1830209530,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorRedo",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which repeats the last undone command.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorRedo /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorRedo"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Redo\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorRedo"
        }
      },
      {
        "HashCode": 1571666754,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorRedo",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which repeats the last undone command.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorRedo /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorRedo"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Redo\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorRedo",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1356648657,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorRemoveFormat",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which removes the styling of the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorRemoveFormat /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorRemoveFormat"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Remove styling\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorRemoveFormat"
        }
      },
      {
        "HashCode": 750832816,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorRemoveFormat",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which removes the styling of the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorRemoveFormat /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorRemoveFormat"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Remove styling\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorRemoveFormat",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 229910359,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorSeparator",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor visual separator.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorLink /&gt;\n             &lt;RadzenHtmlEditorSeparator /&gt;\n             &lt;RadzenHtmlEditorJustify /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorSeparator"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorSeparator"
        }
      },
      {
        "HashCode": 1828510485,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorSeparator",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor visual separator.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorLink /&gt;\n             &lt;RadzenHtmlEditorSeparator /&gt;\n             &lt;RadzenHtmlEditorJustify /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorSeparator"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorSeparator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1168652468,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorStrikeThrough",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which applies \"strike through\" styling to the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorStrikeThrough /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorStrikeThrough"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Strikethrough\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorStrikeThrough"
        }
      },
      {
        "HashCode": 1628094236,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorStrikeThrough",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which applies \"strike through\" styling to the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorStrikeThrough /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorStrikeThrough"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Strikethrough\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorStrikeThrough",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1328104906,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorSubscript",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which formats the selection as subscript.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorSubscript /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorSubscript"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Subscript\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorSubscript"
        }
      },
      {
        "HashCode": -1759368529,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorSubscript",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which formats the selection as subscript.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorSubscript /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorSubscript"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Subscript\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorSubscript",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 194530613,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorSuperscript",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which formats the selection as superscript.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorSuperscript /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorSuperscript"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Superscript\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorSuperscript"
        }
      },
      {
        "HashCode": 1690065775,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorSuperscript",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which formats the selection as superscript.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorSuperscript /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorSuperscript"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Superscript\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorSuperscript",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 626734344,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorUnderline",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which underlines the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorUnderline /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorUnderline"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Underline\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorUnderline"
        }
      },
      {
        "HashCode": 1234743586,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorUnderline",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which underlines the selection.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorUnderline /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorUnderline"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Underline\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorUnderline",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -98746158,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorUndo",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which reverts the last edit operation.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorUndo /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorUndo"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Undo\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorUndo"
        }
      },
      {
        "HashCode": -1229933316,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorUndo",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which reverts the last edit operation.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorUndo /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorUndo"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Undo\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorUndo",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1555659449,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorUnlink",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which removes a link.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorUnlink /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorUnlink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Remove link\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorUnlink"
        }
      },
      {
        "HashCode": -1572329353,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorUnlink",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which removes a link.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorUnlink /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorUnlink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Remove link\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorUnlink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2100016336,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorUnorderedList",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which inserts a bullet list (<c>ul</c>).\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorUnorderedList /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditorUnorderedList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Bullet list\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorUnorderedList"
        }
      },
      {
        "HashCode": 238629374,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenHtmlEditorUnorderedList",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A RadzenHtmlEditor tool which inserts a bullet list (<c>ul</c>).\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenHtmlEditor @bind-Value=@html&gt;\n             &lt;RadzenHtmlEditorUnorderedList /&gt;\n            &lt;/RadzenHtmlEdito&gt;\n            @code {\n              string html = \"@lt;strong&gt;Hello&lt;/strong&gt; world!\"; \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditorUnorderedList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the title (tooltip) displayed when the user hovers the tool. Set to <c>\"Bullet list\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditorUnorderedList",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1793425687,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenIcon",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenIcon component. Displays icon from Material Icons font.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenIcon Icon=\"3d_rotation\" /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconStyle",
            "TypeName": "Radzen.IconStyle?",
            "Documentation": "\n            <summary>\n            Specifies the display style of the icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IconStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenIcon"
        }
      },
      {
        "HashCode": 819635253,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenIcon",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenIcon component. Displays icon from Material Icons font.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenIcon Icon=\"3d_rotation\" /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenIcon"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "IconStyle",
            "TypeName": "Radzen.IconStyle?",
            "Documentation": "\n            <summary>\n            Specifies the display style of the icon.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "IconStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenIcon",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1070774113,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenImage",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenImage component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenImage Path=\"someimage.png\" /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenImage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Path",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the path.\n            </summary>\n            <value>The path.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Path"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the click callback.\n            </summary>\n            <value>The click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenImage"
        }
      },
      {
        "HashCode": -1891375428,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenImage",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenImage component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenImage Path=\"someimage.png\" /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenImage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Path",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the path.\n            </summary>\n            <value>The path.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Path"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the click callback.\n            </summary>\n            <value>The click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenImage",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 157190169,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenImage.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenImage"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenImage.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1747252630,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenImage.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenImage"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenImage.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1187162500,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenLabel",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenLabel component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenLabel Text=\"CompanyName\" Component=\"CompanyName\" /&gt;\n            &lt;RadzenTextBox Name=\"CompanyName\" /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Component",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the component name for the label.\n            </summary>\n            <value>The component name for the label.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Component"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenLabel"
        }
      },
      {
        "HashCode": 1026055461,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenLabel",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenLabel component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenLabel Text=\"CompanyName\" Component=\"CompanyName\" /&gt;\n            &lt;RadzenTextBox Name=\"CompanyName\" /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenLabel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Component",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the component name for the label.\n            </summary>\n            <value>The component name for the label.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Component"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenLabel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 228805049,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenLayout",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenLayout component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenLayout"
        }
      },
      {
        "HashCode": 1796760270,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenLayout",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenLayout component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenLayout"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenLayout",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1747138361,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenLayout.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenLayout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenLayout.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2071137353,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenLayout.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenLayout"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenLayout.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -724730327,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenLegend",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Class RadzenLegend.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenLegend"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "Radzen.Blazor.LegendPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the position.\n            </summary>\n            <value>The position.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenLegend\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenLegend"
        }
      },
      {
        "HashCode": 619321093,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenLegend",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Class RadzenLegend.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenLegend"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "Radzen.Blazor.LegendPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the position.\n            </summary>\n            <value>The position.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenLegend\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenLegend",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 728140684,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenLengthValidator",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A validator component which checks if then component value length is within a specified range.\n            Must be placed inside a <see cref=\"T:Radzen.Blazor.RadzenTemplateForm`1\" />\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTemplateForm TItem=\"Model\" Data=@model&gt;\n               &lt;RadzenTextBox style=\"display: block\" Name=\"FirstName\" @bind-Value=@model.FirstName /&gt;\n               &lt;RadzenLengthValidator Component=\"FirstName\" Min=\"3\" Text=\"First name should be at least 3 characters\" Style=\"position: absolute\" /&gt;\n            &lt;/RadzenTemplateForm&gt;\n            @code {\n               class Model\n               {\n                  public string FirstName { get; set; }\n               }\n               Model model = new Model(); \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenLengthValidator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the message displayed when the component is invalid. Set to <c>\"Invalid length\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Specifies the minimum accepted length. The component value length should be greater than the minimum in order to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Specifies the maximum accepted length. The component value length should be less than the maximum in order to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Component",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the component which this validator should validate. Must be set to the <see cref=\"P:Radzen.IRadzenFormComponent.Name\" /> of an existing component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Component"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Popup",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if the validator is displayed as a popup or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Popup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenLengthValidator"
        }
      },
      {
        "HashCode": 128600215,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenLengthValidator",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A validator component which checks if then component value length is within a specified range.\n            Must be placed inside a <see cref=\"T:Radzen.Blazor.RadzenTemplateForm`1\" />\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTemplateForm TItem=\"Model\" Data=@model&gt;\n               &lt;RadzenTextBox style=\"display: block\" Name=\"FirstName\" @bind-Value=@model.FirstName /&gt;\n               &lt;RadzenLengthValidator Component=\"FirstName\" Min=\"3\" Text=\"First name should be at least 3 characters\" Style=\"position: absolute\" /&gt;\n            &lt;/RadzenTemplateForm&gt;\n            @code {\n               class Model\n               {\n                  public string FirstName { get; set; }\n               }\n               Model model = new Model(); \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenLengthValidator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the message displayed when the component is invalid. Set to <c>\"Invalid length\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Specifies the minimum accepted length. The component value length should be greater than the minimum in order to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Specifies the maximum accepted length. The component value length should be less than the maximum in order to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Component",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the component which this validator should validate. Must be set to the <see cref=\"P:Radzen.IRadzenFormComponent.Name\" /> of an existing component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Component"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Popup",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if the validator is displayed as a popup or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Popup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenLengthValidator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 475501857,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenLineSeries<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Renders line series in <see cref=\"T:Radzen.Blazor.RadzenChart\" />.\n            </summary>\n            <typeparam name=\"TItem\">The type of the series data item.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenLineSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenLineSeries<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the line.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the pixel width of the line. Set to <c>2</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the line type.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Smooth",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to render a smooth line. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Smooth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CategoryProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the X axis (a.k.a. category axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CategoryProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is visible.\n            Invisible series do not appear in the legend and cannot be shown by the user.\n            Use the <c>Visible</c> property to programatically show or hide a series.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Hidden",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is hidden.\n            Hidden series are initially invisible and the user can show them by clicking on their label in the legend.\n            Use the <c>Hidden</c> property to hide certain series from your users but still allow them to see them.\n            </summary>\n            <value><c>true</c> if hidden; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Hidden"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the Y axis (a.k.a. value axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RenderingOrder",
            "TypeName": "System.Int32",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "RenderingOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data of the series. The data is enumerated and its items are displayed by the series.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenLineSeries<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1324207768,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenLineSeries<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Renders line series in <see cref=\"T:Radzen.Blazor.RadzenChart\" />.\n            </summary>\n            <typeparam name=\"TItem\">The type of the series data item.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenLineSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenLineSeries<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the line.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the pixel width of the line. Set to <c>2</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the line type.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Smooth",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to render a smooth line. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Smooth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CategoryProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the X axis (a.k.a. category axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CategoryProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is visible.\n            Invisible series do not appear in the legend and cannot be shown by the user.\n            Use the <c>Visible</c> property to programatically show or hide a series.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Hidden",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is hidden.\n            Hidden series are initially invisible and the user can show them by clicking on their label in the legend.\n            Use the <c>Hidden</c> property to hide certain series from your users but still allow them to see them.\n            </summary>\n            <value><c>true</c> if hidden; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Hidden"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the Y axis (a.k.a. value axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RenderingOrder",
            "TypeName": "System.Int32",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "RenderingOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data of the series. The data is enumerated and its items are displayed by the series.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenLineSeries<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1570687498,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenLineSeries<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenLineSeries"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenLineSeries<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1083508631,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenLineSeries<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenLineSeries"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenLineSeries<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 302756595,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenLineSeries<TItem>.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "RadzenLineSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenLineSeries<TItem>.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 61791088,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenLineSeries<TItem>.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "Radzen.Blazor.RadzenLineSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenLineSeries<TItem>.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1327861692,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenLink",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenLink component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenLink Path=\"https://www.radzen.com\" Text=\"Go to url\" Target=\"_blank\" /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the target.\n            </summary>\n            <value>The target.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Path",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the path.\n            </summary>\n            <value>The path.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Path"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenLink"
        }
      },
      {
        "HashCode": -611820183,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenLink",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenLink component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenLink Path=\"https://www.radzen.com\" Text=\"Go to url\" Target=\"_blank\" /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenLink"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the target.\n            </summary>\n            <value>The target.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Path",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the path.\n            </summary>\n            <value>The path.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Path"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenLink",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 706376473,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenListBox<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenListBox component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenListBox @bind-Value=@customerID TValue=\"string\" Data=@customers TextProperty=\"CompanyName\" ValueProperty=\"CustomerID\" Change=@(args =&gt; Console.WriteLine($\"Selected CustomerID: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenListBox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenListBox<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether is read only.\n            </summary>\n            <value><c>true</c> if is read only; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Count",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the total number of items in the data source.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Count"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowVirtualization",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies wether virtualization is enabled. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowVirtualization"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the default page size. Set to <c>5</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowFiltering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether filtering is allowed. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if filtering is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowFiltering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowClear",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the user can clear the value. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if clearing is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowClear"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multiple",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DropDownBase`1\" /> is multiple.\n            </summary>\n            <value><c>true</c> if multiple; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Multiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelectAll",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the user can select all values in multiple selection. Set to <c>true</c> by default.\n            </summary>\n            <value><c>true</c> if select all values is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelectAll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<dynamic>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value property.\n            </summary>\n            <value>The value property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisabledProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the disabled property.\n            </summary>\n            <value>The disabled property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisabledProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItemChanged",
            "TypeName": "System.Action<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the selected item changed.\n            </summary>\n            <value>The selected item changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItemChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDelay",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the filter delay.\n            </summary>\n            <value>The filter delay.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterDelay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItem",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the selected item.\n            </summary>\n            <value>The selected item.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Separator",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the item separator for Multiple dropdown.\n            </summary>\n            <value>Item separator</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Separator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCaseSensitivity",
            "TypeName": "Radzen.FilterCaseSensitivity",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter case sensitivity.\n            </summary>\n            <value>The filter case sensitivity.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterCaseSensitivity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "Radzen.StringFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter operator.\n            </summary>\n            <value>The filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DataBoundFormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text property.\n            </summary>\n            <value>The text property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenListBox<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -240561143,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenListBox<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenListBox component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenListBox @bind-Value=@customerID TValue=\"string\" Data=@customers TextProperty=\"CompanyName\" ValueProperty=\"CustomerID\" Change=@(args =&gt; Console.WriteLine($\"Selected CustomerID: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenListBox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenListBox<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether is read only.\n            </summary>\n            <value><c>true</c> if is read only; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Count",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the total number of items in the data source.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Count"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowVirtualization",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies wether virtualization is enabled. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowVirtualization"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the default page size. Set to <c>5</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowFiltering",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether filtering is allowed. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if filtering is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowFiltering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowClear",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the user can clear the value. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if clearing is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowClear"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multiple",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DropDownBase`1\" /> is multiple.\n            </summary>\n            <value><c>true</c> if multiple; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Multiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSelectAll",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether the user can select all values in multiple selection. Set to <c>true</c> by default.\n            </summary>\n            <value><c>true</c> if select all values is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowSelectAll"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<dynamic>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value property.\n            </summary>\n            <value>The value property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisabledProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the disabled property.\n            </summary>\n            <value>The disabled property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisabledProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItemChanged",
            "TypeName": "System.Action<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the selected item changed.\n            </summary>\n            <value>The selected item changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItemChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDelay",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the filter delay.\n            </summary>\n            <value>The filter delay.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterDelay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedItem",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the selected item.\n            </summary>\n            <value>The selected item.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedItem"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Separator",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the item separator for Multiple dropdown.\n            </summary>\n            <value>Item separator</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Separator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCaseSensitivity",
            "TypeName": "Radzen.FilterCaseSensitivity",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter case sensitivity.\n            </summary>\n            <value>The filter case sensitivity.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterCaseSensitivity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "Radzen.StringFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter operator.\n            </summary>\n            <value>The filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.DataBoundFormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text property.\n            </summary>\n            <value>The text property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenListBox<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -765079523,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenListBox<TValue>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenListBox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenListBox<TValue>.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2106769166,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenListBox<TValue>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenListBox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenListBox<TValue>.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1287636034,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenLogin",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenLogin component. Must be placed in RadzenTemplateForm.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTemplateForm Data=@(\"Login\")&gt;\n                    &lt;RadzenLogin AllowRegister=\"true\" AllowResetPassword=\"true\"\n                                    Login=@OnLogin\n                                    ResetPassword=@OnResetPassword\n                                    Register=@OnRegister /&gt;\n            &lt;/RadzenTemplateForm&gt;\n            @code {\n              void OnLogin(LoginArgs args, string name)\n              {\n                Console.WriteLine($\"{name} -&gt; Username: {args.Username} and password: {args.Password}\");\n              }\n              \n              void OnRegister(string name)\n              {\n                Console.WriteLine($\"{name} -&gt; Register\");\n              }\n              \n              void OnResetPassword(string value, string name)\n              {\n                Console.WriteLine($\"{name} -&gt; ResetPassword for user: {value}\");\n              }\n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenLogin"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AutoComplete",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether automatic complete of inputs is enabled.\n            </summary>\n            <value><c>true</c> if automatic complete of inputs is enabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AutoComplete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Username",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the username.\n            </summary>\n            <value>The username.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Username"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Password",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the password.\n            </summary>\n            <value>The password.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Password"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Login",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoginArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the login callback.\n            </summary>\n            <value>The login callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Login",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Register",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Documentation": "\n            <summary>\n            Gets or sets the register callback.\n            </summary>\n            <value>The register callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Register",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ResetPassword",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the reset password callback.\n            </summary>\n            <value>The reset password callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ResetPassword",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowRegister",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether register is allowed.\n            </summary>\n            <value><c>true</c> if register is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowRegister"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowResetPassword",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether reset password is allowed.\n            </summary>\n            <value><c>true</c> if reset password is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowResetPassword"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoginText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the login text.\n            </summary>\n            <value>The login text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoginText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RegisterText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the register text.\n            </summary>\n            <value>The register text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RegisterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RegisterMessageText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the register message text.\n            </summary>\n            <value>The register message text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RegisterMessageText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ResetPasswordText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the reset password text.\n            </summary>\n            <value>The reset password text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ResetPasswordText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UserText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the user text.\n            </summary>\n            <value>The user text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "UserText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UserRequired",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the user required text.\n            </summary>\n            <value>The user required text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "UserRequired"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PasswordText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the password text.\n            </summary>\n            <value>The password text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PasswordText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PasswordRequired",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the password required.\n            </summary>\n            <value>The password required.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PasswordRequired"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenLogin"
        }
      },
      {
        "HashCode": 985407326,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenLogin",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenLogin component. Must be placed in RadzenTemplateForm.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTemplateForm Data=@(\"Login\")&gt;\n                    &lt;RadzenLogin AllowRegister=\"true\" AllowResetPassword=\"true\"\n                                    Login=@OnLogin\n                                    ResetPassword=@OnResetPassword\n                                    Register=@OnRegister /&gt;\n            &lt;/RadzenTemplateForm&gt;\n            @code {\n              void OnLogin(LoginArgs args, string name)\n              {\n                Console.WriteLine($\"{name} -&gt; Username: {args.Username} and password: {args.Password}\");\n              }\n              \n              void OnRegister(string name)\n              {\n                Console.WriteLine($\"{name} -&gt; Register\");\n              }\n              \n              void OnResetPassword(string value, string name)\n              {\n                Console.WriteLine($\"{name} -&gt; ResetPassword for user: {value}\");\n              }\n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenLogin"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AutoComplete",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether automatic complete of inputs is enabled.\n            </summary>\n            <value><c>true</c> if automatic complete of inputs is enabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AutoComplete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Username",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the username.\n            </summary>\n            <value>The username.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Username"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Password",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the password.\n            </summary>\n            <value>The password.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Password"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Login",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoginArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the login callback.\n            </summary>\n            <value>The login callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Login",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Register",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Documentation": "\n            <summary>\n            Gets or sets the register callback.\n            </summary>\n            <value>The register callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Register",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ResetPassword",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the reset password callback.\n            </summary>\n            <value>The reset password callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ResetPassword",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowRegister",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether register is allowed.\n            </summary>\n            <value><c>true</c> if register is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowRegister"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowResetPassword",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether reset password is allowed.\n            </summary>\n            <value><c>true</c> if reset password is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowResetPassword"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoginText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the login text.\n            </summary>\n            <value>The login text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoginText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RegisterText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the register text.\n            </summary>\n            <value>The register text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RegisterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RegisterMessageText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the register message text.\n            </summary>\n            <value>The register message text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RegisterMessageText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ResetPasswordText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the reset password text.\n            </summary>\n            <value>The reset password text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ResetPasswordText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UserText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the user text.\n            </summary>\n            <value>The user text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "UserText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "UserRequired",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the user required text.\n            </summary>\n            <value>The user required text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "UserRequired"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PasswordText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the password text.\n            </summary>\n            <value>The password text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PasswordText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PasswordRequired",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the password required.\n            </summary>\n            <value>The password required.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PasswordRequired"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenLogin",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -967921540,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenMarkers",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Class RadzenMarkers.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenMarkers"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the fill.\n            </summary>\n            <value>The fill.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the stroke.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the width of the stroke.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the size.\n            </summary>\n            <value>The size.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MarkerType",
            "TypeName": "Radzen.Blazor.MarkerType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the marker.\n            </summary>\n            <value>The type of the marker.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MarkerType"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenMarkers"
        }
      },
      {
        "HashCode": -969958216,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenMarkers",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Class RadzenMarkers.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenMarkers"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the fill.\n            </summary>\n            <value>The fill.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the stroke.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the width of the stroke.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the size.\n            </summary>\n            <value>The size.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MarkerType",
            "TypeName": "Radzen.Blazor.MarkerType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the marker.\n            </summary>\n            <value>The type of the marker.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MarkerType"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenMarkers",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1478989166,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenMask",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenMask component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenMask Mask=\"(***) ***-****\" Pattern=\"[^0-9]\" Placeholder=\"(000) 000-0000\" @bind-Value=@phone Change=@(args =&gt; Console.WriteLine($\"Value: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenMask"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether is read only.\n            </summary>\n            <value><c>true</c> if is read only; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AutoComplete",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether input automatic complete is enabled.\n            </summary>\n            <value><c>true</c> if input automatic complete is enabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AutoComplete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxLength",
            "TypeName": "System.Int64?",
            "Documentation": "\n            <summary>\n            Gets or sets the maximum length.\n            </summary>\n            <value>The maximum length.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mask",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the mask.\n            </summary>\n            <value>The mask.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Mask"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pattern",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the pattern that will be used to replace all invalid characters with regular expression.\n            </summary>\n            <value>The invalid characters pattern.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Pattern"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CharacterPattern",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the pattern that will be used to match all valid characters with regular expression. If both Pattern and CharacterPattern are set CharacterPattern will be used.\n            </summary>\n            <value>The valid characters pattern.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "CharacterPattern"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenMask"
        }
      },
      {
        "HashCode": -433299935,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenMask",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenMask component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenMask Mask=\"(***) ***-****\" Pattern=\"[^0-9]\" Placeholder=\"(000) 000-0000\" @bind-Value=@phone Change=@(args =&gt; Console.WriteLine($\"Value: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenMask"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether is read only.\n            </summary>\n            <value><c>true</c> if is read only; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AutoComplete",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether input automatic complete is enabled.\n            </summary>\n            <value><c>true</c> if input automatic complete is enabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AutoComplete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxLength",
            "TypeName": "System.Int64?",
            "Documentation": "\n            <summary>\n            Gets or sets the maximum length.\n            </summary>\n            <value>The maximum length.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mask",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the mask.\n            </summary>\n            <value>The mask.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Mask"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pattern",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the pattern that will be used to replace all invalid characters with regular expression.\n            </summary>\n            <value>The invalid characters pattern.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Pattern"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CharacterPattern",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the pattern that will be used to match all valid characters with regular expression. If both Pattern and CharacterPattern are set CharacterPattern will be used.\n            </summary>\n            <value>The valid characters pattern.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "CharacterPattern"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenMask",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1036446625,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenMediaQuery",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n             <summary>\n             RadzenMediaQuery fires its <see cref=\"P:Radzen.Blazor.RadzenMediaQuery.Change\" /> event when the media query specified via <see cref=\"P:Radzen.Blazor.RadzenMediaQuery.Query\" /> matches or not.\n             </summary>\n             <example>\n             &lt; RadzenMediaQuery Query=\"(max-width: 768px)\" Change=@OnChange /&gt;\n             @code {\n              void OnChange(bool matches)\n              {\n                 // matches is true if the media query applies; otherwise false.\n              }\n            }\n             </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenMediaQuery"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Query",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The CSS media query this component will listen for.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Query"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the status of the media query changes - to either match or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenMediaQuery"
        }
      },
      {
        "HashCode": 467407429,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenMediaQuery",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n             <summary>\n             RadzenMediaQuery fires its <see cref=\"P:Radzen.Blazor.RadzenMediaQuery.Change\" /> event when the media query specified via <see cref=\"P:Radzen.Blazor.RadzenMediaQuery.Query\" /> matches or not.\n             </summary>\n             <example>\n             &lt; RadzenMediaQuery Query=\"(max-width: 768px)\" Change=@OnChange /&gt;\n             @code {\n              void OnChange(bool matches)\n              {\n                 // matches is true if the media query applies; otherwise false.\n              }\n            }\n             </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenMediaQuery"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Query",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The CSS media query this component will listen for.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Query"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the status of the media query changes - to either match or not.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenMediaQuery",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1009558367,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenMenu",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenMenu component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenMenu&gt;\n                &lt;RadzenMenuItem Text=\"Data\"&gt;\n                    &lt;RadzenMenuItem Text=\"Orders\" Path=\"orders\" /&gt;\n                    &lt;RadzenMenuItem Text=\"Employees\" Path=\"employees\" /&gt;\n                &lt;/RadzenMenuItemItem&gt;\n            &lt;/RadzenMenu&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Responsive",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenMenu\" /> is responsive.\n            </summary>\n            <value><c>true</c> if responsive; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Responsive"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.MenuItemEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the click callback.\n            </summary>\n            <value>The click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenMenu"
        }
      },
      {
        "HashCode": 1515889641,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenMenu",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenMenu component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenMenu&gt;\n                &lt;RadzenMenuItem Text=\"Data\"&gt;\n                    &lt;RadzenMenuItem Text=\"Orders\" Path=\"orders\" /&gt;\n                    &lt;RadzenMenuItem Text=\"Employees\" Path=\"employees\" /&gt;\n                &lt;/RadzenMenuItemItem&gt;\n            &lt;/RadzenMenu&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Responsive",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenMenu\" /> is responsive.\n            </summary>\n            <value><c>true</c> if responsive; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Responsive"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.MenuItemEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the click callback.\n            </summary>\n            <value>The click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 716656067,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenMenu.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -54372206,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenMenu.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1554000647,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenMenuItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenMenuItem component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenMenuItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the target.\n            </summary>\n            <value>The target.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Path",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the path.\n            </summary>\n            <value>The path.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Path"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Image",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the image.\n            </summary>\n            <value>The image.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Image"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.MenuItemEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the click callback.\n            </summary>\n            <value>The click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenMenuItem"
        }
      },
      {
        "HashCode": -1703290169,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenMenuItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenMenuItem component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenMenuItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the target.\n            </summary>\n            <value>The target.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Path",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the path.\n            </summary>\n            <value>The path.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Path"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Image",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the image.\n            </summary>\n            <value>The image.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Image"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.MenuItemEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the click callback.\n            </summary>\n            <value>The click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenMenuItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2014705353,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenMenuItem.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenMenuItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenMenuItem.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1993679975,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenMenuItem.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenMenuItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenMenuItem.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -576184600,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenMenuItem.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenMenuItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenMenuItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -717059275,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenMenuItem.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenMenuItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenMenuItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 774004194,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenMonthView",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays the appointments in a month day in <see cref=\"T:Radzen.Blazor.RadzenScheduler`1\" />\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenScheduler Data=\"@appointments\"&gt;\n                &lt;RadzenMonthView /&gt;\n            &lt;/RadzenScheduler&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenMonthView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxAppointmentsInSlot",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Specifies the maximum appointnments to render in a slot.\n            </summary>\n            <value>The maximum appointments in slot.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxAppointmentsInSlot"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MoreText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text displayed when there are more appointments in a slot than <see cref=\"P:Radzen.Blazor.RadzenMonthView.MaxAppointmentsInSlot\" />.\n            </summary>\n            <value>The more text. Set to <c>\"+ {0} more\"</c> by default.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MoreText"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenMonthView"
        }
      },
      {
        "HashCode": 1484200293,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenMonthView",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays the appointments in a month day in <see cref=\"T:Radzen.Blazor.RadzenScheduler`1\" />\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenScheduler Data=\"@appointments\"&gt;\n                &lt;RadzenMonthView /&gt;\n            &lt;/RadzenScheduler&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenMonthView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxAppointmentsInSlot",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Specifies the maximum appointnments to render in a slot.\n            </summary>\n            <value>The maximum appointments in slot.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxAppointmentsInSlot"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MoreText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the text displayed when there are more appointments in a slot than <see cref=\"P:Radzen.Blazor.RadzenMonthView.MaxAppointmentsInSlot\" />.\n            </summary>\n            <value>The more text. Set to <c>\"+ {0} more\"</c> by default.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MoreText"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenMonthView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 830937735,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenNumeric<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenNumeric component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the t value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenNumeric TValue=\"int\" Min=\"1\" Max=\"10\" Change=@(args =&gt; Console.WriteLine($\"Value: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenNumeric"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenNumeric<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format.\n            </summary>\n            <value>The format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the step.\n            </summary>\n            <value>The step.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Step"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether is read only.\n            </summary>\n            <value><c>true</c> if is read only; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AutoComplete",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether input automatic complete is enabled.\n            </summary>\n            <value><c>true</c> if input automatic complete is enabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AutoComplete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowUpDown",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether up down buttons are shown.\n            </summary>\n            <value><c>true</c> if up down buttons are shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowUpDown"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlign",
            "TypeName": "Radzen.TextAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the text align.\n            </summary>\n            <value>The text align.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Decimal?",
            "Documentation": "\n            <summary>\n            Determines the minimum value.\n            </summary>\n            <value>The minimum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Decimal?",
            "Documentation": "\n            <summary>\n            Determines the maximum value.\n            </summary>\n            <value>The maximum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenNumeric<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1067991937,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenNumeric<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenNumeric component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the t value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenNumeric TValue=\"int\" Min=\"1\" Max=\"10\" Change=@(args =&gt; Console.WriteLine($\"Value: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenNumeric"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenNumeric<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format.\n            </summary>\n            <value>The format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the step.\n            </summary>\n            <value>The step.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Step"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether is read only.\n            </summary>\n            <value><c>true</c> if is read only; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AutoComplete",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether input automatic complete is enabled.\n            </summary>\n            <value><c>true</c> if input automatic complete is enabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AutoComplete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowUpDown",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether up down buttons are shown.\n            </summary>\n            <value><c>true</c> if up down buttons are shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowUpDown"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlign",
            "TypeName": "Radzen.TextAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the text align.\n            </summary>\n            <value>The text align.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Decimal?",
            "Documentation": "\n            <summary>\n            Determines the minimum value.\n            </summary>\n            <value>The minimum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Decimal?",
            "Documentation": "\n            <summary>\n            Determines the maximum value.\n            </summary>\n            <value>The maximum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenNumeric<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1712070313,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenNumericRangeValidator",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A validator component which checks if a component value is within a specified range.\n            Must be placed inside a <see cref=\"T:Radzen.Blazor.RadzenTemplateForm`1\" />\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTemplateForm TItem=\"Model\" Data=@model&gt;\n               &lt;RadzenNumeric style=\"display: block\" Name=\"Quantity\" @bind-Value=@model.Quantity /&gt;\n               &lt;RadzenNumericRangeValidator Component=\"Quantity\" Min=\"1\" Max=\"10\" Text=\"Quantity should be between 1 and 10\" Style=\"position: absolute\" /&gt; \n            &lt;/RadzenTemplateForm&gt;\n            @code {\n               class Model\n               {\n                  public decimal Quantity { get; set; }\n               }\n               Model model = new Model(); \n            }\n            </code>\n            </example>&gt;\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenNumericRangeValidator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the message displayed when the component is invalid. Set to <c>\"Not in the valid range\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "dynamic",
            "Documentation": "\n            <summary>\n            Specifies the minimum value. The component value should be greater than the minimum in order to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "dynamic",
            "Documentation": "\n            <summary>\n            Specifies the maximum value. The component value should be less than the maximum in order to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Component",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the component which this validator should validate. Must be set to the <see cref=\"P:Radzen.IRadzenFormComponent.Name\" /> of an existing component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Component"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Popup",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if the validator is displayed as a popup or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Popup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenNumericRangeValidator"
        }
      },
      {
        "HashCode": -717485875,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenNumericRangeValidator",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A validator component which checks if a component value is within a specified range.\n            Must be placed inside a <see cref=\"T:Radzen.Blazor.RadzenTemplateForm`1\" />\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTemplateForm TItem=\"Model\" Data=@model&gt;\n               &lt;RadzenNumeric style=\"display: block\" Name=\"Quantity\" @bind-Value=@model.Quantity /&gt;\n               &lt;RadzenNumericRangeValidator Component=\"Quantity\" Min=\"1\" Max=\"10\" Text=\"Quantity should be between 1 and 10\" Style=\"position: absolute\" /&gt; \n            &lt;/RadzenTemplateForm&gt;\n            @code {\n               class Model\n               {\n                  public decimal Quantity { get; set; }\n               }\n               Model model = new Model(); \n            }\n            </code>\n            </example>&gt;\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenNumericRangeValidator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the message displayed when the component is invalid. Set to <c>\"Not in the valid range\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "dynamic",
            "Documentation": "\n            <summary>\n            Specifies the minimum value. The component value should be greater than the minimum in order to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "dynamic",
            "Documentation": "\n            <summary>\n            Specifies the maximum value. The component value should be less than the maximum in order to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Component",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the component which this validator should validate. Must be set to the <see cref=\"P:Radzen.IRadzenFormComponent.Name\" /> of an existing component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Component"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Popup",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if the validator is displayed as a popup or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Popup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenNumericRangeValidator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -74184105,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenPager",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenPager component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenPager Count=\"100\" PageSize=\"10\" PageNumbersCount=\"5\" PageChanged=@(args =&gt; Console.WriteLine($\"Skip: {args.Skip}, Top: {args.Top}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenPager"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HorizontalAlign",
            "TypeName": "Radzen.HorizontalAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the horizontal align.\n            </summary>\n            <value>The horizontal align.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HorizontalAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the page size.\n            </summary>\n            <value>The page size.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the page size changed callback.\n            </summary>\n            <value>The page size changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the page size options.\n            </summary>\n            <value>The page size options.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the page size description text.\n            </summary>\n            <value>The page size description text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPagingSummary",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary visibility.\n            </summary>\n            <value>The pager summary visibility.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPagingSummary"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingSummaryFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary format.\n            </summary>\n            <value>The pager summary format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagingSummaryFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageNumbersCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the page numbers count.\n            </summary>\n            <value>The page numbers count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageNumbersCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Count",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the total items count.\n            </summary>\n            <value>The total items count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Count"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AlwaysVisible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether pager is visible even when not enough data for paging.\n            </summary>\n            <value><c>true</c> if pager is visible even when not enough data for paging otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AlwaysVisible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.PagerEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the page changed callback.\n            </summary>\n            <value>The page changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenPager"
        }
      },
      {
        "HashCode": 1307834585,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenPager",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenPager component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenPager Count=\"100\" PageSize=\"10\" PageNumbersCount=\"5\" PageChanged=@(args =&gt; Console.WriteLine($\"Skip: {args.Skip}, Top: {args.Top}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenPager"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "HorizontalAlign",
            "TypeName": "Radzen.HorizontalAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the horizontal align.\n            </summary>\n            <value>The horizontal align.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HorizontalAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the page size.\n            </summary>\n            <value>The page size.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the page size changed callback.\n            </summary>\n            <value>The page size changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the page size options.\n            </summary>\n            <value>The page size options.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the page size description text.\n            </summary>\n            <value>The page size description text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPagingSummary",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary visibility.\n            </summary>\n            <value>The pager summary visibility.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPagingSummary"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingSummaryFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary format.\n            </summary>\n            <value>The pager summary format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagingSummaryFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageNumbersCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the page numbers count.\n            </summary>\n            <value>The page numbers count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageNumbersCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Count",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the total items count.\n            </summary>\n            <value>The total items count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Count"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AlwaysVisible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether pager is visible even when not enough data for paging.\n            </summary>\n            <value><c>true</c> if pager is visible even when not enough data for paging otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AlwaysVisible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.PagerEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the page changed callback.\n            </summary>\n            <value>The page changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenPager",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 817380825,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenPanel",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenPanel component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenPanel AllowCollapse=\"true\"\"&gt;\n                &lt;HeaderTemplate&gt;\n                    Header\n                &lt;/HeaderTemplate&gt;\n                &lt;ChildContent&gt;\n                    Content\n                &lt;/ChildContent&gt;\n                &lt;SummaryTemplate&gt;\n                    Summary\n                &lt;/SummaryTemplate&gt;\n            &lt;/RadzenPanel&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenPanel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AllowCollapse",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether collapsing is allowed. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if collapsing is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowCollapse"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Collapsed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenPanel\" /> is collapsed.\n            </summary>\n            <value><c>true</c> if collapsed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Collapsed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the header template.\n            </summary>\n            <value>The header template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SummaryTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the summary template.\n            </summary>\n            <value>The summary template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SummaryTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FooterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the footer template.\n            </summary>\n            <value>The footer template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FooterTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expand",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Documentation": "\n            <summary>\n            Gets or sets the expand callback.\n            </summary>\n            <value>The expand callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expand",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Collapse",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Documentation": "\n            <summary>\n            Gets or sets the collapse callback.\n            </summary>\n            <value>The collapse callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Collapse",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenPanel"
        }
      },
      {
        "HashCode": -967138904,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenPanel",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenPanel component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenPanel AllowCollapse=\"true\"\"&gt;\n                &lt;HeaderTemplate&gt;\n                    Header\n                &lt;/HeaderTemplate&gt;\n                &lt;ChildContent&gt;\n                    Content\n                &lt;/ChildContent&gt;\n                &lt;SummaryTemplate&gt;\n                    Summary\n                &lt;/SummaryTemplate&gt;\n            &lt;/RadzenPanel&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenPanel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "AllowCollapse",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether collapsing is allowed. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if collapsing is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowCollapse"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Collapsed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenPanel\" /> is collapsed.\n            </summary>\n            <value><c>true</c> if collapsed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Collapsed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the header template.\n            </summary>\n            <value>The header template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SummaryTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the summary template.\n            </summary>\n            <value>The summary template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SummaryTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FooterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the footer template.\n            </summary>\n            <value>The footer template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FooterTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expand",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Documentation": "\n            <summary>\n            Gets or sets the expand callback.\n            </summary>\n            <value>The expand callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expand",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Collapse",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Documentation": "\n            <summary>\n            Gets or sets the collapse callback.\n            </summary>\n            <value>The collapse callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Collapse",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenPanel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2037313567,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenPanel.HeaderTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the header template.\n            </summary>\n            <value>The header template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "RadzenPanel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenPanel.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -196796220,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenPanel.HeaderTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the header template.\n            </summary>\n            <value>The header template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "Radzen.Blazor.RadzenPanel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenPanel.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 66925056,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenPanel.SummaryTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the summary template.\n            </summary>\n            <value>The summary template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SummaryTemplate",
            "ParentTag": "RadzenPanel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenPanel.SummaryTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -813753347,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenPanel.SummaryTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the summary template.\n            </summary>\n            <value>The summary template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "SummaryTemplate",
            "ParentTag": "Radzen.Blazor.RadzenPanel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenPanel.SummaryTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -922407300,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenPanel.FooterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the footer template.\n            </summary>\n            <value>The footer template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FooterTemplate",
            "ParentTag": "RadzenPanel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenPanel.FooterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 690949833,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenPanel.FooterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the footer template.\n            </summary>\n            <value>The footer template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FooterTemplate",
            "ParentTag": "Radzen.Blazor.RadzenPanel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenPanel.FooterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1838410766,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenPanel.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenPanel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenPanel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1662258974,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenPanel.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenPanel"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenPanel.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1308042967,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenPanelMenu",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenPanelMenu component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenPanelMenu&gt;\n                &lt;RadzenPanelMenuItem Text=\"Data\"&gt;\n                    &lt;RadzenPanelMenuItem Text=\"Orders\" Path=\"orders\" /&gt;\n                    &lt;RadzenPanelMenuItem Text=\"Employees\" Path=\"employees\" /&gt;\n                &lt;/RadzenPanelMenuItemItem&gt;\n            &lt;/RadzenPanelMenu&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenPanelMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.MenuItemEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the click callback.\n            </summary>\n            <value>The click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Match"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenPanelMenu"
        }
      },
      {
        "HashCode": -1224178923,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenPanelMenu",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenPanelMenu component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenPanelMenu&gt;\n                &lt;RadzenPanelMenuItem Text=\"Data\"&gt;\n                    &lt;RadzenPanelMenuItem Text=\"Orders\" Path=\"orders\" /&gt;\n                    &lt;RadzenPanelMenuItem Text=\"Employees\" Path=\"employees\" /&gt;\n                &lt;/RadzenPanelMenuItemItem&gt;\n            &lt;/RadzenPanelMenu&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenPanelMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.MenuItemEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the click callback.\n            </summary>\n            <value>The click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Match",
            "TypeName": "Microsoft.AspNetCore.Components.Routing.NavLinkMatch",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets a value representing the URL matching behavior.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Match"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenPanelMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -76547017,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenPanelMenu.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenPanelMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenPanelMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1972206055,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenPanelMenu.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenPanelMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenPanelMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 865145779,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenPanelMenuItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenPanelMenuItem component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenPanelMenuItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the target.\n            </summary>\n            <value>The target.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets the expanded changed callback.\n            </summary>\n            <value>The expanded changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Path",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the path.\n            </summary>\n            <value>The path.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Path"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Image",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the image.\n            </summary>\n            <value>The image.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Image"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenPanelMenuItem\" /> is expanded.\n            </summary>\n            <value><c>true</c> if expanded; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenPanelMenuItem\" /> is selected.\n            </summary>\n            <value><c>true</c> if selected; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenPanelMenuItem"
        }
      },
      {
        "HashCode": -1307003522,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenPanelMenuItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenPanelMenuItem component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenPanelMenuItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the target.\n            </summary>\n            <value>The target.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets the expanded changed callback.\n            </summary>\n            <value>The expanded changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Path",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the path.\n            </summary>\n            <value>The path.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Path"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Image",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the image.\n            </summary>\n            <value>The image.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Image"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenPanelMenuItem\" /> is expanded.\n            </summary>\n            <value><c>true</c> if expanded; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenPanelMenuItem\" /> is selected.\n            </summary>\n            <value><c>true</c> if selected; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenPanelMenuItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1428840036,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenPanelMenuItem.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenPanelMenuItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenPanelMenuItem.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -557618652,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenPanelMenuItem.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenPanelMenuItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenPanelMenuItem.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -680360514,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenPanelMenuItem.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenPanelMenuItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenPanelMenuItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2077249983,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenPanelMenuItem.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenPanelMenuItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenPanelMenuItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -588651193,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenPassword",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenPassword component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenPassword Placeholder=\"Enter password...\" Change=@(args =&gt; Console.WriteLine($\"Value: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenPassword"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether is read only.\n            </summary>\n            <value><c>true</c> if is read only; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AutoComplete",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether input automatic complete is allowed.\n            </summary>\n            <value><c>true</c> if input automatic complete is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AutoComplete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenPassword"
        }
      },
      {
        "HashCode": 306212452,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenPassword",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenPassword component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenPassword Placeholder=\"Enter password...\" Change=@(args =&gt; Console.WriteLine($\"Value: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenPassword"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether is read only.\n            </summary>\n            <value><c>true</c> if is read only; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AutoComplete",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether input automatic complete is allowed.\n            </summary>\n            <value><c>true</c> if input automatic complete is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AutoComplete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenPassword",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1380041727,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenPieSeries<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Renders pie series in <see cref=\"T:Radzen.Blazor.RadzenChart\" />.\n            </summary>\n            <typeparam name=\"TItem\">The type of the series data item.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenPieSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenPieSeries<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Specifies the x coordinate of the pie center. Not set by default which centers pie horizontally.\n            </summary>\n            <value>The x.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Specifies the y coordinate of the pie center. Not set by default which centers pie vertically.\n            </summary>\n            <value>The y.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Specifies the radius of the pie. Not set by default - the pie takes as much size of the chart as possible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fills",
            "TypeName": "System.Collections.Generic.IEnumerable<System.String>",
            "Documentation": "\n            <summary>\n            The fill colors of the pie segments. Used as the background of the segments.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fills"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Strokes",
            "TypeName": "System.Collections.Generic.IEnumerable<System.String>",
            "Documentation": "\n            <summary>\n            The stroke colors of the pie segments.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Strokes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The stroke width of the segments in pixels. By default set to <c>0</c>.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CategoryProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the X axis (a.k.a. category axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CategoryProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is visible.\n            Invisible series do not appear in the legend and cannot be shown by the user.\n            Use the <c>Visible</c> property to programatically show or hide a series.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Hidden",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is hidden.\n            Hidden series are initially invisible and the user can show them by clicking on their label in the legend.\n            Use the <c>Hidden</c> property to hide certain series from your users but still allow them to see them.\n            </summary>\n            <value><c>true</c> if hidden; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Hidden"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the Y axis (a.k.a. value axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RenderingOrder",
            "TypeName": "System.Int32",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "RenderingOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data of the series. The data is enumerated and its items are displayed by the series.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenPieSeries<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1092966587,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenPieSeries<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Renders pie series in <see cref=\"T:Radzen.Blazor.RadzenChart\" />.\n            </summary>\n            <typeparam name=\"TItem\">The type of the series data item.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenPieSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenPieSeries<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Specifies the x coordinate of the pie center. Not set by default which centers pie horizontally.\n            </summary>\n            <value>The x.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Specifies the y coordinate of the pie center. Not set by default which centers pie vertically.\n            </summary>\n            <value>The y.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Specifies the radius of the pie. Not set by default - the pie takes as much size of the chart as possible.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fills",
            "TypeName": "System.Collections.Generic.IEnumerable<System.String>",
            "Documentation": "\n            <summary>\n            The fill colors of the pie segments. Used as the background of the segments.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fills"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Strokes",
            "TypeName": "System.Collections.Generic.IEnumerable<System.String>",
            "Documentation": "\n            <summary>\n            The stroke colors of the pie segments.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Strokes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            The stroke width of the segments in pixels. By default set to <c>0</c>.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CategoryProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the X axis (a.k.a. category axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CategoryProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is visible.\n            Invisible series do not appear in the legend and cannot be shown by the user.\n            Use the <c>Visible</c> property to programatically show or hide a series.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Hidden",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.CartesianSeries`1\" /> is hidden.\n            Hidden series are initially invisible and the user can show them by clicking on their label in the legend.\n            Use the <c>Hidden</c> property to hide certain series from your users but still allow them to see them.\n            </summary>\n            <value><c>true</c> if hidden; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Hidden"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The name of the property of <typeparamref name=\"TItem\" /> that provides the Y axis (a.k.a. value axis) values.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RenderingOrder",
            "TypeName": "System.Int32",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "RenderingOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data of the series. The data is enumerated and its items are displayed by the series.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenPieSeries<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1560770336,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenPieSeries<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenPieSeries"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenPieSeries<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1981988941,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenPieSeries<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenPieSeries"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenPieSeries<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -135998389,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenPieSeries<TItem>.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "RadzenPieSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenPieSeries<TItem>.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -128162194,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenPieSeries<TItem>.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the tooltip template.\n            </summary>\n            <value>The tooltip template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "Radzen.Blazor.RadzenPieSeries"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenPieSeries<TItem>.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1750114774,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenProfileMenu",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenProfileMenu component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenProfileMenu&gt;\n                &lt;RadzenProfileMenuItem Text=\"Data\"&gt;\n                    &lt;RadzenProfileMenuItem Text=\"Orders\" Path=\"orders\" /&gt;\n                    &lt;RadzenProfileMenuItem Text=\"Employees\" Path=\"employees\" /&gt;\n                &lt;/RadzenProfileMenuItemItem&gt;\n            &lt;/RadzenProfileMenu&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenProfileMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.Blazor.RadzenProfileMenuItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the click callback.\n            </summary>\n            <value>The click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenProfileMenu"
        }
      },
      {
        "HashCode": -804787155,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenProfileMenu",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenProfileMenu component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenProfileMenu&gt;\n                &lt;RadzenProfileMenuItem Text=\"Data\"&gt;\n                    &lt;RadzenProfileMenuItem Text=\"Orders\" Path=\"orders\" /&gt;\n                    &lt;RadzenProfileMenuItem Text=\"Employees\" Path=\"employees\" /&gt;\n                &lt;/RadzenProfileMenuItemItem&gt;\n            &lt;/RadzenProfileMenu&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenProfileMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.Blazor.RadzenProfileMenuItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the click callback.\n            </summary>\n            <value>The click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenProfileMenu",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1061523088,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenProfileMenu.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenProfileMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenProfileMenu.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1735221575,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenProfileMenu.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenProfileMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenProfileMenu.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1912035230,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenProfileMenu.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenProfileMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenProfileMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1158140962,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenProfileMenu.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenProfileMenu"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenProfileMenu.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1756347100,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenProfileMenuItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenProfileMenuItem component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenProfileMenuItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the target.\n            </summary>\n            <value>The target.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Path",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the path.\n            </summary>\n            <value>The path.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Path"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenProfileMenuItem"
        }
      },
      {
        "HashCode": -183478006,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenProfileMenuItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenProfileMenuItem component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenProfileMenuItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Target",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the target.\n            </summary>\n            <value>The target.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Target"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Path",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the path.\n            </summary>\n            <value>The path.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Path"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenProfileMenuItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1471423393,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenProgressBar",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenProgressBar component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenProgressBar @bind-Value=\"@value\" Max=\"200\" /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenProgressBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The  template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "Radzen.ProgressBarMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the mode.\n            </summary>\n            <value>The mode.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unit",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the unit.\n            </summary>\n            <value>The unit.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unit"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Determines the maximum value.\n            </summary>\n            <value>The maximum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowValue",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether value is shown.\n            </summary>\n            <value><c>true</c> if value is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "System.Action<System.Double>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed callback.\n            </summary>\n            <value>The value changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ProgressBarStyle",
            "TypeName": "Radzen.ProgressBarStyle",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the progress bar style.\n            </summary>\n            <value>The progress bar style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ProgressBarStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenProgressBar"
        }
      },
      {
        "HashCode": -1169157990,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenProgressBar",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenProgressBar component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenProgressBar @bind-Value=\"@value\" Max=\"200\" /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenProgressBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The  template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Mode",
            "TypeName": "Radzen.ProgressBarMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the mode.\n            </summary>\n            <value>The mode.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Mode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Unit",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the unit.\n            </summary>\n            <value>The unit.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Unit"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Determines the maximum value.\n            </summary>\n            <value>The maximum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowValue",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether value is shown.\n            </summary>\n            <value><c>true</c> if value is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "System.Action<System.Double>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed callback.\n            </summary>\n            <value>The value changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ProgressBarStyle",
            "TypeName": "Radzen.ProgressBarStyle",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the progress bar style.\n            </summary>\n            <value>The progress bar style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ProgressBarStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenProgressBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -998245771,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenProgressBar.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The  template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenProgressBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenProgressBar.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1471444798,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenProgressBar.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The  template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenProgressBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenProgressBar.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 287809866,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenRadialGaugeScale",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenRadialGaugeScale component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenRadialGaugeScale"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the stroke.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the width of the stroke.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickLength",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the length of the tick.\n            </summary>\n            <value>The length of the tick.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorTickLength",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the length of the minor tick.\n            </summary>\n            <value>The length of the minor tick.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorTickLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickLabelOffset",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the tick label offset.\n            </summary>\n            <value>The tick label offset.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickLabelOffset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format string.\n            </summary>\n            <value>The format string.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Formatter",
            "TypeName": "System.Func<System.Double, System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the formatter function.\n            </summary>\n            <value>The formatter function.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Formatter",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartAngle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the start angle.\n            </summary>\n            <value>The start angle.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickPosition",
            "TypeName": "Radzen.Blazor.GaugeTickPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the tick position.\n            </summary>\n            <value>The tick position.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndAngle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the end angle.\n            </summary>\n            <value>The end angle.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EndAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the radius.\n            </summary>\n            <value>The radius.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowFirstTick",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to show first tick.\n            </summary>\n            <value><c>true</c> if first tick is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowFirstTick"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowLastTick",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to show last tick.\n            </summary>\n            <value><c>true</c> if last tick is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowLastTick"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowTickLabels",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to show tick labels.\n            </summary>\n            <value><c>true</c> if tick labels are shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowTickLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the x.\n            </summary>\n            <value>The x.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Determines the minimum value.\n            </summary>\n            <value>The minimum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Determines the maximum value.\n            </summary>\n            <value>The maximum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the step.\n            </summary>\n            <value>The step.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Step"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorStep",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the minor step.\n            </summary>\n            <value>The minor step.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the y.\n            </summary>\n            <value>The y.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Margin",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the margin.\n            </summary>\n            <value>The margin.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Margin"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenRadialGaugeScale"
        }
      },
      {
        "HashCode": -1397349243,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenRadialGaugeScale",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenRadialGaugeScale component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenRadialGaugeScale"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the stroke.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the width of the stroke.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickLength",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the length of the tick.\n            </summary>\n            <value>The length of the tick.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorTickLength",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the length of the minor tick.\n            </summary>\n            <value>The length of the minor tick.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorTickLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickLabelOffset",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the tick label offset.\n            </summary>\n            <value>The tick label offset.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickLabelOffset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format string.\n            </summary>\n            <value>The format string.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Formatter",
            "TypeName": "System.Func<System.Double, System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the formatter function.\n            </summary>\n            <value>The formatter function.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Formatter",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartAngle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the start angle.\n            </summary>\n            <value>The start angle.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickPosition",
            "TypeName": "Radzen.Blazor.GaugeTickPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the tick position.\n            </summary>\n            <value>The tick position.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndAngle",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the end angle.\n            </summary>\n            <value>The end angle.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EndAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the radius.\n            </summary>\n            <value>The radius.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowFirstTick",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to show first tick.\n            </summary>\n            <value><c>true</c> if first tick is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowFirstTick"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowLastTick",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to show last tick.\n            </summary>\n            <value><c>true</c> if last tick is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowLastTick"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowTickLabels",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to show tick labels.\n            </summary>\n            <value><c>true</c> if tick labels are shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowTickLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the x.\n            </summary>\n            <value>The x.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Determines the minimum value.\n            </summary>\n            <value>The minimum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Determines the maximum value.\n            </summary>\n            <value>The maximum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the step.\n            </summary>\n            <value>The step.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Step"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorStep",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the minor step.\n            </summary>\n            <value>The minor step.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinorStep"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the y.\n            </summary>\n            <value>The y.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Margin",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the margin.\n            </summary>\n            <value>The margin.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Margin"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenRadialGaugeScale",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 472772907,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenRadialGaugeScale.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenRadialGaugeScale"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenRadialGaugeScale.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 752162617,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenRadialGaugeScale.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenRadialGaugeScale"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenRadialGaugeScale.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1339312503,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenRadialGaugeScalePointer",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenRadialGaugeScalePointer component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenRadialGaugeScalePointer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the fill.\n            </summary>\n            <value>The fill.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowValue",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to show value.\n            </summary>\n            <value><c>true</c> if value is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the radius.\n            </summary>\n            <value>The radius.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Gets or sets the width.\n            </summary>\n            <value>The width.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the length.\n            </summary>\n            <value>The length.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format string.\n            </summary>\n            <value>The format string.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the stroke.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the width of the stroke.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenRadialGaugeScalePointer>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenRadialGaugeScalePointer"
        }
      },
      {
        "HashCode": -1358177853,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenRadialGaugeScalePointer",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenRadialGaugeScalePointer component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenRadialGaugeScalePointer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the fill.\n            </summary>\n            <value>The fill.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowValue",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to show value.\n            </summary>\n            <value><c>true</c> if value is shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the radius.\n            </summary>\n            <value>The radius.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double?",
            "Documentation": "\n            <summary>\n            Gets or sets the width.\n            </summary>\n            <value>The width.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the length.\n            </summary>\n            <value>The length.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format string.\n            </summary>\n            <value>The format string.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the stroke.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the width of the stroke.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenRadialGaugeScalePointer>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenRadialGaugeScalePointer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -648345437,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenRadialGaugeScalePointer.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenRadialGaugeScalePointer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenRadialGaugeScalePointer.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1671618330,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenRadialGaugeScalePointer.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenRadialGaugeScalePointer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenRadialGaugeScalePointer.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1754166053,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenRadialGaugeScaleRange",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenRadialGaugeScaleRange component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenRadialGaugeScaleRange"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "From",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets from.\n            </summary>\n            <value>From.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "From"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "To",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets to position.\n            </summary>\n            <value>To.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "To"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the fill.\n            </summary>\n            <value>The fill.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the stroke.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the width of the stroke.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the height.\n            </summary>\n            <value>The height.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenRadialGaugeScaleRange"
        }
      },
      {
        "HashCode": 2047950141,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenRadialGaugeScaleRange",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenRadialGaugeScaleRange component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenRadialGaugeScaleRange"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "From",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets from.\n            </summary>\n            <value>From.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "From"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "To",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets to position.\n            </summary>\n            <value>To.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "To"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the fill.\n            </summary>\n            <value>The fill.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the stroke.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the width of the stroke.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the height.\n            </summary>\n            <value>The height.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenRadialGaugeScaleRange",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2039678866,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenRadioButtonList<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenRadioButtonList component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenRadioButtonList @bind-Value=@value TValue=\"int\" Orientation=\"Orientation.Vertical\" &gt;\n                &lt;Items&gt;\n                    &lt;RadzenRadioButtonListItem Text=\"Orders\" Value=\"1\" /&gt;\n                    &lt;RadzenRadioButtonListItem Text=\"Employees\" Value=\"2\" /&gt;\n                &lt;/Items&gt;\n            &lt;/RadzenRadioButtonList&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenRadioButtonList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenRadioButtonList<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value property.\n            </summary>\n            <value>The value property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text property.\n            </summary>\n            <value>The text property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisabledProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the disabled property.\n            </summary>\n            <value>The disabled property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisabledProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VisibleProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the visible property.\n            </summary>\n            <value>The visible property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "VisibleProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Orientation",
            "TypeName": "Radzen.Orientation",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the orientation.\n            </summary>\n            <value>The orientation.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Orientation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the items.\n            </summary>\n            <value>The items.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenRadioButtonList<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1530304747,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenRadioButtonList<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenRadioButtonList component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenRadioButtonList @bind-Value=@value TValue=\"int\" Orientation=\"Orientation.Vertical\" &gt;\n                &lt;Items&gt;\n                    &lt;RadzenRadioButtonListItem Text=\"Orders\" Value=\"1\" /&gt;\n                    &lt;RadzenRadioButtonListItem Text=\"Employees\" Value=\"2\" /&gt;\n                &lt;/Items&gt;\n            &lt;/RadzenRadioButtonList&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenRadioButtonList"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenRadioButtonList<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value property.\n            </summary>\n            <value>The value property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text property.\n            </summary>\n            <value>The text property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DisabledProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the disabled property.\n            </summary>\n            <value>The disabled property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "DisabledProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "VisibleProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the visible property.\n            </summary>\n            <value>The visible property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "VisibleProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Orientation",
            "TypeName": "Radzen.Orientation",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the orientation.\n            </summary>\n            <value>The orientation.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Orientation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the items.\n            </summary>\n            <value>The items.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenRadioButtonList<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2056002069,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenRadioButtonList<TValue>.Items",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the items.\n            </summary>\n            <value>The items.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Items",
            "ParentTag": "RadzenRadioButtonList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenRadioButtonList<TValue>.Items",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 688640426,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenRadioButtonList<TValue>.Items",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the items.\n            </summary>\n            <value>The items.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Items",
            "ParentTag": "Radzen.Blazor.RadzenRadioButtonList"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenRadioButtonList<TValue>.Items",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -46165066,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenRadioButtonListItem<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenRadioButtonListItem component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenRadioButtonListItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenRadioButtonListItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenRadioButtonListItem`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenRadioButtonListItem<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -133052778,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenRadioButtonListItem<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenRadioButtonListItem component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenRadioButtonListItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenRadioButtonListItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenRadioButtonListItem`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenRadioButtonListItem<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 460181249,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenRating",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenRating component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenRating Stars=\"10\" Change=@(args =&gt; Console.WriteLine($\"Value: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenRating"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stars",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the number of stars.\n            </summary>\n            <value>The number of stars.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stars"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether is read only.\n            </summary>\n            <value><c>true</c> if is read only; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Int32>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenRating"
        }
      },
      {
        "HashCode": 697330565,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenRating",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenRating component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenRating Stars=\"10\" Change=@(args =&gt; Console.WriteLine($\"Value: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenRating"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stars",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the number of stars.\n            </summary>\n            <value>The number of stars.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stars"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether is read only.\n            </summary>\n            <value><c>true</c> if is read only; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Int32>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenRating",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 166477632,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenRegexValidator",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A validator component which matches a component value against a specified regular expression pattern.\n            Must be placed inside a <see cref=\"T:Radzen.Blazor.RadzenTemplateForm`1\" />\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTemplateForm TItem=\"Model\" Data=@model&gt;\n               &lt;RadzenTextBox style=\"display: block\" Name=\"ZIP\" @bind-Value=@model.Zip /&gt;\n               &lt;RadzenRegexValidator Component=\"ZIP\" Text=\"ZIP code must be 5 digits\" Pattern=\"\\d{5}\" Style=\"position: absolute\" /&gt;\n            &lt;/RadzenTemplateForm&gt;\n            @code {\n               class Model\n               {\n                  public string Zip { get; set; }\n               }\n               Model model = new Model(); \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenRegexValidator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the message displayed when the component is invalid. Set to <c>\"Value should match\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pattern",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the regular expression pattern which the component value should match in order to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Pattern"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Component",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the component which this validator should validate. Must be set to the <see cref=\"P:Radzen.IRadzenFormComponent.Name\" /> of an existing component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Component"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Popup",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if the validator is displayed as a popup or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Popup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenRegexValidator"
        }
      },
      {
        "HashCode": 1034474207,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenRegexValidator",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A validator component which matches a component value against a specified regular expression pattern.\n            Must be placed inside a <see cref=\"T:Radzen.Blazor.RadzenTemplateForm`1\" />\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTemplateForm TItem=\"Model\" Data=@model&gt;\n               &lt;RadzenTextBox style=\"display: block\" Name=\"ZIP\" @bind-Value=@model.Zip /&gt;\n               &lt;RadzenRegexValidator Component=\"ZIP\" Text=\"ZIP code must be 5 digits\" Pattern=\"\\d{5}\" Style=\"position: absolute\" /&gt;\n            &lt;/RadzenTemplateForm&gt;\n            @code {\n               class Model\n               {\n                  public string Zip { get; set; }\n               }\n               Model model = new Model(); \n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenRegexValidator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the message displayed when the component is invalid. Set to <c>\"Value should match\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pattern",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the regular expression pattern which the component value should match in order to be valid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Pattern"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Component",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the component which this validator should validate. Must be set to the <see cref=\"P:Radzen.IRadzenFormComponent.Name\" /> of an existing component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Component"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Popup",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if the validator is displayed as a popup or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Popup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenRegexValidator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1360992267,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenRequiredValidator",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A validator component which checks if a component has value.\n            Must be placed inside a <see cref=\"T:Radzen.Blazor.RadzenTemplateForm`1\" />\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTemplateForm TItem=\"Model\" Data=@model&gt;\n              &lt;RadzenTextBox style=\"display: block\" Name=\"Email\" @bind-Value=@model.Email /&gt;\n              &lt;RadzenRequiredValidator Component=\"Email\" Text=\"Email is required\" Style=\"position: absolute\" /&gt;\n            &lt;/RadzenTemplateForm&gt;\n            @code {\n             class Model\n             {\n               public string Email { get; set; }\n             }\n             \n             Model model = new Model();\n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenRequiredValidator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the message displayed when the component is invalid. Set to <c>\"Required\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultValue",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies a default value. If the component value is equal to <c>DefaultValue</c> it is considered invalid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Component",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the component which this validator should validate. Must be set to the <see cref=\"P:Radzen.IRadzenFormComponent.Name\" /> of an existing component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Component"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Popup",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if the validator is displayed as a popup or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Popup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenRequiredValidator"
        }
      },
      {
        "HashCode": -2062830535,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenRequiredValidator",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A validator component which checks if a component has value.\n            Must be placed inside a <see cref=\"T:Radzen.Blazor.RadzenTemplateForm`1\" />\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTemplateForm TItem=\"Model\" Data=@model&gt;\n              &lt;RadzenTextBox style=\"display: block\" Name=\"Email\" @bind-Value=@model.Email /&gt;\n              &lt;RadzenRequiredValidator Component=\"Email\" Text=\"Email is required\" Style=\"position: absolute\" /&gt;\n            &lt;/RadzenTemplateForm&gt;\n            @code {\n             class Model\n             {\n               public string Email { get; set; }\n             }\n             \n             Model model = new Model();\n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenRequiredValidator"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the message displayed when the component is invalid. Set to <c>\"Required\"</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DefaultValue",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies a default value. If the component value is equal to <c>DefaultValue</c> it is considered invalid.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "DefaultValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Component",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the component which this validator should validate. Must be set to the <see cref=\"P:Radzen.IRadzenFormComponent.Name\" /> of an existing component.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Component"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Popup",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Determines if the validator is displayed as a popup or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Popup"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenRequiredValidator",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 212956225,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenScheduler<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays a collection of <see cref=\"T:Radzen.Blazor.AppointmentData\" /> in day, week or month view.\n            </summary>\n            <typeparam name=\"TItem\">The type of the value item.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenScheduler Data=\"@data\" TItem=\"DataItem\" StartProperty=\"Start\" EndProperty=\"End\" TextProperty=\"Text\"&gt;\n                &lt;RadzenMonthView /&gt;\n            &lt;/RadzenScheduler&gt;\n            @code {\n                class DataItem\n                {\n                    public DateTime Start { get; set; }\n                    public DateTime End { get; set; }\n                    public string Text { get; set; }\n                }\n                DataItem[] data = new DataItem[]\n                {\n                    new DataItem\n                    {\n                        Start = DateTime.Today,\n                        End = DateTime.Today.AddDays(1),\n                        Text = \"Birthday\"\n                    },\n                };\n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenScheduler"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenScheduler<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the scheduler. Use to specify what views to render.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template used to render appointments.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenScheduler Data=\"@data\" TItem=\"DataItem\" StartProperty=\"Start\" EndProperty=\"End\" TextProperty=\"Text\"&gt;\n               &lt;Template Context=\"data\"&gt;\n                  &lt;strong&gt;@data.Text&lt;/strong&gt;\n               &lt;/Template&gt;\n               &lt;ChildContent&gt;\n                  &lt;RadzenMonthView /&gt;\n                &lt;/ChildContent&gt;\n            &lt;/RadzenScheduler&gt;\n            </code>\n            </example>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data of RadzenScheduler. It will display an appointment for every item of the collection which is within the current view date range.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the property of <typeparamref name=\"TItem\" /> which will set <see cref=\"P:Radzen.Blazor.AppointmentData.Start\" />.\n            </summary>\n            <value>The name of the property. Must be a <c>DateTime</c> property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the property of <typeparamref name=\"TItem\" /> which will set <see cref=\"P:Radzen.Blazor.AppointmentData.End\" />.\n            </summary>\n            <value>The name of the property. Must be a <c>DateTime</c> property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EndProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the initially selected view.\n            </summary>\n            <value>The index of the selected.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TodayText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text of the today button. Set to <c>Today</c> by default.\n            </summary>\n            <value>The today text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TodayText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Date",
            "TypeName": "System.DateTime",
            "Documentation": "\n            <summary>\n            Gets or sets the initial date displayed by the selected view. Set to <c>DateTime.Today</c> by default.\n            </summary>\n            <value>The date.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Date"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the property of <typeparamref name=\"TItem\" /> which will set <see cref=\"P:Radzen.Blazor.AppointmentData.Text\" />.\n            </summary>\n            <value>The name of the property. Must be a <c>DateTime</c> property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SlotSelect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.SchedulerSlotSelectEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user clicks a slot in the current view. Commonly used to add new appointments.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenScheduler Data=@appointments SlotSelect=@OnSlotSelect&gt;\n            &lt;/RadzenScheduler&gt;\n            @code {\n             void OnSlotSelect(SchedulerSlotSelectEventArgs args) \n             {\n             }\n            }\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "SlotSelect",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AppointmentSelect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.SchedulerAppointmentSelectEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user clicks an appointment in the current view. Commonly used to edit existing appointments.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenScheduler Data=@appointments AppointmentSelect=@OnAppointmentSelect&gt;\n            &lt;/RadzenScheduler&gt;\n            @code {\n             void OnAppointmentSelect(SchedulerAppointmentSelectEventArgs&lt;TItem&gt; args) \n             {\n             }\n            }\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppointmentSelect",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AppointmentRender",
            "TypeName": "System.Action<Radzen.SchedulerAppointmentRenderEventArgs<TItem>>",
            "Documentation": "\n             <summary>\n             An action that will be invoked when the current view renders an appointment. Never call <c>StateHasChanged</c> when handling AppointmentRender.\n             </summary>\n             <example>\n             <code>\n             &lt;RadzenScheduler Data=@appointments AppointmentRender=@OnAppointmentRendert&gt;\n             &lt;/RadzenScheduler&gt;\n             @code {\n               void OnAppintmentRender(SchedulerAppointmentRenderEventArgs&lt;TItem&gt; args) \n               {\n                 if (args.Data.Text == \"Birthday\")\n                 {\n                    args.Attributes[\"style\"] = \"color: red;\"\n                 }\n            .  }\n             }\n             </code>\n             </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppointmentRender",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SlotRender",
            "TypeName": "System.Action<Radzen.SchedulerSlotRenderEventArgs>",
            "Documentation": "\n            <summary>\n            An action that will be invoked when the current view renders an slot. Never call <c>StateHasChanged</c> when handling SlotRender.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenScheduler Data=@appointments SlotRender=@OnSlotRender&gt;\n            &lt;/RadzenScheduler&gt;\n            @code {\n              void OnSlotRender(SchedulerSlotRenderEventArgs args) \n              {\n                if (args.View.Text == \"Month\" &amp;&amp; args.Start.Date == DateTime.Today)\n                {\n                   args.Attributes[\"style\"] = \"background: red;\";\n                }\n              }\n            }\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "SlotRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.SchedulerLoadDataEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the scheduler needs data for the current view. Commonly used to filter the\n            data assigned to <see cref=\"P:Radzen.Blazor.RadzenScheduler`1.Data\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenScheduler<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 2102039392,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenScheduler<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays a collection of <see cref=\"T:Radzen.Blazor.AppointmentData\" /> in day, week or month view.\n            </summary>\n            <typeparam name=\"TItem\">The type of the value item.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenScheduler Data=\"@data\" TItem=\"DataItem\" StartProperty=\"Start\" EndProperty=\"End\" TextProperty=\"Text\"&gt;\n                &lt;RadzenMonthView /&gt;\n            &lt;/RadzenScheduler&gt;\n            @code {\n                class DataItem\n                {\n                    public DateTime Start { get; set; }\n                    public DateTime End { get; set; }\n                    public string Text { get; set; }\n                }\n                DataItem[] data = new DataItem[]\n                {\n                    new DataItem\n                    {\n                        Start = DateTime.Today,\n                        End = DateTime.Today.AddDays(1),\n                        Text = \"Birthday\"\n                    },\n                };\n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenScheduler"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenScheduler<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content of the scheduler. Use to specify what views to render.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template used to render appointments.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenScheduler Data=\"@data\" TItem=\"DataItem\" StartProperty=\"Start\" EndProperty=\"End\" TextProperty=\"Text\"&gt;\n               &lt;Template Context=\"data\"&gt;\n                  &lt;strong&gt;@data.Text&lt;/strong&gt;\n               &lt;/Template&gt;\n               &lt;ChildContent&gt;\n                  &lt;RadzenMonthView /&gt;\n                &lt;/ChildContent&gt;\n            &lt;/RadzenScheduler&gt;\n            </code>\n            </example>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data of RadzenScheduler. It will display an appointment for every item of the collection which is within the current view date range.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the property of <typeparamref name=\"TItem\" /> which will set <see cref=\"P:Radzen.Blazor.AppointmentData.Start\" />.\n            </summary>\n            <value>The name of the property. Must be a <c>DateTime</c> property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the property of <typeparamref name=\"TItem\" /> which will set <see cref=\"P:Radzen.Blazor.AppointmentData.End\" />.\n            </summary>\n            <value>The name of the property. Must be a <c>DateTime</c> property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EndProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Specifies the initially selected view.\n            </summary>\n            <value>The index of the selected.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TodayText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text of the today button. Set to <c>Today</c> by default.\n            </summary>\n            <value>The today text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TodayText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Date",
            "TypeName": "System.DateTime",
            "Documentation": "\n            <summary>\n            Gets or sets the initial date displayed by the selected view. Set to <c>DateTime.Today</c> by default.\n            </summary>\n            <value>The date.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Date"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the property of <typeparamref name=\"TItem\" /> which will set <see cref=\"P:Radzen.Blazor.AppointmentData.Text\" />.\n            </summary>\n            <value>The name of the property. Must be a <c>DateTime</c> property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SlotSelect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.SchedulerSlotSelectEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user clicks a slot in the current view. Commonly used to add new appointments.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenScheduler Data=@appointments SlotSelect=@OnSlotSelect&gt;\n            &lt;/RadzenScheduler&gt;\n            @code {\n             void OnSlotSelect(SchedulerSlotSelectEventArgs args) \n             {\n             }\n            }\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "SlotSelect",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AppointmentSelect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.SchedulerAppointmentSelectEventArgs<TItem>>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user clicks an appointment in the current view. Commonly used to edit existing appointments.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenScheduler Data=@appointments AppointmentSelect=@OnAppointmentSelect&gt;\n            &lt;/RadzenScheduler&gt;\n            @code {\n             void OnAppointmentSelect(SchedulerAppointmentSelectEventArgs&lt;TItem&gt; args) \n             {\n             }\n            }\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppointmentSelect",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AppointmentRender",
            "TypeName": "System.Action<Radzen.SchedulerAppointmentRenderEventArgs<TItem>>",
            "Documentation": "\n             <summary>\n             An action that will be invoked when the current view renders an appointment. Never call <c>StateHasChanged</c> when handling AppointmentRender.\n             </summary>\n             <example>\n             <code>\n             &lt;RadzenScheduler Data=@appointments AppointmentRender=@OnAppointmentRendert&gt;\n             &lt;/RadzenScheduler&gt;\n             @code {\n               void OnAppintmentRender(SchedulerAppointmentRenderEventArgs&lt;TItem&gt; args) \n               {\n                 if (args.Data.Text == \"Birthday\")\n                 {\n                    args.Attributes[\"style\"] = \"color: red;\"\n                 }\n            .  }\n             }\n             </code>\n             </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "AppointmentRender",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SlotRender",
            "TypeName": "System.Action<Radzen.SchedulerSlotRenderEventArgs>",
            "Documentation": "\n            <summary>\n            An action that will be invoked when the current view renders an slot. Never call <c>StateHasChanged</c> when handling SlotRender.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenScheduler Data=@appointments SlotRender=@OnSlotRender&gt;\n            &lt;/RadzenScheduler&gt;\n            @code {\n              void OnSlotRender(SchedulerSlotRenderEventArgs args) \n              {\n                if (args.View.Text == \"Month\" &amp;&amp; args.Start.Date == DateTime.Today)\n                {\n                   args.Attributes[\"style\"] = \"background: red;\";\n                }\n              }\n            }\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "SlotRender",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.SchedulerLoadDataEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the scheduler needs data for the current view. Commonly used to filter the\n            data assigned to <see cref=\"P:Radzen.Blazor.RadzenScheduler`1.Data\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenScheduler<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1625881913,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenScheduler<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the scheduler. Use to specify what views to render.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenScheduler"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenScheduler<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 984331,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenScheduler<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content of the scheduler. Use to specify what views to render.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenScheduler"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenScheduler<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -541580919,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenScheduler<TItem>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template used to render appointments.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenScheduler Data=\"@data\" TItem=\"DataItem\" StartProperty=\"Start\" EndProperty=\"End\" TextProperty=\"Text\"&gt;\n               &lt;Template Context=\"data\"&gt;\n                  &lt;strong&gt;@data.Text&lt;/strong&gt;\n               &lt;/Template&gt;\n               &lt;ChildContent&gt;\n                  &lt;RadzenMonthView /&gt;\n                &lt;/ChildContent&gt;\n            &lt;/RadzenScheduler&gt;\n            </code>\n            </example>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenScheduler"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenScheduler<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1707038624,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenScheduler<TItem>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template used to render appointments.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenScheduler Data=\"@data\" TItem=\"DataItem\" StartProperty=\"Start\" EndProperty=\"End\" TextProperty=\"Text\"&gt;\n               &lt;Template Context=\"data\"&gt;\n                  &lt;strong&gt;@data.Text&lt;/strong&gt;\n               &lt;/Template&gt;\n               &lt;ChildContent&gt;\n                  &lt;RadzenMonthView /&gt;\n                &lt;/ChildContent&gt;\n            &lt;/RadzenScheduler&gt;\n            </code>\n            </example>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenScheduler"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenScheduler<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1498792521,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSelectBar<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSelectBar component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenSelectBar @bind-Value=@values TValue=\"IEnumerable&lt;int&gt;\" Multiple=\"true\"&gt;\n                &lt;Items&gt;\n                    &lt;RadzenSelectBarItem Text=\"Orders\" Value=\"1\" /&gt;\n                    &lt;RadzenSelectBarItem Text=\"Employees\" Value=\"2\" /&gt;\n                    &lt;RadzenSelectBarItem Text=\"Customers\" Value=\"3\" /&gt;\n                &lt;/Items&gt;\n            &lt;/RadzenSelectBar&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSelectBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenSelectBar<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "Radzen.ButtonSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the size.\n            </summary>\n            <value>The size.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value property.\n            </summary>\n            <value>The value property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text property.\n            </summary>\n            <value>The text property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multiple",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenSelectBar`1\" /> is multiple.\n            </summary>\n            <value><c>true</c> if multiple; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Multiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the items.\n            </summary>\n            <value>The items.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSelectBar<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1706101326,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSelectBar<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSelectBar component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenSelectBar @bind-Value=@values TValue=\"IEnumerable&lt;int&gt;\" Multiple=\"true\"&gt;\n                &lt;Items&gt;\n                    &lt;RadzenSelectBarItem Text=\"Orders\" Value=\"1\" /&gt;\n                    &lt;RadzenSelectBarItem Text=\"Employees\" Value=\"2\" /&gt;\n                    &lt;RadzenSelectBarItem Text=\"Customers\" Value=\"3\" /&gt;\n                &lt;/Items&gt;\n            &lt;/RadzenSelectBar&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSelectBar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenSelectBar<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "Radzen.ButtonSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the size.\n            </summary>\n            <value>The size.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value property.\n            </summary>\n            <value>The value property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text property.\n            </summary>\n            <value>The text property.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multiple",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenSelectBar`1\" /> is multiple.\n            </summary>\n            <value><c>true</c> if multiple; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Multiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Items",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the items.\n            </summary>\n            <value>The items.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Items",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSelectBar<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -474006533,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSelectBar<TValue>.Items",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the items.\n            </summary>\n            <value>The items.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Items",
            "ParentTag": "RadzenSelectBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSelectBar<TValue>.Items",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 494630514,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSelectBar<TValue>.Items",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the items.\n            </summary>\n            <value>The items.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Items",
            "ParentTag": "Radzen.Blazor.RadzenSelectBar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSelectBar<TValue>.Items",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1922076859,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSelectBarItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSelectBarItem component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSelectBarItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenSelectBarItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Image",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the image.\n            </summary>\n            <value>The image.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Image"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ImageStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the image style.\n            </summary>\n            <value>The image style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ImageStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenSelectBarItem\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSelectBarItem"
        }
      },
      {
        "HashCode": -253653545,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSelectBarItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSelectBarItem component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSelectBarItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenSelectBarItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Image",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the image.\n            </summary>\n            <value>The image.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Image"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ImageStyle",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the image style.\n            </summary>\n            <value>The image style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ImageStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenSelectBarItem\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSelectBarItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -127899041,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSelectBarItem.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenSelectBarItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSelectBarItem.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1834263564,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSelectBarItem.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenSelectBarItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSelectBarItem.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1729435332,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSeriesAnnotation<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays a text label for the specifiad data item from the series.\n            </summary>\n            <example>\n            <code>\n              &lt;RadzenChart&gt;\n                  &lt;RadzenLineSeries Data=@revenue CategoryProperty=\"Quarter\" ValueProperty=\"Revenue\"&gt;\n                     &lt;RadzenSeriesAnnotation Data=\"@revenue[1] Text=\"Q2 Revenue\" /&gt;\n                  &lt;/RadzenLineSeries&gt;\n              &lt;/RadzenChart&gt;\n              @code {\n                  class DataItem\n                  {\n                      public string Quarter { get; set; }\n                      public double Revenue { get; set; }\n                  }\n                  DataItem[] revenue = new DataItem[]\n                  {\n                      new DataItem { Quarter = \"Q1\", Revenue = 234000 },\n                      new DataItem { Quarter = \"Q2\", Revenue = 284000 },\n                      new DataItem { Quarter = \"Q3\", Revenue = 274000 },\n                      new DataItem { Quarter = \"Q4\", Revenue = 294000 }\n                  };\n              }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSeriesAnnotation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenSeriesAnnotation<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "TItem",
            "Documentation": "\n            <summary>\n            The data item from the series this annotation applies to. \n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The text to display in the annotation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OffsetX",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary> Horizontal offset from the default position. </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OffsetX"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OffsetY",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary> Vertical offset from the default position. </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OffsetY"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary> Determines whether the annotation is visible. Set to <c>true</c> by default.</summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesAnnotation<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1953171722,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSeriesAnnotation<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays a text label for the specifiad data item from the series.\n            </summary>\n            <example>\n            <code>\n              &lt;RadzenChart&gt;\n                  &lt;RadzenLineSeries Data=@revenue CategoryProperty=\"Quarter\" ValueProperty=\"Revenue\"&gt;\n                     &lt;RadzenSeriesAnnotation Data=\"@revenue[1] Text=\"Q2 Revenue\" /&gt;\n                  &lt;/RadzenLineSeries&gt;\n              &lt;/RadzenChart&gt;\n              @code {\n                  class DataItem\n                  {\n                      public string Quarter { get; set; }\n                      public double Revenue { get; set; }\n                  }\n                  DataItem[] revenue = new DataItem[]\n                  {\n                      new DataItem { Quarter = \"Q1\", Revenue = 234000 },\n                      new DataItem { Quarter = \"Q2\", Revenue = 284000 },\n                      new DataItem { Quarter = \"Q3\", Revenue = 274000 },\n                      new DataItem { Quarter = \"Q4\", Revenue = 294000 }\n                  };\n              }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSeriesAnnotation"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenSeriesAnnotation<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "TItem",
            "Documentation": "\n            <summary>\n            The data item from the series this annotation applies to. \n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The text to display in the annotation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OffsetX",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary> Horizontal offset from the default position. </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OffsetX"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OffsetY",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary> Vertical offset from the default position. </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OffsetY"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary> Determines whether the annotation is visible. Set to <c>true</c> by default.</summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesAnnotation<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 249021870,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSeriesDataLabels",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays the series values as text labels.\n            </summary>\n            <example>\n            <code>\n              &lt;RadzenChart&gt;\n                  &lt;RadzenLineSeries Data=@revenue CategoryProperty=\"Quarter\" ValueProperty=\"Revenue\"&gt;\n                     &lt;RadzenSeriesDataLabels /&gt;\n                  &lt;/RadzenLineSeries&gt;\n              &lt;/RadzenChart&gt;\n              @code {\n                  class DataItem\n                  {\n                      public string Quarter { get; set; }\n                      public double Revenue { get; set; }\n                  }\n                  DataItem[] revenue = new DataItem[]\n                  {\n                      new DataItem { Quarter = \"Q1\", Revenue = 234000 },\n                      new DataItem { Quarter = \"Q2\", Revenue = 284000 },\n                      new DataItem { Quarter = \"Q3\", Revenue = 274000 },\n                      new DataItem { Quarter = \"Q4\", Revenue = 294000 }\n                  };\n              }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSeriesDataLabels"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OffsetX",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary> Horizontal offset from the default position. </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OffsetX"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OffsetY",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary> Vertical offset from the default position. </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OffsetY"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>Determines the visibility of the data labels. Set to <c>true</c> by default.</summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesDataLabels"
        }
      },
      {
        "HashCode": -1737812274,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSeriesDataLabels",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays the series values as text labels.\n            </summary>\n            <example>\n            <code>\n              &lt;RadzenChart&gt;\n                  &lt;RadzenLineSeries Data=@revenue CategoryProperty=\"Quarter\" ValueProperty=\"Revenue\"&gt;\n                     &lt;RadzenSeriesDataLabels /&gt;\n                  &lt;/RadzenLineSeries&gt;\n              &lt;/RadzenChart&gt;\n              @code {\n                  class DataItem\n                  {\n                      public string Quarter { get; set; }\n                      public double Revenue { get; set; }\n                  }\n                  DataItem[] revenue = new DataItem[]\n                  {\n                      new DataItem { Quarter = \"Q1\", Revenue = 234000 },\n                      new DataItem { Quarter = \"Q2\", Revenue = 284000 },\n                      new DataItem { Quarter = \"Q3\", Revenue = 274000 },\n                      new DataItem { Quarter = \"Q4\", Revenue = 294000 }\n                  };\n              }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSeriesDataLabels"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "OffsetX",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary> Horizontal offset from the default position. </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OffsetX"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OffsetY",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary> Vertical offset from the default position. </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OffsetY"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>Determines the visibility of the data labels. Set to <c>true</c> by default.</summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesDataLabels",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2063115319,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSeriesMeanLine",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays the mean of a chart series.\n            </summary>\n            <example>\n            <code>\n              &lt;RadzenChart&gt;\n                  &lt;RadzenLineSeries Data=@revenue CategoryProperty=\"Quarter\" ValueProperty=\"Revenue\"&gt;\n                     &lt;RadzenSeriesMeanLine /&gt;\n                  &lt;/RadzenLineSeries&gt;\n              &lt;/RadzenChart&gt;\n              @code {\n                  class DataItem\n                  {\n                      public string Quarter { get; set; }\n                      public double Revenue { get; set; }\n                  }\n                  DataItem[] revenue = new DataItem[]\n                  {\n                      new DataItem { Quarter = \"Q1\", Revenue = 234000 },\n                      new DataItem { Quarter = \"Q2\", Revenue = 284000 },\n                      new DataItem { Quarter = \"Q3\", Revenue = 274000 },\n                      new DataItem { Quarter = \"Q4\", Revenue = 294000 }\n                  };\n              }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSeriesMeanLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Double>",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the pixel width of the grid lines. Set to <c>1</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of line used to render the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to display grid lines or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesMeanLine"
        }
      },
      {
        "HashCode": -971553305,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSeriesMeanLine",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays the mean of a chart series.\n            </summary>\n            <example>\n            <code>\n              &lt;RadzenChart&gt;\n                  &lt;RadzenLineSeries Data=@revenue CategoryProperty=\"Quarter\" ValueProperty=\"Revenue\"&gt;\n                     &lt;RadzenSeriesMeanLine /&gt;\n                  &lt;/RadzenLineSeries&gt;\n              &lt;/RadzenChart&gt;\n              @code {\n                  class DataItem\n                  {\n                      public string Quarter { get; set; }\n                      public double Revenue { get; set; }\n                  }\n                  DataItem[] revenue = new DataItem[]\n                  {\n                      new DataItem { Quarter = \"Q1\", Revenue = 234000 },\n                      new DataItem { Quarter = \"Q2\", Revenue = 284000 },\n                      new DataItem { Quarter = \"Q3\", Revenue = 274000 },\n                      new DataItem { Quarter = \"Q4\", Revenue = 294000 }\n                  };\n              }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSeriesMeanLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Double>",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the pixel width of the grid lines. Set to <c>1</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of line used to render the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to display grid lines or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesMeanLine",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 367474975,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSeriesMeanLine.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "RadzenSeriesMeanLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesMeanLine.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1052507929,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSeriesMeanLine.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "Radzen.Blazor.RadzenSeriesMeanLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesMeanLine.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1751139736,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSeriesMedianLine",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays the median of a chart series.\n            </summary>\n            <example>\n            <code>\n              &lt;RadzenChart&gt;\n                  &lt;RadzenLineSeries Data=@revenue CategoryProperty=\"Quarter\" ValueProperty=\"Revenue\"&gt;\n                     &lt;RadzenSeriesMedianLine /&gt;\n                  &lt;/RadzenLineSeries&gt;\n              &lt;/RadzenChart&gt;\n              @code {\n                  class DataItem\n                  {\n                      public string Quarter { get; set; }\n                      public double Revenue { get; set; }\n                  }\n                  DataItem[] revenue = new DataItem[]\n                  {\n                      new DataItem { Quarter = \"Q1\", Revenue = 234000 },\n                      new DataItem { Quarter = \"Q2\", Revenue = 284000 },\n                      new DataItem { Quarter = \"Q3\", Revenue = 274000 },\n                      new DataItem { Quarter = \"Q4\", Revenue = 294000 }\n                  };\n              }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSeriesMedianLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Double>",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the pixel width of the grid lines. Set to <c>1</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of line used to render the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to display grid lines or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesMedianLine"
        }
      },
      {
        "HashCode": -329599994,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSeriesMedianLine",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays the median of a chart series.\n            </summary>\n            <example>\n            <code>\n              &lt;RadzenChart&gt;\n                  &lt;RadzenLineSeries Data=@revenue CategoryProperty=\"Quarter\" ValueProperty=\"Revenue\"&gt;\n                     &lt;RadzenSeriesMedianLine /&gt;\n                  &lt;/RadzenLineSeries&gt;\n              &lt;/RadzenChart&gt;\n              @code {\n                  class DataItem\n                  {\n                      public string Quarter { get; set; }\n                      public double Revenue { get; set; }\n                  }\n                  DataItem[] revenue = new DataItem[]\n                  {\n                      new DataItem { Quarter = \"Q1\", Revenue = 234000 },\n                      new DataItem { Quarter = \"Q2\", Revenue = 284000 },\n                      new DataItem { Quarter = \"Q3\", Revenue = 274000 },\n                      new DataItem { Quarter = \"Q4\", Revenue = 294000 }\n                  };\n              }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSeriesMedianLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Double>",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the pixel width of the grid lines. Set to <c>1</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of line used to render the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to display grid lines or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesMedianLine",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 459946336,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSeriesMedianLine.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "RadzenSeriesMedianLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesMedianLine.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -2133248901,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSeriesMedianLine.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "Radzen.Blazor.RadzenSeriesMedianLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesMedianLine.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -971165631,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSeriesModeLine",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays the mode of a chart series.\n            </summary>\n            <example>\n            <code>\n              &lt;RadzenChart&gt;\n                  &lt;RadzenLineSeries Data=@revenue CategoryProperty=\"Quarter\" ValueProperty=\"Revenue\"&gt;\n                     &lt;RadzenSeriesModeLine /&gt;\n                  &lt;/RadzenLineSeries&gt;\n              &lt;/RadzenChart&gt;\n              @code {\n                  class DataItem\n                  {\n                      public string Quarter { get; set; }\n                      public double Revenue { get; set; }\n                  }\n                  DataItem[] revenue = new DataItem[]\n                  {\n                      new DataItem { Quarter = \"Q1\", Revenue = 234000 },\n                      new DataItem { Quarter = \"Q2\", Revenue = 284000 },\n                      new DataItem { Quarter = \"Q3\", Revenue = 274000 },\n                      new DataItem { Quarter = \"Q4\", Revenue = 294000 }\n                  };\n              }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSeriesModeLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Double>",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the pixel width of the grid lines. Set to <c>1</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of line used to render the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to display grid lines or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesModeLine"
        }
      },
      {
        "HashCode": -48184816,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSeriesModeLine",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays the mode of a chart series.\n            </summary>\n            <example>\n            <code>\n              &lt;RadzenChart&gt;\n                  &lt;RadzenLineSeries Data=@revenue CategoryProperty=\"Quarter\" ValueProperty=\"Revenue\"&gt;\n                     &lt;RadzenSeriesModeLine /&gt;\n                  &lt;/RadzenLineSeries&gt;\n              &lt;/RadzenChart&gt;\n              @code {\n                  class DataItem\n                  {\n                      public string Quarter { get; set; }\n                      public double Revenue { get; set; }\n                  }\n                  DataItem[] revenue = new DataItem[]\n                  {\n                      new DataItem { Quarter = \"Q1\", Revenue = 234000 },\n                      new DataItem { Quarter = \"Q2\", Revenue = 284000 },\n                      new DataItem { Quarter = \"Q3\", Revenue = 274000 },\n                      new DataItem { Quarter = \"Q4\", Revenue = 294000 }\n                  };\n              }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSeriesModeLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Double>",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the pixel width of the grid lines. Set to <c>1</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of line used to render the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to display grid lines or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesModeLine",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 73605551,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSeriesModeLine.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "RadzenSeriesModeLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesModeLine.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1086940412,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSeriesModeLine.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "Radzen.Blazor.RadzenSeriesModeLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesModeLine.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -810986968,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSeriesTrendLine",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays the trend of a chart series.\n            </summary>\n            <example>\n            <code>\n              &lt;RadzenChart&gt;\n                  &lt;RadzenLineSeries Data=@revenue CategoryProperty=\"Quarter\" ValueProperty=\"Revenue\"&gt;\n                     &lt;RadzenSeriesTrendLine /&gt;\n                  &lt;/RadzenLineSeries&gt;\n              &lt;/RadzenChart&gt;\n              @code {\n                  class DataItem\n                  {\n                      public string Quarter { get; set; }\n                      public double Revenue { get; set; }\n                  }\n                  DataItem[] revenue = new DataItem[]\n                  {\n                      new DataItem { Quarter = \"Q1\", Revenue = 234000 },\n                      new DataItem { Quarter = \"Q2\", Revenue = 284000 },\n                      new DataItem { Quarter = \"Q3\", Revenue = 274000 },\n                      new DataItem { Quarter = \"Q4\", Revenue = 294000 }\n                  };\n              }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSeriesTrendLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the pixel width of the grid lines. Set to <c>1</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of line used to render the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to display grid lines or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesTrendLine"
        }
      },
      {
        "HashCode": -2036400356,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSeriesTrendLine",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays the trend of a chart series.\n            </summary>\n            <example>\n            <code>\n              &lt;RadzenChart&gt;\n                  &lt;RadzenLineSeries Data=@revenue CategoryProperty=\"Quarter\" ValueProperty=\"Revenue\"&gt;\n                     &lt;RadzenSeriesTrendLine /&gt;\n                  &lt;/RadzenLineSeries&gt;\n              &lt;/RadzenChart&gt;\n              @code {\n                  class DataItem\n                  {\n                      public string Quarter { get; set; }\n                      public double Revenue { get; set; }\n                  }\n                  DataItem[] revenue = new DataItem[]\n                  {\n                      new DataItem { Quarter = \"Q1\", Revenue = 234000 },\n                      new DataItem { Quarter = \"Q2\", Revenue = 284000 },\n                      new DataItem { Quarter = \"Q3\", Revenue = 274000 },\n                      new DataItem { Quarter = \"Q4\", Revenue = 294000 }\n                  };\n              }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSeriesTrendLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the pixel width of the grid lines. Set to <c>1</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of line used to render the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to display grid lines or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesTrendLine",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 830869736,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSidebar",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSidebar component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSidebar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Responsive",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Toggles the responsive mode of the component. If set to <c>true</c> (the default) the component will be \n            expanded on larger displays and collapsed on touch devices. Set to <c>false</c> if you want to disable this behavior.\n            Responsive mode is only available when RadzenSidebar is inside <see cref=\"T:Radzen.Blazor.RadzenLayout\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Responsive"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenSidebar\" /> is expanded.\n            </summary>\n            <value><c>true</c> if expanded; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets the expanded changed callback.\n            </summary>\n            <value>The expanded changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSidebar"
        }
      },
      {
        "HashCode": 1429489091,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSidebar",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSidebar component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSidebar"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Responsive",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Toggles the responsive mode of the component. If set to <c>true</c> (the default) the component will be \n            expanded on larger displays and collapsed on touch devices. Set to <c>false</c> if you want to disable this behavior.\n            Responsive mode is only available when RadzenSidebar is inside <see cref=\"T:Radzen.Blazor.RadzenLayout\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Responsive"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenSidebar\" /> is expanded.\n            </summary>\n            <value><c>true</c> if expanded; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandedChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets the expanded changed callback.\n            </summary>\n            <value>The expanded changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ExpandedChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSidebar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1795913274,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSidebar.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenSidebar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSidebar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 868102188,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSidebar.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenSidebar"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSidebar.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1873312622,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSidebarToggle",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSidebarToggle component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSidebarToggle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the click callback.\n            </summary>\n            <value>The click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSidebarToggle"
        }
      },
      {
        "HashCode": -768106631,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSidebarToggle",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSidebarToggle component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSidebarToggle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the click callback.\n            </summary>\n            <value>The click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSidebarToggle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1631421866,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSlider<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSlider component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenSlider @bind-Value=@value TValue=\"int\" Min=\"0\" Max=\"100\" Change=@(args =&gt; Console.WriteLine($\"Value: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSlider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenSlider<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the step.\n            </summary>\n            <value>The step.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Step"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Range",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenSlider`1\" /> is range.\n            </summary>\n            <value><c>true</c> if range; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Range"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Decimal",
            "Documentation": "\n            <summary>\n            Determines the minimum value.\n            </summary>\n            <value>The minimum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Decimal",
            "Documentation": "\n            <summary>\n            Determines the maximum value.\n            </summary>\n            <value>The maximum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSlider<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1492617162,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSlider<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSlider component.\n            </summary>\n            <typeparam name=\"TValue\">The type of the value.</typeparam>\n            <example>\n            <code>\n            &lt;RadzenSlider @bind-Value=@value TValue=\"int\" Min=\"0\" Max=\"100\" Change=@(args =&gt; Console.WriteLine($\"Value: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSlider"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenSlider<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "TValue",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the step.\n            </summary>\n            <value>The step.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Step"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Range",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenSlider`1\" /> is range.\n            </summary>\n            <value><c>true</c> if range; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Range"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Decimal",
            "Documentation": "\n            <summary>\n            Determines the minimum value.\n            </summary>\n            <value>The minimum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Decimal",
            "Documentation": "\n            <summary>\n            Determines the maximum value.\n            </summary>\n            <value>The maximum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<TValue>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSlider<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -677937129,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSplitButton",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSplitButton component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenSplitButton Click=@(args =&gt; Console.WriteLine($\"Value is: {args.Value}\"))&gt;\n                &lt;ChildContent&gt;\n                    &lt;RadzenSplitButtonItem Text=\"Orders\" Value=\"1\" /&gt;\n                    &lt;RadzenSplitButtonItem Text=\"Employees\" Value=\"2\" /&gt;\n                    &lt;RadzenSplitButtonItem Text=\"Customers\" Value=\"3\" /&gt;\n                &lt;/ChildContent&gt;\n            &lt;/RadzenSelectBar&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSplitButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Image",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the image.\n            </summary>\n            <value>The image.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Image"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ButtonStyle",
            "TypeName": "Radzen.ButtonStyle",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the button style.\n            </summary>\n            <value>The button style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ButtonStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Variant",
            "TypeName": "Radzen.Variant",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the design variant of the button.\n            </summary>\n            <value>The variant of the button.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Variant"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Shade",
            "TypeName": "Radzen.Shade",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the color shade of the button.\n            </summary>\n            <value>The color shade of the button.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Shade"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "Radzen.ButtonSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the size.\n            </summary>\n            <value>The size.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenSplitButton\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.Blazor.RadzenSplitButtonItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the click callback.\n            </summary>\n            <value>The click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSplitButton"
        }
      },
      {
        "HashCode": -1819275430,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSplitButton",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSplitButton component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenSplitButton Click=@(args =&gt; Console.WriteLine($\"Value is: {args.Value}\"))&gt;\n                &lt;ChildContent&gt;\n                    &lt;RadzenSplitButtonItem Text=\"Orders\" Value=\"1\" /&gt;\n                    &lt;RadzenSplitButtonItem Text=\"Employees\" Value=\"2\" /&gt;\n                    &lt;RadzenSplitButtonItem Text=\"Customers\" Value=\"3\" /&gt;\n                &lt;/ChildContent&gt;\n            &lt;/RadzenSelectBar&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSplitButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Image",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the image.\n            </summary>\n            <value>The image.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Image"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ButtonStyle",
            "TypeName": "Radzen.ButtonStyle",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the button style.\n            </summary>\n            <value>The button style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ButtonStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Variant",
            "TypeName": "Radzen.Variant",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the design variant of the button.\n            </summary>\n            <value>The variant of the button.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Variant"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Shade",
            "TypeName": "Radzen.Shade",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the color shade of the button.\n            </summary>\n            <value>The color shade of the button.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Shade"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "Radzen.ButtonSize",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the size.\n            </summary>\n            <value>The size.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenSplitButton\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.Blazor.RadzenSplitButtonItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the click callback.\n            </summary>\n            <value>The click callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSplitButton",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1328064801,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSplitButton.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenSplitButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSplitButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1305741275,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSplitButton.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content\n            </summary>\n            <value>The content of the child.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenSplitButton"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSplitButton.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2066617105,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSplitButtonItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSplitButtonItem component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSplitButtonItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSplitButtonItem"
        }
      },
      {
        "HashCode": 684958940,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSplitButtonItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSplitButtonItem component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSplitButtonItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSplitButtonItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -374194063,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSplitter",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSplitter component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSplitter"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Orientation",
            "TypeName": "Radzen.Orientation",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the orientation.\n            </summary>\n            <value>The orientation.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Orientation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Collapse",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.RadzenSplitterEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the collapse callback.\n            </summary>\n            <value>The collapse callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Collapse",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expand",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.RadzenSplitterEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the expand callback.\n            </summary>\n            <value>The expand callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expand",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resize",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.RadzenSplitterResizeEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the resize callback.\n            </summary>\n            <value>The resize callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resize",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSplitter"
        }
      },
      {
        "HashCode": 1829318927,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSplitter",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSplitter component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSplitter"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Orientation",
            "TypeName": "Radzen.Orientation",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the orientation.\n            </summary>\n            <value>The orientation.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Orientation"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Collapse",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.RadzenSplitterEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the collapse callback.\n            </summary>\n            <value>The collapse callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Collapse",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expand",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.RadzenSplitterEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the expand callback.\n            </summary>\n            <value>The expand callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expand",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resize",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.RadzenSplitterResizeEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the resize callback.\n            </summary>\n            <value>The resize callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resize",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSplitter",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 230003130,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSplitter.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenSplitter"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSplitter.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -330517915,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSplitter.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenSplitter"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSplitter.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 84306751,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSplitterPane",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSplitterPane component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSplitterPane"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Collapsible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenSplitterPane\" /> is collapsible.\n            </summary>\n            <value><c>true</c> if collapsible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Collapsible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Collapsed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenSplitterPane\" /> is collapsed.\n            </summary>\n            <value><c>true</c> if collapsed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Collapsed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resizable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenSplitterPane\" /> is resizable.\n            </summary>\n            <value><c>true</c> if resizable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resizable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Determines the maximum value.\n            </summary>\n            <value>The maximum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Determines the minimum value.\n            </summary>\n            <value>The minimum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the size.\n            </summary>\n            <value>The size.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSplitterPane"
        }
      },
      {
        "HashCode": 1927871498,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSplitterPane",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSplitterPane component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSplitterPane"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Collapsible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenSplitterPane\" /> is collapsible.\n            </summary>\n            <value><c>true</c> if collapsible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Collapsible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Collapsed",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenSplitterPane\" /> is collapsed.\n            </summary>\n            <value><c>true</c> if collapsed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Collapsed"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resizable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenSplitterPane\" /> is resizable.\n            </summary>\n            <value><c>true</c> if resizable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resizable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Determines the maximum value.\n            </summary>\n            <value>The maximum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Determines the minimum value.\n            </summary>\n            <value>The minimum value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the size.\n            </summary>\n            <value>The size.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSplitterPane",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 84786529,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSplitterPane.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenSplitterPane"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSplitterPane.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 380679078,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSplitterPane.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenSplitterPane"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSplitterPane.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1910101838,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSSRSViewer",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSSRSViewer component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSSRSViewer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "UseProxy",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to use proxy.\n            </summary>\n            <value><c>true</c> if proxy is enabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "UseProxy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReportServer",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the report server URL.\n            </summary>\n            <value>The report server URL.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReportServer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LocalServer",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the local server URL.\n            </summary>\n            <value>The local server URL.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LocalServer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReportName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the report.\n            </summary>\n            <value>The name of the report.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReportName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Parameters",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the parameters.\n            </summary>\n            <value>The parameters.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Parameters",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Load",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load callback.\n            </summary>\n            <value>The load callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Load",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSSRSViewer"
        }
      },
      {
        "HashCode": 248980027,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSSRSViewer",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSSRSViewer component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSSRSViewer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "UseProxy",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to use proxy.\n            </summary>\n            <value><c>true</c> if proxy is enabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "UseProxy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReportServer",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the report server URL.\n            </summary>\n            <value>The report server URL.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReportServer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LocalServer",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the local server URL.\n            </summary>\n            <value>The local server URL.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LocalServer"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReportName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the report.\n            </summary>\n            <value>The name of the report.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReportName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Parameters",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the parameters.\n            </summary>\n            <value>The parameters.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Parameters",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Load",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load callback.\n            </summary>\n            <value>The load callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Load",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSSRSViewer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1634959292,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSSRSViewer.Parameters",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the parameters.\n            </summary>\n            <value>The parameters.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Parameters",
            "ParentTag": "RadzenSSRSViewer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSSRSViewer.Parameters",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -217123813,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSSRSViewer.Parameters",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the parameters.\n            </summary>\n            <value>The parameters.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Parameters",
            "ParentTag": "Radzen.Blazor.RadzenSSRSViewer"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSSRSViewer.Parameters",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1011595818,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSSRSViewerParameter",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSSRSViewerParameter component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSSRSViewerParameter"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ParameterName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the parameter.\n            </summary>\n            <value>The name of the parameter.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParameterName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSSRSViewerParameter"
        }
      },
      {
        "HashCode": 516236078,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSSRSViewerParameter",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSSRSViewerParameter component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSSRSViewerParameter"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ParameterName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name of the parameter.\n            </summary>\n            <value>The name of the parameter.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParameterName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSSRSViewerParameter",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -596813529,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSteps",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSteps component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenSteps Change=@(args =&gt; Console.WriteLine($\"Selected index is: {args}\"))&gt;\n                &lt;Steps&gt;\n                    &lt;RadzenStepsItem Text=\"Orders\"&gt;\n                        Details for Orders\n                    &lt;/RadzenStepsItem&gt;\n                    &lt;RadzenStepsItem Text=\"Employees\"&gt;\n                        Details for Employees\n                    &lt;/RadzenStepsItem&gt;\n                &lt;/Steps&gt;\n            &lt;/RadzenTabs&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSteps"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ShowStepsButtons",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to show steps buttons.\n            </summary>\n            <value><c>true</c> if steps buttons are shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowStepsButtons"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the selected index.\n            </summary>\n            <value>The selected index.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the selected index changed callback.\n            </summary>\n            <value>The selected index changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the change callback.\n            </summary>\n            <value>The change callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NextText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the next button text.\n            </summary>\n            <value>The next button text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "NextText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PreviousText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the previous button text.\n            </summary>\n            <value>The previous button text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PreviousText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Steps",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the steps.\n            </summary>\n            <value>The steps.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Steps",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSteps"
        }
      },
      {
        "HashCode": 1130630768,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSteps",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSteps component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenSteps Change=@(args =&gt; Console.WriteLine($\"Selected index is: {args}\"))&gt;\n                &lt;Steps&gt;\n                    &lt;RadzenStepsItem Text=\"Orders\"&gt;\n                        Details for Orders\n                    &lt;/RadzenStepsItem&gt;\n                    &lt;RadzenStepsItem Text=\"Employees\"&gt;\n                        Details for Employees\n                    &lt;/RadzenStepsItem&gt;\n                &lt;/Steps&gt;\n            &lt;/RadzenTabs&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSteps"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ShowStepsButtons",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether to show steps buttons.\n            </summary>\n            <value><c>true</c> if steps buttons are shown; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowStepsButtons"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the selected index.\n            </summary>\n            <value>The selected index.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the selected index changed callback.\n            </summary>\n            <value>The selected index changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the change callback.\n            </summary>\n            <value>The change callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NextText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the next button text.\n            </summary>\n            <value>The next button text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "NextText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PreviousText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the previous button text.\n            </summary>\n            <value>The previous button text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PreviousText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Steps",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the steps.\n            </summary>\n            <value>The steps.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Steps",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSteps",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1879480192,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSteps.Steps",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the steps.\n            </summary>\n            <value>The steps.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Steps",
            "ParentTag": "RadzenSteps"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSteps.Steps",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1401618868,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSteps.Steps",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the steps.\n            </summary>\n            <value>The steps.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Steps",
            "ParentTag": "Radzen.Blazor.RadzenSteps"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSteps.Steps",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -287737215,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenStepsItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenStepsItem component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenStepsItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenStepsItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenStepsItem\" /> is selected.\n            </summary>\n            <value><c>true</c> if selected; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenStepsItem\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenStepsItem"
        }
      },
      {
        "HashCode": -583454866,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenStepsItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenStepsItem component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenStepsItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenStepsItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenStepsItem\" /> is selected.\n            </summary>\n            <value><c>true</c> if selected; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenStepsItem\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenStepsItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 4328785,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenStepsItem.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenStepsItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenStepsItem.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2120046618,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenStepsItem.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenStepsItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenStepsItem.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2090504728,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenStepsItem.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenStepsItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenStepsItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 338342522,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenStepsItem.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenStepsItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenStepsItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 762010562,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSwitch",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSwitch component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenSwitch @bind-Value=@value Change=@(args =&gt; Console.WriteLine($\"Value: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSwitch"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSwitch"
        }
      },
      {
        "HashCode": 1612302875,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSwitch",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenSwitch component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenSwitch @bind-Value=@value Change=@(args =&gt; Console.WriteLine($\"Value: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSwitch"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.Boolean>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSwitch",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1129830429,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTabs",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenTabs component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTabs RenderMode=\"TabRenderMode.Client\" Change=@(args =&gt; Console.WriteLine($\"Selected index is: {args}\"))&gt;\n                &lt;Tabs&gt;\n                    &lt;RadzenTabsItem Text=\"Orders\"&gt;\n                        Details for Orders\n                    &lt;/RadzenTabsItem&gt;\n                    &lt;RadzenTabsItem Text=\"Employees\"&gt;\n                        Details for Employees\n                    &lt;/RadzenTabsItem&gt;\n                &lt;/Tabs&gt;\n            &lt;/RadzenTabs&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenTabs"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RenderMode",
            "TypeName": "Radzen.TabRenderMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the render mode.\n            </summary>\n            <value>The render mode.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RenderMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabPosition",
            "TypeName": "Radzen.TabPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the tab position.\n            </summary>\n            <value>The tab position.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the selected index.\n            </summary>\n            <value>The selected index.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the selected index changed callback.\n            </summary>\n            <value>The selected index changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the change callback.\n            </summary>\n            <value>The change callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tabs",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the tabs.\n            </summary>\n            <value>The tabs.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Tabs",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTabs"
        }
      },
      {
        "HashCode": 10883193,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTabs",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenTabs component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTabs RenderMode=\"TabRenderMode.Client\" Change=@(args =&gt; Console.WriteLine($\"Selected index is: {args}\"))&gt;\n                &lt;Tabs&gt;\n                    &lt;RadzenTabsItem Text=\"Orders\"&gt;\n                        Details for Orders\n                    &lt;/RadzenTabsItem&gt;\n                    &lt;RadzenTabsItem Text=\"Employees\"&gt;\n                        Details for Employees\n                    &lt;/RadzenTabsItem&gt;\n                &lt;/Tabs&gt;\n            &lt;/RadzenTabs&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenTabs"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "RenderMode",
            "TypeName": "Radzen.TabRenderMode",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the render mode.\n            </summary>\n            <value>The render mode.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "RenderMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabPosition",
            "TypeName": "Radzen.TabPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the tab position.\n            </summary>\n            <value>The tab position.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the selected index.\n            </summary>\n            <value>The selected index.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectedIndexChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the selected index changed callback.\n            </summary>\n            <value>The selected index changed callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SelectedIndexChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the change callback.\n            </summary>\n            <value>The change callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Tabs",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the tabs.\n            </summary>\n            <value>The tabs.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Tabs",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTabs",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1410568023,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenTabs.Tabs",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the tabs.\n            </summary>\n            <value>The tabs.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Tabs",
            "ParentTag": "RadzenTabs"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenTabs.Tabs",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1442729886,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenTabs.Tabs",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the tabs.\n            </summary>\n            <value>The tabs.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Tabs",
            "ParentTag": "Radzen.Blazor.RadzenTabs"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenTabs.Tabs",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -290005277,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTabsItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenTabsItem component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenTabsItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the arbitrary attributes.\n            </summary>\n            <value>The arbitrary attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenTabsItem\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenTabsItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenTabsItem\" /> is selected.\n            </summary>\n            <value><c>true</c> if selected; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenTabsItem\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTabsItem"
        }
      },
      {
        "HashCode": -1144940638,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTabsItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenTabsItem component.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenTabsItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the arbitrary attributes.\n            </summary>\n            <value>The arbitrary attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenTabsItem\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text.\n            </summary>\n            <value>The text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenTabsItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenTabsItem\" /> is selected.\n            </summary>\n            <value><c>true</c> if selected; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenTabsItem\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTabsItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2121364726,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenTabsItem.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenTabsItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenTabsItem.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2001879782,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenTabsItem.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenTabsItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenTabsItem.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -415610805,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenTabsItem.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenTabsItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenTabsItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -846639853,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenTabsItem.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenTabsItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenTabsItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1217646309,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTemplateForm<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n             <summary>\n             A component which represents a <c>form</c>. Provides validation support.\n             </summary>\n             <example>\n             <code>\n             &lt;RadzenTemplateForm TItem=\"Model\" Data=@model&gt;\n               &lt;RadzenTextBox style=\"display: block\" Name=\"Email\" @bind-Value=@model.Email /&gt;\n               &lt;RadzenRequiredValidator Component=\"Email\" Text=\"Email is required\" Style=\"position: absolute\" /&gt;\n             &lt;/RadzenTemplateForm&gt;\n             @code {\n              class Model\n              {\n                public string Email { get; set; }\n              }\n            \n              Model model = new Model();\n             }\n             </code>\n             </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenTemplateForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenTemplateForm<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "TItem",
            "Documentation": "\n            <summary>\n            Specifies the model of the form. Required to support validation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Submit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the user submits the form and <see cref=\"P:Radzen.Blazor.RadzenTemplateForm`1.IsValid\" /> is <c>true</c>.\n             </summary>\n             <example>\n             <code>\n             &lt;RadzenTemplateForm TItem=\"Model\" Submit=@OnSubmit Data=@model&gt;\n               &lt;RadzenTextBox style=\"display: block\" Name=\"Email\" @bind-Value=@model.Email /&gt;\n               &lt;RadzenRequiredValidator Component=\"Email\" Text=\"Email is required\" Style=\"position: absolute\" /&gt;\n             &lt;/RadzenTemplateForm&gt;\n             @code {\n              class Model\n               {\n                public string Email { get; set; }\n              }\n            \n              Model model = new Model();\n            \n              void OnSubmit(Model value)\n              {\n            \n              }\n             }\n             </code>\n             </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Submit",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.FormInvalidSubmitEventArgs>",
            "Documentation": "\n            <summary>\n            Obsolete. Use <see cref=\"P:Radzen.Blazor.RadzenTemplateForm`1.InvalidSubmit\" /> instead.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.FormInvalidSubmitEventArgs>",
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the user submits the form and <see cref=\"P:Radzen.Blazor.RadzenTemplateForm`1.IsValid\" /> is <c>false</c>.\n             </summary>\n             <example>\n             <code>\n             &lt;RadzenTemplateForm TItem=\"Model\" InvalidSubmit=@OnInvalidSubmit Data=@model&gt;\n               &lt;RadzenTextBox style=\"display: block\" Name=\"Email\" @bind-Value=@model.Email /&gt;\n               &lt;RadzenRequiredValidator Component=\"Email\" Text=\"Email is required\" Style=\"position: absolute\" /&gt;\n             &lt;/RadzenTemplateForm&gt;\n             @code {\n              class Model\n              {\n                public string Email { get; set; }\n              }\n            \n              Model model = new Model();\n            \n              void OnInvalidSubmit(FormInvalidSubmitEventArgs args)\n              {\n            \n              }\n             }\n             </code>\n             </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "InvalidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Method",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the form <c>method</c> attribute. Used together with <see cref=\"P:Radzen.Blazor.RadzenTemplateForm`1.Action\" />.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTemplateForm TItem=\"Model\" Method=\"post\" Action=\"/register\" Data=@model&gt;\n              &lt;RadzenTextBox style=\"display: block\" Name=\"Email\" @bind-Value=@model.Email /&gt;\n              &lt;RadzenRequiredValidator Component=\"Email\" Text=\"Email is required\" Style=\"position: absolute\" /&gt;\n            &lt;/RadzenTemplateForm&gt;\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Method"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Action",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the form <c>action</c> attribute. When set the form submits to the specified URL.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTemplateForm TItem=\"Model\" Method=\"post\" Action=\"/register\" Data=@model&gt;\n              &lt;RadzenTextBox style=\"display: block\" Name=\"Email\" @bind-Value=@model.Email /&gt;\n              &lt;RadzenRequiredValidator Component=\"Email\" Text=\"Email is required\" Style=\"position: absolute\" /&gt;\n            &lt;/RadzenTemplateForm&gt;\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Action"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Documentation": "\n            <summary>\n            Gets or sets the edit context.\n            </summary>\n            <value>The edit context.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTemplateForm<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 2138041735,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTemplateForm<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n             <summary>\n             A component which represents a <c>form</c>. Provides validation support.\n             </summary>\n             <example>\n             <code>\n             &lt;RadzenTemplateForm TItem=\"Model\" Data=@model&gt;\n               &lt;RadzenTextBox style=\"display: block\" Name=\"Email\" @bind-Value=@model.Email /&gt;\n               &lt;RadzenRequiredValidator Component=\"Email\" Text=\"Email is required\" Style=\"position: absolute\" /&gt;\n             &lt;/RadzenTemplateForm&gt;\n             @code {\n              class Model\n              {\n                public string Email { get; set; }\n              }\n            \n              Model model = new Model();\n             }\n             </code>\n             </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenTemplateForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenTemplateForm<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "TItem",
            "Documentation": "\n            <summary>\n            Specifies the model of the form. Required to support validation.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Microsoft.AspNetCore.Components.Forms.EditContext>",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Submit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the user submits the form and <see cref=\"P:Radzen.Blazor.RadzenTemplateForm`1.IsValid\" /> is <c>true</c>.\n             </summary>\n             <example>\n             <code>\n             &lt;RadzenTemplateForm TItem=\"Model\" Submit=@OnSubmit Data=@model&gt;\n               &lt;RadzenTextBox style=\"display: block\" Name=\"Email\" @bind-Value=@model.Email /&gt;\n               &lt;RadzenRequiredValidator Component=\"Email\" Text=\"Email is required\" Style=\"position: absolute\" /&gt;\n             &lt;/RadzenTemplateForm&gt;\n             @code {\n              class Model\n               {\n                public string Email { get; set; }\n              }\n            \n              Model model = new Model();\n            \n              void OnSubmit(Model value)\n              {\n            \n              }\n             }\n             </code>\n             </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Submit",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OnInvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.FormInvalidSubmitEventArgs>",
            "Documentation": "\n            <summary>\n            Obsolete. Use <see cref=\"P:Radzen.Blazor.RadzenTemplateForm`1.InvalidSubmit\" /> instead.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "OnInvalidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InvalidSubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.FormInvalidSubmitEventArgs>",
            "Documentation": "\n             <summary>\n             A callback that will be invoked when the user submits the form and <see cref=\"P:Radzen.Blazor.RadzenTemplateForm`1.IsValid\" /> is <c>false</c>.\n             </summary>\n             <example>\n             <code>\n             &lt;RadzenTemplateForm TItem=\"Model\" InvalidSubmit=@OnInvalidSubmit Data=@model&gt;\n               &lt;RadzenTextBox style=\"display: block\" Name=\"Email\" @bind-Value=@model.Email /&gt;\n               &lt;RadzenRequiredValidator Component=\"Email\" Text=\"Email is required\" Style=\"position: absolute\" /&gt;\n             &lt;/RadzenTemplateForm&gt;\n             @code {\n              class Model\n              {\n                public string Email { get; set; }\n              }\n            \n              Model model = new Model();\n            \n              void OnInvalidSubmit(FormInvalidSubmitEventArgs args)\n              {\n            \n              }\n             }\n             </code>\n             </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "InvalidSubmit",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Method",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the form <c>method</c> attribute. Used together with <see cref=\"P:Radzen.Blazor.RadzenTemplateForm`1.Action\" />.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTemplateForm TItem=\"Model\" Method=\"post\" Action=\"/register\" Data=@model&gt;\n              &lt;RadzenTextBox style=\"display: block\" Name=\"Email\" @bind-Value=@model.Email /&gt;\n              &lt;RadzenRequiredValidator Component=\"Email\" Text=\"Email is required\" Style=\"position: absolute\" /&gt;\n            &lt;/RadzenTemplateForm&gt;\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Method"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Action",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the form <c>action</c> attribute. When set the form submits to the specified URL.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTemplateForm TItem=\"Model\" Method=\"post\" Action=\"/register\" Data=@model&gt;\n              &lt;RadzenTextBox style=\"display: block\" Name=\"Email\" @bind-Value=@model.Email /&gt;\n              &lt;RadzenRequiredValidator Component=\"Email\" Text=\"Email is required\" Style=\"position: absolute\" /&gt;\n            &lt;/RadzenTemplateForm&gt;\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Action"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Documentation": "\n            <summary>\n            Gets or sets the edit context.\n            </summary>\n            <value>The edit context.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTemplateForm<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1972498016,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenTemplateForm<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenTemplateForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenTemplateForm<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -640669558,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenTemplateForm<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenTemplateForm"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenTemplateForm<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 268604834,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenText",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A component which displays text or makup with predefined styling.\n            </summary>\n            <example>\n              <code>\n            &lt;RadzenText TextStyle=\"TextStyle.H1\"&gt;\n             Hello World\n            &lt;/RadzenText&gt;\n              </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The text that will be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The child content (markup) that will be displayed. Setting the <see cref=\"P:Radzen.Blazor.RadzenText.Text\" /> property will override it.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextStyle",
            "TypeName": "Radzen.Blazor.TextStyle",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            The style of the text. Set to <see cref=\"F:Radzen.Blazor.TextStyle.Body1\" /> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlign",
            "TypeName": "Radzen.TextAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            The horozontal alignment of the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TagName",
            "TypeName": "Radzen.Blazor.TagName",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            The tag name of the element that will be rendered. Set to <see cref=\"F:Radzen.Blazor.TagName.Auto\" /> which uses a default tag name depending on the current <see cref=\"P:Radzen.Blazor.RadzenText.TextStyle\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TagName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenText"
        }
      },
      {
        "HashCode": -2097396363,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenText",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A component which displays text or makup with predefined styling.\n            </summary>\n            <example>\n              <code>\n            &lt;RadzenText TextStyle=\"TextStyle.H1\"&gt;\n             Hello World\n            &lt;/RadzenText&gt;\n              </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenText"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            The text that will be displayed.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            The child content (markup) that will be displayed. Setting the <see cref=\"P:Radzen.Blazor.RadzenText.Text\" /> property will override it.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextStyle",
            "TypeName": "Radzen.Blazor.TextStyle",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            The style of the text. Set to <see cref=\"F:Radzen.Blazor.TextStyle.Body1\" /> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlign",
            "TypeName": "Radzen.TextAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            The horozontal alignment of the text.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TagName",
            "TypeName": "Radzen.Blazor.TagName",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            The tag name of the element that will be rendered. Set to <see cref=\"F:Radzen.Blazor.TagName.Auto\" /> which uses a default tag name depending on the current <see cref=\"P:Radzen.Blazor.RadzenText.TextStyle\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TagName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -233697673,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenText.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            The child content (markup) that will be displayed. Setting the <see cref=\"P:Radzen.Blazor.RadzenText.Text\" /> property will override it.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 501633287,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenText.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            The child content (markup) that will be displayed. Setting the <see cref=\"P:Radzen.Blazor.RadzenText.Text\" /> property will override it.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenText"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenText.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1912853355,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTextArea",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenTextArea component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTextArea Cols=\"30\" Rows=\"3\" @bind-Value=@value Change=@(args =&gt; Console.WriteLine($\"Value: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenTextArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "MaxLength",
            "TypeName": "System.Int64?",
            "Documentation": "\n            <summary>\n            Gets or sets the maximum length.\n            </summary>\n            <value>The maximum length.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether is read only.\n            </summary>\n            <value><c>true</c> if is read only; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rows",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the number of rows.\n            </summary>\n            <value>The number of rows.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rows"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Cols",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the number of cols.\n            </summary>\n            <value>The number of cols.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Cols"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTextArea"
        }
      },
      {
        "HashCode": 1187910894,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTextArea",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            RadzenTextArea component.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTextArea Cols=\"30\" Rows=\"3\" @bind-Value=@value Change=@(args =&gt; Console.WriteLine($\"Value: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenTextArea"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "MaxLength",
            "TypeName": "System.Int64?",
            "Documentation": "\n            <summary>\n            Gets or sets the maximum length.\n            </summary>\n            <value>The maximum length.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether is read only.\n            </summary>\n            <value><c>true</c> if is read only; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Rows",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the number of rows.\n            </summary>\n            <value>The number of rows.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Rows"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Cols",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the number of cols.\n            </summary>\n            <value>The number of cols.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Cols"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTextArea",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 290565207,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTextBox",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            An input component for single line text entry.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTextBox @bind-Value=@value Change=@(args =&gt; Console.WriteLine($\"Value: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenTextBox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether is read only.\n            </summary>\n            <value><c>true</c> if is read only; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AutoComplete",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating the browser built-in autocomplete is enabled.\n            </summary>\n            <value><c>true</c> if input automatic complete is enabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AutoComplete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxLength",
            "TypeName": "System.Int64?",
            "Documentation": "\n            <summary>\n            Gets or sets the maximum allowed text length.\n            </summary>\n            <value>The maximum length.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Trim",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to remove any leading or trailing whitespace from the value. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if trimming is enabled; otherwise, <c>false</c>. </value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Trim"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTextBox"
        }
      },
      {
        "HashCode": -152916935,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTextBox",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            An input component for single line text entry.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTextBox @bind-Value=@value Change=@(args =&gt; Console.WriteLine($\"Value: {args}\")) /&gt;\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenTextBox"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ReadOnly",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether is read only.\n            </summary>\n            <value><c>true</c> if is read only; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ReadOnly"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AutoComplete",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating the browser built-in autocomplete is enabled.\n            </summary>\n            <value><c>true</c> if input automatic complete is enabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AutoComplete"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxLength",
            "TypeName": "System.Int64?",
            "Documentation": "\n            <summary>\n            Gets or sets the maximum allowed text length.\n            </summary>\n            <value>The maximum length.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MaxLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Trim",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to remove any leading or trailing whitespace from the value. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if trimming is enabled; otherwise, <c>false</c>. </value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Trim"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the name.\n            </summary>\n            <value>The name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TabIndex",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the index of the tab.\n            </summary>\n            <value>The index of the tab.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TabIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the placeholder.\n            </summary>\n            <value>The placeholder.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.FormComponent`1\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the value changed.\n            </summary>\n            <value>The value changed.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the value.\n            </summary>\n            <value>The value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets the change.\n            </summary>\n            <value>The change.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueExpression",
            "TypeName": "System.Linq.Expressions.Expression<System.Func<System.String>>",
            "Documentation": "\n            <summary>\n            Gets or sets the value expression.\n            </summary>\n            <value>The value expression.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueExpression"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTextBox",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1755141093,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTicks",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Tick configuration of <see cref=\"T:Radzen.Blazor.IChartAxis\" />. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenTicks"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the ticks lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width of the tick lines. Set to <c>1</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of line used to render the ticks.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.TickTemplateContext>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTicks"
        }
      },
      {
        "HashCode": -2087466727,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTicks",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Tick configuration of <see cref=\"T:Radzen.Blazor.IChartAxis\" />. \n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenTicks"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the ticks lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the width of the tick lines. Set to <c>1</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of line used to render the ticks.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.TickTemplateContext>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTicks",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2095096799,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenTicks.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenTicks"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenTicks.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1286185040,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenTicks.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenTicks"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenTicks.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1165395553,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTree",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A component which displays a hierarchy of items. Supports inline definition and data-binding.\n            </summary>\n            <example>\n              <code>\n            &lt;RadzenTree&gt;\n                &lt;RadzenTreeItem Text=\"BMW\"&gt;\n                    &lt;RadzenTreeItem Text=\"M3\" /&gt;\n                    &lt;RadzenTreeItem Text=\"M5\" /&gt;\n                &lt;/RadzenTreeItem&gt;\n                &lt;RadzenTreeItem Text=\"Audi\"&gt;\n                    &lt;RadzenTreeItem Text=\"RS4\" /&gt;\n                    &lt;RadzenTreeItem Text=\"RS6\" /&gt;\n                &lt;/RadzenTreeItem&gt;\n                &lt;RadzenTreeItem Text=\"Mercedes\"&gt;\n                    &lt;RadzenTreeItem Text=\"C63 AMG\" /&gt;\n                    &lt;RadzenTreeItem Text=\"S63 AMG\" /&gt;\n                &lt;/RadzenTreeItem&gt;\n            &lt;/RadzenTree&gt;\n              </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenTree"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.TreeEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user selects an item.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTree Change=@OnChange&gt;\n                &lt;RadzenTreeItem Text=\"BMW\"&gt;\n                    &lt;RadzenTreeItem Text=\"M3\" /&gt;\n                    &lt;RadzenTreeItem Text=\"M5\" /&gt;\n                &lt;/RadzenTreeItem&gt;\n                &lt;RadzenTreeItem Text=\"Audi\"&gt;\n                    &lt;RadzenTreeItem Text=\"RS4\" /&gt;\n                    &lt;RadzenTreeItem Text=\"RS6\" /&gt;\n                &lt;/RadzenTreeItem&gt;\n                &lt;RadzenTreeItem Text=\"Mercedes\"&gt;\n                    &lt;RadzenTreeItem Text=\"C63 AMG\" /&gt;\n                    &lt;RadzenTreeItem Text=\"S63 AMG\" /&gt;\n                &lt;/RadzenTreeItem&gt;\n            &lt;/RadzenTree&gt;\n            @code {\n              void OnChange(TreeEventArgs args) \n              {\n            \n              }\n            }\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expand",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.TreeExpandEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user expands an item.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTree Expand=@OnExpand&gt;\n                &lt;RadzenTreeItem Text=\"BMW\"&gt;\n                    &lt;RadzenTreeItem Text=\"M3\" /&gt;\n                    &lt;RadzenTreeItem Text=\"M5\" /&gt;\n                &lt;/RadzenTreeItem&gt;\n                &lt;RadzenTreeItem Text=\"Audi\"&gt;\n                    &lt;RadzenTreeItem Text=\"RS4\" /&gt;\n                    &lt;RadzenTreeItem Text=\"RS6\" /&gt;\n                &lt;/RadzenTreeItem&gt;\n                &lt;RadzenTreeItem Text=\"Mercedes\"&gt;\n                    &lt;RadzenTreeItem Text=\"C63 AMG\" /&gt;\n                    &lt;RadzenTreeItem Text=\"S63 AMG\" /&gt;\n                &lt;/RadzenTreeItem&gt;\n            &lt;/RadzenTree&gt;\n            @code {\n              void OnExpand(TreeExpandEventArgs args) \n              {\n            \n              }\n            }\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expand",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Collapse",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.TreeEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user collapse an item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Collapse",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Specifies the collection of data items which RadzenTree will create its items from.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the selected value. Use with <c>@bind-Value</c> to sync it with a property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            A callback which will be invoked when <see cref=\"P:Radzen.Blazor.RadzenTree.Value\" /> changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowCheckBoxes",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether RadzenTree displays check boxes. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if check boxes are displayed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowCheckBoxes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowCheckChildren",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies what happens when a parent item is checked. If set to <c>true</c> checking parent items also checks all of its children.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowCheckChildren"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowCheckParents",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies what happens with a parent item when one of its children is checked. If set to <c>true</c> checking a child item will affect the checked state of its parents.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowCheckParents"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SingleExpand",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether siblings items are collapsed. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SingleExpand"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CheckedValues",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the checked values. Use with <c>@bind-CheckedValues</c> to sync it with a property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CheckedValues"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CheckedValuesChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<System.Object>>",
            "Documentation": "\n            <summary>\n            A callback which will be invoked when <see cref=\"P:Radzen.Blazor.RadzenTree.CheckedValues\" /> changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CheckedValuesChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTree"
        }
      },
      {
        "HashCode": 1275361306,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTree",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A component which displays a hierarchy of items. Supports inline definition and data-binding.\n            </summary>\n            <example>\n              <code>\n            &lt;RadzenTree&gt;\n                &lt;RadzenTreeItem Text=\"BMW\"&gt;\n                    &lt;RadzenTreeItem Text=\"M3\" /&gt;\n                    &lt;RadzenTreeItem Text=\"M5\" /&gt;\n                &lt;/RadzenTreeItem&gt;\n                &lt;RadzenTreeItem Text=\"Audi\"&gt;\n                    &lt;RadzenTreeItem Text=\"RS4\" /&gt;\n                    &lt;RadzenTreeItem Text=\"RS6\" /&gt;\n                &lt;/RadzenTreeItem&gt;\n                &lt;RadzenTreeItem Text=\"Mercedes\"&gt;\n                    &lt;RadzenTreeItem Text=\"C63 AMG\" /&gt;\n                    &lt;RadzenTreeItem Text=\"S63 AMG\" /&gt;\n                &lt;/RadzenTreeItem&gt;\n            &lt;/RadzenTree&gt;\n              </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenTree"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.TreeEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user selects an item.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTree Change=@OnChange&gt;\n                &lt;RadzenTreeItem Text=\"BMW\"&gt;\n                    &lt;RadzenTreeItem Text=\"M3\" /&gt;\n                    &lt;RadzenTreeItem Text=\"M5\" /&gt;\n                &lt;/RadzenTreeItem&gt;\n                &lt;RadzenTreeItem Text=\"Audi\"&gt;\n                    &lt;RadzenTreeItem Text=\"RS4\" /&gt;\n                    &lt;RadzenTreeItem Text=\"RS6\" /&gt;\n                &lt;/RadzenTreeItem&gt;\n                &lt;RadzenTreeItem Text=\"Mercedes\"&gt;\n                    &lt;RadzenTreeItem Text=\"C63 AMG\" /&gt;\n                    &lt;RadzenTreeItem Text=\"S63 AMG\" /&gt;\n                &lt;/RadzenTreeItem&gt;\n            &lt;/RadzenTree&gt;\n            @code {\n              void OnChange(TreeEventArgs args) \n              {\n            \n              }\n            }\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expand",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.TreeExpandEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user expands an item.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTree Expand=@OnExpand&gt;\n                &lt;RadzenTreeItem Text=\"BMW\"&gt;\n                    &lt;RadzenTreeItem Text=\"M3\" /&gt;\n                    &lt;RadzenTreeItem Text=\"M5\" /&gt;\n                &lt;/RadzenTreeItem&gt;\n                &lt;RadzenTreeItem Text=\"Audi\"&gt;\n                    &lt;RadzenTreeItem Text=\"RS4\" /&gt;\n                    &lt;RadzenTreeItem Text=\"RS6\" /&gt;\n                &lt;/RadzenTreeItem&gt;\n                &lt;RadzenTreeItem Text=\"Mercedes\"&gt;\n                    &lt;RadzenTreeItem Text=\"C63 AMG\" /&gt;\n                    &lt;RadzenTreeItem Text=\"S63 AMG\" /&gt;\n                &lt;/RadzenTreeItem&gt;\n            &lt;/RadzenTree&gt;\n            @code {\n              void OnExpand(TreeExpandEventArgs args) \n              {\n            \n              }\n            }\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expand",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Collapse",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.TreeEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user collapse an item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Collapse",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            Specifies the collection of data items which RadzenTree will create its items from.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the selected value. Use with <c>@bind-Value</c> to sync it with a property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "\n            <summary>\n            A callback which will be invoked when <see cref=\"P:Radzen.Blazor.RadzenTree.Value\" /> changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowCheckBoxes",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether RadzenTree displays check boxes. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if check boxes are displayed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowCheckBoxes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowCheckChildren",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies what happens when a parent item is checked. If set to <c>true</c> checking parent items also checks all of its children.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowCheckChildren"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowCheckParents",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies what happens with a parent item when one of its children is checked. If set to <c>true</c> checking a child item will affect the checked state of its parents.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowCheckParents"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SingleExpand",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether siblings items are collapsed. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "SingleExpand"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CheckedValues",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Object>",
            "Documentation": "\n            <summary>\n            Gets or sets the checked values. Use with <c>@bind-CheckedValues</c> to sync it with a property.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CheckedValues"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CheckedValuesChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<System.Object>>",
            "Documentation": "\n            <summary>\n            A callback which will be invoked when <see cref=\"P:Radzen.Blazor.RadzenTree.CheckedValues\" /> changes.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "CheckedValuesChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTree",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1779767766,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenTree.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenTree"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenTree.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -233584829,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenTree.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenTree"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenTree.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1310102797,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTreeItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A component which is an item in a <see cref=\"T:Radzen.Blazor.RadzenTree\" />\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenTreeItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenTreeItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template. Use it to customize the appearance of a tree item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text displayed by the tree item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether this item is expanded. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the tree item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HasChildren",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this instance has children.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HasChildren"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether this item is selected or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            The children data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTreeItem"
        }
      },
      {
        "HashCode": -782424212,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTreeItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            A component which is an item in a <see cref=\"T:Radzen.Blazor.RadzenTree\" />\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenTreeItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenTreeItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template. Use it to customize the appearance of a tree item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the text displayed by the tree item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether this item is expanded. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expanded"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the value of the tree item.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HasChildren",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this instance has children.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "HasChildren"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether this item is selected or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.IEnumerable",
            "Documentation": "\n            <summary>\n            The children data.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTreeItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -521765749,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenTreeItem.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenTreeItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenTreeItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1502401939,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenTreeItem.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenTreeItem"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenTreeItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -91359727,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenTreeItem.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template. Use it to customize the appearance of a tree item.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenTreeItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenTreeItem.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 207034826,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenTreeItem.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template. Use it to customize the appearance of a tree item.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenTreeItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenTreeItem.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1298316962,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTreeLevel",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Configures a level of nodes in a <see cref=\"T:Radzen.Blazor.RadzenTree\" /> during data-binding.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTree Data=@rootEmployees&gt;\n                &lt;RadzenTreeLevel TextProperty=\"LastName\" ChildrenProperty=\"Employees1\"  HasChildren=@(e =&gt; (e as Employee).Employees1.Any()) /&gt;\n            &lt;/RadzenTree&gt;\n            @code {\n             IEnumerable&lt;Employee&gt; rootEmployees; \n             protected override void OnInitialized()\n             {\n                rootEmployees = NorthwindDbContext.Employees.Where(e =&gt; e.ReportsTo == null);\n             }\n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenTreeLevel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the name of the property which provides values for the <see cref=\"P:Radzen.Blazor.RadzenTreeItem.Text\" /> property of the child items.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildrenProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the name of the property which returns child data. The value returned by that property should be IEnumerable\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildrenProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HasChildren",
            "TypeName": "System.Func<System.Object, System.Boolean>",
            "Documentation": "\n            <summary>\n            Determines if a child item has children or not. Set to <c>value =&gt; true</c> by default.\n            </summary>\n            <example>\n            <code>\n                &lt;RadzenTreeLevel HasChildren=@(e =&gt; (e as Employee).Employees1.Any()) /&gt;\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "HasChildren",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Func<System.Object, System.Boolean>",
            "Documentation": "\n            <summary>\n            Determines if a child item is expanded or not. Set to <c>value =&gt; false</c> by default.\n            </summary>\n            <example>\n            <code>\n                &lt;RadzenTreeLevel Expanded=@(e =&gt; (e as Employee).Employees1.Any()) /&gt;\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expanded",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Func<System.Object, System.Boolean>",
            "Documentation": "\n            <summary>\n            Determines if a child item is selected or not. Set to <c>value =&gt; false</c> by default.\n            </summary>\n            <example>\n            <code>\n                &lt;RadzenTreeLevel Selected=@(e =&gt; (e as Employee).LastName == \"Fuller\") /&gt;\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selected",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.Func<System.Object, System.String>",
            "Documentation": "\n            <summary>\n            Determines the text of a child item.\n            </summary>\n            <example>\n            <code>\n                &lt;RadzenTreeLevel Text=@(e =&gt; (e as Employee).LastName) /&gt;\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenTreeItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTreeLevel"
        }
      },
      {
        "HashCode": -1044403141,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTreeLevel",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Configures a level of nodes in a <see cref=\"T:Radzen.Blazor.RadzenTree\" /> during data-binding.\n            </summary>\n            <example>\n            <code>\n            &lt;RadzenTree Data=@rootEmployees&gt;\n                &lt;RadzenTreeLevel TextProperty=\"LastName\" ChildrenProperty=\"Employees1\"  HasChildren=@(e =&gt; (e as Employee).Employees1.Any()) /&gt;\n            &lt;/RadzenTree&gt;\n            @code {\n             IEnumerable&lt;Employee&gt; rootEmployees; \n             protected override void OnInitialized()\n             {\n                rootEmployees = NorthwindDbContext.Employees.Where(e =&gt; e.ReportsTo == null);\n             }\n            }\n            </code>\n            </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenTreeLevel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TextProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the name of the property which provides values for the <see cref=\"P:Radzen.Blazor.RadzenTreeItem.Text\" /> property of the child items.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildrenProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the name of the property which returns child data. The value returned by that property should be IEnumerable\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildrenProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HasChildren",
            "TypeName": "System.Func<System.Object, System.Boolean>",
            "Documentation": "\n            <summary>\n            Determines if a child item has children or not. Set to <c>value =&gt; true</c> by default.\n            </summary>\n            <example>\n            <code>\n                &lt;RadzenTreeLevel HasChildren=@(e =&gt; (e as Employee).Employees1.Any()) /&gt;\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "HasChildren",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Expanded",
            "TypeName": "System.Func<System.Object, System.Boolean>",
            "Documentation": "\n            <summary>\n            Determines if a child item is expanded or not. Set to <c>value =&gt; false</c> by default.\n            </summary>\n            <example>\n            <code>\n                &lt;RadzenTreeLevel Expanded=@(e =&gt; (e as Employee).Employees1.Any()) /&gt;\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Expanded",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Func<System.Object, System.Boolean>",
            "Documentation": "\n            <summary>\n            Determines if a child item is selected or not. Set to <c>value =&gt; false</c> by default.\n            </summary>\n            <example>\n            <code>\n                &lt;RadzenTreeLevel Selected=@(e =&gt; (e as Employee).LastName == \"Fuller\") /&gt;\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Selected",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.Func<System.Object, System.String>",
            "Documentation": "\n            <summary>\n            Determines the text of a child item.\n            </summary>\n            <example>\n            <code>\n                &lt;RadzenTreeLevel Text=@(e =&gt; (e as Employee).LastName) /&gt;\n            </code>\n            </example>\n        ",
            "Metadata": {
              "Common.PropertyName": "Text",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenTreeItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTreeLevel",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -432139615,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenTreeLevel.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenTreeLevel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenTreeLevel.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -793179808,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenTreeLevel.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenTreeLevel"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenTreeLevel.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1239715385,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenUpload",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n             <summary>\n             RadzenUpload component.\n             </summary>\n             <example>\n             <code>\n             &lt;RadzenUpload Url=\"upload/single\" Progress=@(args =&gt; OnProgress(args, \"Single file upload\"))/&gt;\n             @code {\n              void OnProgress(UploadProgressArgs args, string name)\n              {\n                this.info = $\"% '{name}' / {args.Loaded} of {args.Total} bytes.\";\n                this.progress = args.Progress;\n                if (args.Progress == 100)\n                {\n                    console.Clear();\n            \n                    foreach (var file in args.Files)\n                    {\n                        console.Log($\"Uploaded: {file.Name} / {file.Size} bytes\");\n                    }\n                }\n              }\n             }\n             </code>\n             </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenUpload"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Auto",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenUpload\" /> upload is automatic.\n            </summary>\n            <value><c>true</c> if upload automatic; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Auto"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChooseText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the choose button text.\n            </summary>\n            <value>The choose button text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChooseText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Url",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the URL.\n            </summary>\n            <value>The URL.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Url"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParameterName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the parameter name. If not set 'file' parameter name will be used for single file and 'files' for multiple files.\n            </summary>\n            <value>The parameter name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParameterName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Accept",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the accepted MIME types.\n            </summary>\n            <value>The accepted MIME types.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Accept"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multiple",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenUpload\" /> is multiple.\n            </summary>\n            <value><c>true</c> if multiple; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Multiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenUpload\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.UploadChangeEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the change callback.\n            </summary>\n            <value>The change callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.UploadProgressArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the progress callback.\n            </summary>\n            <value>The progress callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Progress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Complete",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.UploadCompleteEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the complete callback.\n            </summary>\n            <value>The complete callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Complete",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Error",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.UploadErrorEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the error callback.\n            </summary>\n            <value>The error callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Error",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenUpload"
        }
      },
      {
        "HashCode": 347178092,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenUpload",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n             <summary>\n             RadzenUpload component.\n             </summary>\n             <example>\n             <code>\n             &lt;RadzenUpload Url=\"upload/single\" Progress=@(args =&gt; OnProgress(args, \"Single file upload\"))/&gt;\n             @code {\n              void OnProgress(UploadProgressArgs args, string name)\n              {\n                this.info = $\"% '{name}' / {args.Loaded} of {args.Total} bytes.\";\n                this.progress = args.Progress;\n                if (args.Progress == 100)\n                {\n                    console.Clear();\n            \n                    foreach (var file in args.Files)\n                    {\n                        console.Log($\"Uploaded: {file.Name} / {file.Size} bytes\");\n                    }\n                }\n              }\n             }\n             </code>\n             </example>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenUpload"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Auto",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenUpload\" /> upload is automatic.\n            </summary>\n            <value><c>true</c> if upload automatic; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Auto"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChooseText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the choose button text.\n            </summary>\n            <value>The choose button text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChooseText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Url",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the URL.\n            </summary>\n            <value>The URL.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Url"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ParameterName",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the parameter name. If not set 'file' parameter name will be used for single file and 'files' for multiple files.\n            </summary>\n            <value>The parameter name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ParameterName"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Accept",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the accepted MIME types.\n            </summary>\n            <value>The accepted MIME types.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Accept"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Multiple",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenUpload\" /> is multiple.\n            </summary>\n            <value><c>true</c> if multiple; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Multiple"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the icon.\n            </summary>\n            <value>The icon.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenUpload\" /> is disabled.\n            </summary>\n            <value><c>true</c> if disabled; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.UploadChangeEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the change callback.\n            </summary>\n            <value>The change callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Progress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.UploadProgressArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the progress callback.\n            </summary>\n            <value>The progress callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Progress",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Complete",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.UploadCompleteEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the complete callback.\n            </summary>\n            <value>The complete callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Complete",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Error",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.UploadErrorEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the error callback.\n            </summary>\n            <value>The error callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Error",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenUpload",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1696074336,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenUpload.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenUpload"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenUpload.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 812466722,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenUpload.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenUpload"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenUpload.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1024055863,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenWeekView",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays the appointments in a week day in <see cref=\"T:Radzen.Blazor.RadzenScheduler`1\" />\n            </summary>\n            <code>\n            &lt;RadzenScheduler Data=\"@appointments\"&gt;\n                &lt;RadzenWeekView /&gt;\n            &lt;/RadzenScheduler&gt;\n            </code>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenWeekView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the time format.\n            </summary>\n            <value>The time format. Set to <c>h tt</c> by default.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TimeFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartTime",
            "TypeName": "System.TimeSpan",
            "Documentation": "\n            <summary>\n            Gets or sets the start time.\n            </summary>\n            <value>The start time.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndTime",
            "TypeName": "System.TimeSpan",
            "Documentation": "\n            <summary>\n            Gets or sets the end time.\n            </summary>\n            <value>The end time.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EndTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinutesPerSlot",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets slot size in minutes. Set to <c>30</c> by default.\n            </summary>\n            <value>The slot size in minutes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinutesPerSlot"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenWeekView"
        }
      },
      {
        "HashCode": 520571635,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenWeekView",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Displays the appointments in a week day in <see cref=\"T:Radzen.Blazor.RadzenScheduler`1\" />\n            </summary>\n            <code>\n            &lt;RadzenScheduler Data=\"@appointments\"&gt;\n                &lt;RadzenWeekView /&gt;\n            &lt;/RadzenScheduler&gt;\n            </code>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenWeekView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Documentation": "\n            <inheritdoc />\n        ",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the time format.\n            </summary>\n            <value>The time format. Set to <c>h tt</c> by default.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TimeFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartTime",
            "TypeName": "System.TimeSpan",
            "Documentation": "\n            <summary>\n            Gets or sets the start time.\n            </summary>\n            <value>The start time.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StartTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndTime",
            "TypeName": "System.TimeSpan",
            "Documentation": "\n            <summary>\n            Gets or sets the end time.\n            </summary>\n            <value>The end time.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EndTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinutesPerSlot",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets slot size in minutes. Set to <c>30</c> by default.\n            </summary>\n            <value>The slot size in minutes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinutesPerSlot"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenWeekView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -408081544,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenArcGauge",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenArcGauge"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenArcGauge"
        }
      },
      {
        "HashCode": 1188569995,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenArcGauge",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenArcGauge"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenArcGauge",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -184032534,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenArcGauge.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenArcGauge"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenArcGauge.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -664676793,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenArcGauge.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenArcGauge"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenArcGauge.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1175751582,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenCategoryAxis",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenCategoryAxis"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Padding",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Padding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the stroke (line color) of the axis.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the pixel width of axis.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format string used to display the axis values.\n            </summary>\n            <value>The format string.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Formatter",
            "TypeName": "System.Func<System.Object, System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a formatter function that formats the axis values.\n            </summary>\n            <value>The formatter.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Formatter",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the line used to display the axis.\n            </summary>\n            <value>The type of the line.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickDistance",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the pixel distance between axis ticks. It is used to calculate the number of visible ticks depending on the available space. Set to 100 by default;\n            Setting <see cref=\"P:Radzen.Blazor.AxisBase.Step\" /> will override this value.\n            </summary>\n            <value>The desired pixel distance between ticks.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickDistance"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the minimum value of the axis.\n            </summary>\n            <value>The minimum.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the maximum value of the axis.\n            </summary>\n            <value>The maximum.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the step of the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Step"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.AxisBase\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenCategoryAxis"
        }
      },
      {
        "HashCode": 74989517,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenCategoryAxis",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenCategoryAxis"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Padding",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Padding"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the stroke (line color) of the axis.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the pixel width of axis.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format string used to display the axis values.\n            </summary>\n            <value>The format string.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Formatter",
            "TypeName": "System.Func<System.Object, System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a formatter function that formats the axis values.\n            </summary>\n            <value>The formatter.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Formatter",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the line used to display the axis.\n            </summary>\n            <value>The type of the line.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickDistance",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the pixel distance between axis ticks. It is used to calculate the number of visible ticks depending on the available space. Set to 100 by default;\n            Setting <see cref=\"P:Radzen.Blazor.AxisBase.Step\" /> will override this value.\n            </summary>\n            <value>The desired pixel distance between ticks.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickDistance"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the minimum value of the axis.\n            </summary>\n            <value>The minimum.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the maximum value of the axis.\n            </summary>\n            <value>The maximum.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the step of the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Step"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.AxisBase\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenCategoryAxis",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 465988688,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenCategoryAxis.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenCategoryAxis"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenCategoryAxis.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -849745314,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenCategoryAxis.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenCategoryAxis"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenCategoryAxis.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -277733257,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataFilterItem<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDataFilterItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataFilterItem<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataFilter",
            "TypeName": "Radzen.Blazor.RadzenDataFilter<TItem>",
            "Metadata": {
              "Common.PropertyName": "DataFilter",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Parent",
            "TypeName": "Radzen.Blazor.RadzenDataFilterItem<TItem>",
            "Metadata": {
              "Common.PropertyName": "Parent",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Filter",
            "TypeName": "Radzen.CompositeFilterDescriptor",
            "Metadata": {
              "Common.PropertyName": "Filter"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataFilterItem<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1747033702,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataFilterItem<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDataFilterItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataFilterItem<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DataFilter",
            "TypeName": "Radzen.Blazor.RadzenDataFilter<TItem>",
            "Metadata": {
              "Common.PropertyName": "DataFilter",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Parent",
            "TypeName": "Radzen.Blazor.RadzenDataFilterItem<TItem>",
            "Metadata": {
              "Common.PropertyName": "Parent",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Filter",
            "TypeName": "Radzen.CompositeFilterDescriptor",
            "Metadata": {
              "Common.PropertyName": "Filter"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataFilterItem<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1026684504,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataGridCell<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDataGridCell"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataGridCell<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "RowIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Row",
            "TypeName": "Radzen.Blazor.RadzenDataGridRow<TItem>",
            "Metadata": {
              "Common.PropertyName": "Row",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Metadata": {
              "Common.PropertyName": "EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Item",
            "TypeName": "TItem",
            "Metadata": {
              "Common.PropertyName": "Item",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Column",
            "TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>",
            "Metadata": {
              "Common.PropertyName": "Column",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Grid",
            "TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>",
            "Metadata": {
              "Common.PropertyName": "Grid",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridCell<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -203076999,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataGridCell<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDataGridCell"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataGridCell<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "RowIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Row",
            "TypeName": "Radzen.Blazor.RadzenDataGridRow<TItem>",
            "Metadata": {
              "Common.PropertyName": "Row",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Metadata": {
              "Common.PropertyName": "EditContext"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Item",
            "TypeName": "TItem",
            "Metadata": {
              "Common.PropertyName": "Item",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Column",
            "TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>",
            "Metadata": {
              "Common.PropertyName": "Column",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Grid",
            "TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>",
            "Metadata": {
              "Common.PropertyName": "Grid",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridCell<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1728919378,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGridCell<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenDataGridCell"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridCell<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 488541141,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGridCell<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenDataGridCell"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridCell<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1410256036,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataGridFilterMenu<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDataGridFilterMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataGridFilterMenu<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Column",
            "TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>",
            "Metadata": {
              "Common.PropertyName": "Column",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Grid",
            "TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>",
            "Metadata": {
              "Common.PropertyName": "Grid",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridFilterMenu<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1064269833,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataGridFilterMenu<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDataGridFilterMenu"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataGridFilterMenu<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Column",
            "TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>",
            "Metadata": {
              "Common.PropertyName": "Column",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Grid",
            "TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>",
            "Metadata": {
              "Common.PropertyName": "Grid",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridFilterMenu<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1792478060,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataGridFooterCell<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDataGridFooterCell"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataGridFooterCell<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Column",
            "TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>",
            "Metadata": {
              "Common.PropertyName": "Column",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "RowIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Grid",
            "TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>",
            "Metadata": {
              "Common.PropertyName": "Grid",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridFooterCell<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 25656079,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataGridFooterCell<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDataGridFooterCell"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataGridFooterCell<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Column",
            "TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>",
            "Metadata": {
              "Common.PropertyName": "Column",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "RowIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Grid",
            "TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>",
            "Metadata": {
              "Common.PropertyName": "Grid",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridFooterCell<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 684088033,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataGridGroupFooterRow<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDataGridGroupFooterRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataGridGroupFooterRow<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "System.Collections.Generic.IList<Radzen.Blazor.RadzenDataGridColumn<TItem>>",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupResult",
            "TypeName": "System.Linq.Dynamic.Core.GroupResult",
            "Metadata": {
              "Common.PropertyName": "GroupResult"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Grid",
            "TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>",
            "Metadata": {
              "Common.PropertyName": "Grid",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Parent",
            "TypeName": "Radzen.Blazor.RadzenDataGridGroupRow<TItem>",
            "Metadata": {
              "Common.PropertyName": "Parent",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Builder",
            "TypeName": "Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder",
            "Metadata": {
              "Common.PropertyName": "Builder"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridGroupFooterRow<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -724976519,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataGridGroupFooterRow<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDataGridGroupFooterRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataGridGroupFooterRow<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "System.Collections.Generic.IList<Radzen.Blazor.RadzenDataGridColumn<TItem>>",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupResult",
            "TypeName": "System.Linq.Dynamic.Core.GroupResult",
            "Metadata": {
              "Common.PropertyName": "GroupResult"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Grid",
            "TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>",
            "Metadata": {
              "Common.PropertyName": "Grid",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Parent",
            "TypeName": "Radzen.Blazor.RadzenDataGridGroupRow<TItem>",
            "Metadata": {
              "Common.PropertyName": "Parent",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Builder",
            "TypeName": "Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder",
            "Metadata": {
              "Common.PropertyName": "Builder"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridGroupFooterRow<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 978710269,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataGridGroupRow<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDataGridGroupRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataGridGroupRow<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "System.Collections.Generic.IList<Radzen.Blazor.RadzenDataGridColumn<TItem>>",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupResult",
            "TypeName": "System.Linq.Dynamic.Core.GroupResult",
            "Metadata": {
              "Common.PropertyName": "GroupResult"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Grid",
            "TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>",
            "Metadata": {
              "Common.PropertyName": "Grid",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Parent",
            "TypeName": "Radzen.Blazor.RadzenDataGridGroupRow<TItem>",
            "Metadata": {
              "Common.PropertyName": "Parent",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Builder",
            "TypeName": "Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder",
            "Metadata": {
              "Common.PropertyName": "Builder"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridGroupRow<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 841096698,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataGridGroupRow<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDataGridGroupRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataGridGroupRow<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "System.Collections.Generic.IList<Radzen.Blazor.RadzenDataGridColumn<TItem>>",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupResult",
            "TypeName": "System.Linq.Dynamic.Core.GroupResult",
            "Metadata": {
              "Common.PropertyName": "GroupResult"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Grid",
            "TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>",
            "Metadata": {
              "Common.PropertyName": "Grid",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Parent",
            "TypeName": "Radzen.Blazor.RadzenDataGridGroupRow<TItem>",
            "Metadata": {
              "Common.PropertyName": "Parent",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Builder",
            "TypeName": "Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder",
            "Metadata": {
              "Common.PropertyName": "Builder"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridGroupRow<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1488449786,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataGridHeaderCell<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDataGridHeaderCell"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataGridHeaderCell<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Column",
            "TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>",
            "Metadata": {
              "Common.PropertyName": "Column",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ColumnIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "RowIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Grid",
            "TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>",
            "Metadata": {
              "Common.PropertyName": "Grid",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridHeaderCell<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1333768167,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataGridHeaderCell<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDataGridHeaderCell"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataGridHeaderCell<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Column",
            "TypeName": "Radzen.Blazor.RadzenDataGridColumn<TItem>",
            "Metadata": {
              "Common.PropertyName": "Column",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "ColumnIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowIndex",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "RowIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Grid",
            "TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>",
            "Metadata": {
              "Common.PropertyName": "Grid",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridHeaderCell<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 257280853,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataGridRow<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDataGridRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataGridRow<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "System.Collections.Generic.IList<Radzen.Blazor.RadzenDataGridColumn<TItem>>",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Item",
            "TypeName": "TItem",
            "Metadata": {
              "Common.PropertyName": "Item",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Index",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "Index"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Grid",
            "TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>",
            "Metadata": {
              "Common.PropertyName": "Grid",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InEditMode",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "InEditMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Metadata": {
              "Common.PropertyName": "EditContext"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridRow<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1233745975,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDataGridRow<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDataGridRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenDataGridRow<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "System.Collections.Generic.IList<Radzen.Blazor.RadzenDataGridColumn<TItem>>",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Item",
            "TypeName": "TItem",
            "Metadata": {
              "Common.PropertyName": "Item",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Index",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "Index"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Grid",
            "TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>",
            "Metadata": {
              "Common.PropertyName": "Grid",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InEditMode",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "InEditMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditContext",
            "TypeName": "Microsoft.AspNetCore.Components.Forms.EditContext",
            "Metadata": {
              "Common.PropertyName": "EditContext"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridRow<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2083266558,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGridRow<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenDataGridRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridRow<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 351666308,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDataGridRow<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenDataGridRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGridRow<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1684754300,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDialog",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDialog"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDialog"
        }
      },
      {
        "HashCode": -2011982279,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDialog",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDialog"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDialog",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 509949771,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDropDownDataGridColumn",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDropDownDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the columns.\n            </summary>\n            <value>The columns.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OrderIndex",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Gets or sets the order index.\n            </summary>\n            <value>The order index.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "OrderIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortOrder",
            "TypeName": "Radzen.SortOrder?",
            "Documentation": "\n            <summary>\n            Gets or sets the sort order.\n            </summary>\n            <value>The sort order.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SortOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the title.\n            </summary>\n            <value>The title.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Property",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the property name.\n            </summary>\n            <value>The property name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Property"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the sort property name.\n            </summary>\n            <value>The sort property name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SortProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the group property name.\n            </summary>\n            <value>The group property name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the filter property name.\n            </summary>\n            <value>The filter property name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterValue",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the filter value.\n            </summary>\n            <value>The filter value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SecondFilterValue",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the second filter value.\n            </summary>\n            <value>The second filter value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SecondFilterValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the width.\n            </summary>\n            <value>The width.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinWidth",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the min-width.\n            </summary>\n            <value>The min-width.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format string.\n            </summary>\n            <value>The format string.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class applied to data cells.\n            </summary>\n            <value>The CSS class applied to data cells.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderCssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the header CSS class applied to header cell.\n            </summary>\n            <value>The header CSS class applied to header cell.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderCssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FooterCssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the footer CSS class applied to footer cell.\n            </summary>\n            <value>The footer CSS class applied to footer cell.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FooterCssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupFooterCssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the group footer CSS class applied to group footer cell.\n            </summary>\n            <value>The group footer CSS class applied to group footer cell.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupFooterCssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Filterable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is filterable.\n            </summary>\n            <value><c>true</c> if filterable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Filterable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sortable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is sortable.\n            </summary>\n            <value><c>true</c> if sortable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Sortable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Frozen",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is frozen.\n            </summary>\n            <value><c>true</c> if frozen; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Frozen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resizable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is resizable.\n            </summary>\n            <value><c>true</c> if resizable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resizable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reorderable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is reorderable.\n            </summary>\n            <value><c>true</c> if reorderable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Reorderable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Groupable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is groupable.\n            </summary>\n            <value><c>true</c> if groupable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Groupable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pickable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is pickable - listed when DataGrid AllowColumnPicking is set to true.\n            </summary>\n            <value><c>true</c> if pickable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Pickable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlign",
            "TypeName": "Radzen.TextAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the text align.\n            </summary>\n            <value>The text align.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<dynamic>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<dynamic>",
            "Documentation": "\n            <summary>\n            Gets or sets the edit template.\n            </summary>\n            <value>The edit template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the header template.\n            </summary>\n            <value>The header template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FooterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the footer template.\n            </summary>\n            <value>The footer template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FooterTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupFooterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Group>",
            "Documentation": "\n            <summary>\n            Gets or sets the group footer template.\n            </summary>\n            <value>The group footer template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupFooterTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenDataGridColumn<dynamic>>",
            "Documentation": "\n            <summary>\n            Gets or sets the filter template.\n            </summary>\n            <value>The filter template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogicalFilterOperator",
            "TypeName": "Radzen.LogicalFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the logical filter operator.\n            </summary>\n            <value>The logical filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogicalFilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the data type.\n            </summary>\n            <value>The data type.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "Radzen.FilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter operator.\n            </summary>\n            <value>The filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SecondFilterOperator",
            "TypeName": "Radzen.FilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the second filter operator.\n            </summary>\n            <value>The second filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SecondFilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGridColumn"
        }
      },
      {
        "HashCode": -971197111,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDropDownDataGridColumn",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDropDownDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the columns.\n            </summary>\n            <value>The columns.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OrderIndex",
            "TypeName": "System.Int32?",
            "Documentation": "\n            <summary>\n            Gets or sets the order index.\n            </summary>\n            <value>The order index.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "OrderIndex"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortOrder",
            "TypeName": "Radzen.SortOrder?",
            "Documentation": "\n            <summary>\n            Gets or sets the sort order.\n            </summary>\n            <value>The sort order.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SortOrder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the title.\n            </summary>\n            <value>The title.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Property",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the property name.\n            </summary>\n            <value>The property name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Property"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the sort property name.\n            </summary>\n            <value>The sort property name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SortProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the group property name.\n            </summary>\n            <value>The group property name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterProperty",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the filter property name.\n            </summary>\n            <value>The filter property name.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterValue",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the filter value.\n            </summary>\n            <value>The filter value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SecondFilterValue",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Gets or sets the second filter value.\n            </summary>\n            <value>The second filter value.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SecondFilterValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the width.\n            </summary>\n            <value>The width.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinWidth",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the min-width.\n            </summary>\n            <value>The min-width.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "MinWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format string.\n            </summary>\n            <value>The format string.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the CSS class applied to data cells.\n            </summary>\n            <value>The CSS class applied to data cells.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderCssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the header CSS class applied to header cell.\n            </summary>\n            <value>The header CSS class applied to header cell.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderCssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FooterCssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the footer CSS class applied to footer cell.\n            </summary>\n            <value>The footer CSS class applied to footer cell.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FooterCssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupFooterCssClass",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the group footer CSS class applied to group footer cell.\n            </summary>\n            <value>The group footer CSS class applied to group footer cell.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupFooterCssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Filterable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is filterable.\n            </summary>\n            <value><c>true</c> if filterable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Filterable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sortable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is sortable.\n            </summary>\n            <value><c>true</c> if sortable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Sortable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Frozen",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is frozen.\n            </summary>\n            <value><c>true</c> if frozen; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Frozen"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Resizable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is resizable.\n            </summary>\n            <value><c>true</c> if resizable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Resizable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Reorderable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is reorderable.\n            </summary>\n            <value><c>true</c> if reorderable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Reorderable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Groupable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is groupable.\n            </summary>\n            <value><c>true</c> if groupable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Groupable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Pickable",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.RadzenDataGridColumn`1\" /> is pickable - listed when DataGrid AllowColumnPicking is set to true.\n            </summary>\n            <value><c>true</c> if pickable; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Pickable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlign",
            "TypeName": "Radzen.TextAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the text align.\n            </summary>\n            <value>The text align.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TextAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<dynamic>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<dynamic>",
            "Documentation": "\n            <summary>\n            Gets or sets the edit template.\n            </summary>\n            <value>The edit template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "EditTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the header template.\n            </summary>\n            <value>The header template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FooterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the footer template.\n            </summary>\n            <value>The footer template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FooterTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GroupFooterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Group>",
            "Documentation": "\n            <summary>\n            Gets or sets the group footer template.\n            </summary>\n            <value>The group footer template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "GroupFooterTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenDataGridColumn<dynamic>>",
            "Documentation": "\n            <summary>\n            Gets or sets the filter template.\n            </summary>\n            <value>The filter template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogicalFilterOperator",
            "TypeName": "Radzen.LogicalFilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the logical filter operator.\n            </summary>\n            <value>The logical filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LogicalFilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.Type",
            "Documentation": "\n            <summary>\n            Gets or sets the data type.\n            </summary>\n            <value>The data type.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "Radzen.FilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the filter operator.\n            </summary>\n            <value>The filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SecondFilterOperator",
            "TypeName": "Radzen.FilterOperator",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the second filter operator.\n            </summary>\n            <value>The second filter operator.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "SecondFilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGridColumn",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -60995591,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGridColumn.Columns",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the columns.\n            </summary>\n            <value>The columns.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "RadzenDropDownDataGridColumn"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGridColumn.Columns",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 84044200,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGridColumn.Columns",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the columns.\n            </summary>\n            <value>The columns.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "Radzen.Blazor.RadzenDropDownDataGridColumn"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGridColumn.Columns",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -652562038,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGridColumn.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenDropDownDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGridColumn.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 921899091,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGridColumn.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenDropDownDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGridColumn.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1905776474,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGridColumn.EditTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the edit template.\n            </summary>\n            <value>The edit template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditTemplate",
            "ParentTag": "RadzenDropDownDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'EditTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGridColumn.EditTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 934353893,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGridColumn.EditTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the edit template.\n            </summary>\n            <value>The edit template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditTemplate",
            "ParentTag": "Radzen.Blazor.RadzenDropDownDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'EditTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGridColumn.EditTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1753640068,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGridColumn.HeaderTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the header template.\n            </summary>\n            <value>The header template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "RadzenDropDownDataGridColumn"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGridColumn.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1928618177,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGridColumn.HeaderTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the header template.\n            </summary>\n            <value>The header template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "Radzen.Blazor.RadzenDropDownDataGridColumn"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGridColumn.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 195310725,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGridColumn.FooterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the footer template.\n            </summary>\n            <value>The footer template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FooterTemplate",
            "ParentTag": "RadzenDropDownDataGridColumn"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGridColumn.FooterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1687798055,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGridColumn.FooterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the footer template.\n            </summary>\n            <value>The footer template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FooterTemplate",
            "ParentTag": "Radzen.Blazor.RadzenDropDownDataGridColumn"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGridColumn.FooterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1611831525,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGridColumn.GroupFooterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the group footer template.\n            </summary>\n            <value>The group footer template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "GroupFooterTemplate",
            "ParentTag": "RadzenDropDownDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'GroupFooterTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGridColumn.GroupFooterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 624201198,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGridColumn.GroupFooterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the group footer template.\n            </summary>\n            <value>The group footer template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "GroupFooterTemplate",
            "ParentTag": "Radzen.Blazor.RadzenDropDownDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'GroupFooterTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGridColumn.GroupFooterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 599694876,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGridColumn.FilterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the filter template.\n            </summary>\n            <value>The filter template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FilterTemplate",
            "ParentTag": "RadzenDropDownDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'FilterTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGridColumn.FilterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -360251919,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenDropDownDataGridColumn.FilterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the filter template.\n            </summary>\n            <value>The filter template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FilterTemplate",
            "ParentTag": "Radzen.Blazor.RadzenDropDownDataGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'FilterTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGridColumn.FilterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 770304747,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDropDownItem<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDropDownItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenDropDownItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DropDown",
            "TypeName": "Radzen.Blazor.RadzenDropDown<TValue>",
            "Metadata": {
              "Common.PropertyName": "DropDown",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Item",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "Item"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownItem<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 2111060645,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenDropDownItem<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDropDownItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenDropDownItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DropDown",
            "TypeName": "Radzen.Blazor.RadzenDropDown<TValue>",
            "Metadata": {
              "Common.PropertyName": "DropDown",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Item",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "Item"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownItem<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1067649422,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenGrid<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenGrid"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenGrid<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogicalFilterOperator",
            "TypeName": "Radzen.LogicalFilterOperator",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "LogicalFilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterMode",
            "TypeName": "Radzen.FilterMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FilterMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandMode",
            "TypeName": "Radzen.DataGridExpandMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "ExpandMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditMode",
            "TypeName": "Radzen.DataGridEditMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "EditMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AndOperatorText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AndOperatorText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OrOperatorText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "OrOperatorText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApplyFilterText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ApplyFilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ClearFilterText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ClearFilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EqualsText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "EqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotEqualsText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "NotEqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LessThanText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "LessThanText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LessThanOrEqualsText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "LessThanOrEqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreaterThanText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "GreaterThanText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreaterThanOrEqualsText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "GreaterThanOrEqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndsWithText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "EndsWithText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContainsText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ContainsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartsWithText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "StartsWithText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCaseSensitivity",
            "TypeName": "Radzen.FilterCaseSensitivity",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FilterCaseSensitivity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDelay",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "FilterDelay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDateFormat",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FilterDateFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnWidth",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ColumnWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EmptyText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "EmptyText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EmptyTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "EmptyTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSorting",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowSorting"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowFiltering",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowFiltering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowColumnResize",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowColumnResize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnResized",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.ColumnResizedEventArgs<TItem>>",
            "Metadata": {
              "Common.PropertyName": "ColumnResized",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "System.Action<System.Object>",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowSelect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "RowSelect",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowDeselect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "RowDeselect",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "RowClick",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowDoubleClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "RowDoubleClick",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowExpand",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "RowExpand",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowCollapse",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "RowCollapse",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowRender",
            "TypeName": "System.Action<Radzen.RowRenderEventArgs<TItem>>",
            "Metadata": {
              "Common.PropertyName": "RowRender",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CellRender",
            "TypeName": "System.Action<Radzen.CellRenderEventArgs<TItem>>",
            "Metadata": {
              "Common.PropertyName": "CellRender",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Render",
            "TypeName": "System.Action<Radzen.GridRenderEventArgs<TItem>>",
            "Metadata": {
              "Common.PropertyName": "Render",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Responsive",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Responsive"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionMode",
            "TypeName": "Radzen.DataGridSelectionMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "SelectionMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowEdit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "RowEdit",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowUpdate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "RowUpdate",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowCreate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "RowCreate",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerPosition",
            "TypeName": "Radzen.PagerPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the pager position. Set to <c>PagerPosition.Bottom</c> by default.\n            </summary>\n            <value>The pager position.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerAlwaysVisible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether pager is visible even when not enough data for paging.\n            </summary>\n            <value><c>true</c> if pager is visible even when not enough data for paging otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerAlwaysVisible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerHorizontalAlign",
            "TypeName": "Radzen.HorizontalAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the horizontal align.\n            </summary>\n            <value>The horizontal align.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerHorizontalAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether paging is allowed. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if paging is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the size of the page.\n            </summary>\n            <value>The size of the page.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageNumbersCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the page numbers count.\n            </summary>\n            <value>The page numbers count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageNumbersCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Count",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the count.\n            </summary>\n            <value>The count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Count"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the page size options.\n            </summary>\n            <value>The page size options.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the page size description text.\n            </summary>\n            <value>The page size description text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPagingSummary",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary visibility.\n            </summary>\n            <value>The pager summary visibility.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPagingSummary"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingSummaryFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary format.\n            </summary>\n            <value>The pager summary format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagingSummaryFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.PagerEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the page callback.\n            </summary>\n            <value>The page callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenGrid<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1378368088,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenGrid<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenGrid"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenGrid<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogicalFilterOperator",
            "TypeName": "Radzen.LogicalFilterOperator",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "LogicalFilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterMode",
            "TypeName": "Radzen.FilterMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FilterMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ExpandMode",
            "TypeName": "Radzen.DataGridExpandMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "ExpandMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditMode",
            "TypeName": "Radzen.DataGridEditMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "EditMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AndOperatorText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AndOperatorText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "OrOperatorText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "OrOperatorText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ApplyFilterText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ApplyFilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ClearFilterText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ClearFilterText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EqualsText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "EqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "NotEqualsText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "NotEqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LessThanText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "LessThanText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LessThanOrEqualsText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "LessThanOrEqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreaterThanText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "GreaterThanText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreaterThanOrEqualsText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "GreaterThanOrEqualsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndsWithText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "EndsWithText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContainsText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ContainsText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartsWithText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "StartsWithText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterCaseSensitivity",
            "TypeName": "Radzen.FilterCaseSensitivity",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "FilterCaseSensitivity"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDelay",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "FilterDelay"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterDateFormat",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FilterDateFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnWidth",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ColumnWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EmptyText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "EmptyText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EmptyTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "EmptyTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowSorting",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowSorting"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowFiltering",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowFiltering"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowColumnResize",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "AllowColumnResize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ColumnResized",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.ColumnResizedEventArgs<TItem>>",
            "Metadata": {
              "Common.PropertyName": "ColumnResized",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "System.Action<System.Object>",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowSelect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "RowSelect",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowDeselect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "RowDeselect",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "RowClick",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowDoubleClick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "RowDoubleClick",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowExpand",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "RowExpand",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowCollapse",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "RowCollapse",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowRender",
            "TypeName": "System.Action<Radzen.RowRenderEventArgs<TItem>>",
            "Metadata": {
              "Common.PropertyName": "RowRender",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CellRender",
            "TypeName": "System.Action<Radzen.CellRenderEventArgs<TItem>>",
            "Metadata": {
              "Common.PropertyName": "CellRender",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Render",
            "TypeName": "System.Action<Radzen.GridRenderEventArgs<TItem>>",
            "Metadata": {
              "Common.PropertyName": "Render",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Columns",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "Columns",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Responsive",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Responsive"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SelectionMode",
            "TypeName": "Radzen.DataGridSelectionMode",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "SelectionMode"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowEdit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "RowEdit",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowUpdate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "RowUpdate",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RowCreate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TItem>",
            "Metadata": {
              "Common.PropertyName": "RowCreate",
              "Components.EventCallback": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerPosition",
            "TypeName": "Radzen.PagerPosition",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the pager position. Set to <c>PagerPosition.Bottom</c> by default.\n            </summary>\n            <value>The pager position.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerAlwaysVisible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether pager is visible even when not enough data for paging.\n            </summary>\n            <value><c>true</c> if pager is visible even when not enough data for paging otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerAlwaysVisible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagerHorizontalAlign",
            "TypeName": "Radzen.HorizontalAlign",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the horizontal align.\n            </summary>\n            <value>The horizontal align.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagerHorizontalAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AllowPaging",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether paging is allowed. Set to <c>false</c> by default.\n            </summary>\n            <value><c>true</c> if paging is allowed; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "AllowPaging"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSize",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the size of the page.\n            </summary>\n            <value>The size of the page.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageNumbersCount",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the page numbers count.\n            </summary>\n            <value>The page numbers count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageNumbersCount"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Count",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the count.\n            </summary>\n            <value>The count.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Count"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Documentation": "\n            <summary>\n            Gets or sets the data.\n            </summary>\n            <value>The data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeOptions",
            "TypeName": "System.Collections.Generic.IEnumerable<System.Int32>",
            "Documentation": "\n            <summary>\n            Gets or sets the page size options.\n            </summary>\n            <value>The page size options.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeOptions"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PageSizeText",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the page size description text.\n            </summary>\n            <value>The page size description text.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PageSizeText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowPagingSummary",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary visibility.\n            </summary>\n            <value>The pager summary visibility.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ShowPagingSummary"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PagingSummaryFormat",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the pager summary format.\n            </summary>\n            <value>The pager summary format.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "PagingSummaryFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LoadData",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.LoadDataArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the load data.\n            </summary>\n            <value>The load data.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LoadData",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Page",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.PagerEventArgs>",
            "Documentation": "\n            <summary>\n            Gets or sets the page callback.\n            </summary>\n            <value>The page callback.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Page",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenGrid<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -247776734,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGrid<TItem>.EmptyTemplate",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EmptyTemplate",
            "ParentTag": "RadzenGrid"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGrid<TItem>.EmptyTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1280881127,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGrid<TItem>.EmptyTemplate",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EmptyTemplate",
            "ParentTag": "Radzen.Blazor.RadzenGrid"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGrid<TItem>.EmptyTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1515744210,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGrid<TItem>.Columns",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "RadzenGrid"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGrid<TItem>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 854361953,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGrid<TItem>.Columns",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Columns",
            "ParentTag": "Radzen.Blazor.RadzenGrid"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGrid<TItem>.Columns",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -670836631,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGrid<TItem>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenGrid"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGrid<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -89389047,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGrid<TItem>.Template",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the template.\n            </summary>\n            <value>The template.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenGrid"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGrid<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1908364324,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenGridCell<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenGridCell"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenGridCell<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Item",
            "TypeName": "TItem",
            "Metadata": {
              "Common.PropertyName": "Item",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Grid",
            "TypeName": "Radzen.Blazor.RadzenGrid<TItem>",
            "Metadata": {
              "Common.PropertyName": "Grid",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenGridCell<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -674473137,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenGridCell<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenGridCell"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenGridCell<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Item",
            "TypeName": "TItem",
            "Metadata": {
              "Common.PropertyName": "Item",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Grid",
            "TypeName": "Radzen.Blazor.RadzenGrid<TItem>",
            "Metadata": {
              "Common.PropertyName": "Grid",
              "Components.GenericTyped": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenGridCell<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 213881858,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGridCell<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenGridCell"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGridCell<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2140063631,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGridCell<TItem>.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenGridCell"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGridCell<TItem>.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -677835215,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenGridColumn<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenGridColumn<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Property",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Property"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortProperty",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterProperty",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FilterProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterValue",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "FilterValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SecondFilterValue",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "SecondFilterValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SecondFilterOperator",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SecondFilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogicalFilterOperator",
            "TypeName": "Radzen.LogicalFilterOperator",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "LogicalFilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderCssClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HeaderCssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FooterCssClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FooterCssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Filterable",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Filterable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sortable",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Sortable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Bubble",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Bubble"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlign",
            "TypeName": "Radzen.TextAlign",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "TextAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "EditTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FooterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "FooterTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenGridColumn<TItem>>",
            "Metadata": {
              "Common.PropertyName": "FilterTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenGridColumn<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -1949077353,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenGridColumn<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.RadzenGridColumn<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Property",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Property"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SortProperty",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SortProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterProperty",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FilterProperty"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterValue",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "FilterValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SecondFilterValue",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "SecondFilterValue"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterOperator",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "SecondFilterOperator",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "SecondFilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LogicalFilterOperator",
            "TypeName": "Radzen.LogicalFilterOperator",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "LogicalFilterOperator"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Format",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Format"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderCssClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HeaderCssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FooterCssClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FooterCssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Filterable",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Filterable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Sortable",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Sortable"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Bubble",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Bubble"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAlign",
            "TypeName": "Radzen.TextAlign",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "TextAlign"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Template",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "Template",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EditTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<TItem>",
            "Metadata": {
              "Common.PropertyName": "EditTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HeaderTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "HeaderTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FooterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "FooterTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FilterTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.RadzenGridColumn<TItem>>",
            "Metadata": {
              "Common.PropertyName": "FilterTemplate",
              "Components.ChildContent": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenGridColumn<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1709141187,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGridColumn<TItem>.Template",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "RadzenGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGridColumn<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -355017790,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGridColumn<TItem>.Template",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Template",
            "ParentTag": "Radzen.Blazor.RadzenGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'Template' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGridColumn<TItem>.Template",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -808494841,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGridColumn<TItem>.EditTemplate",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditTemplate",
            "ParentTag": "RadzenGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'EditTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGridColumn<TItem>.EditTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 2102094549,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGridColumn<TItem>.EditTemplate",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditTemplate",
            "ParentTag": "Radzen.Blazor.RadzenGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'EditTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGridColumn<TItem>.EditTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1728015437,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGridColumn<TItem>.HeaderTemplate",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "RadzenGridColumn"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGridColumn<TItem>.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1697613950,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGridColumn<TItem>.HeaderTemplate",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "HeaderTemplate",
            "ParentTag": "Radzen.Blazor.RadzenGridColumn"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGridColumn<TItem>.HeaderTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1992321045,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGridColumn<TItem>.FooterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FooterTemplate",
            "ParentTag": "RadzenGridColumn"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGridColumn<TItem>.FooterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1647680735,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGridColumn<TItem>.FooterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FooterTemplate",
            "ParentTag": "Radzen.Blazor.RadzenGridColumn"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGridColumn<TItem>.FooterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -815192585,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGridColumn<TItem>.FilterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FilterTemplate",
            "ParentTag": "RadzenGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'FilterTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGridColumn<TItem>.FilterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -951419293,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGridColumn<TItem>.FilterTemplate",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FilterTemplate",
            "ParentTag": "Radzen.Blazor.RadzenGridColumn"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'FilterTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGridColumn<TItem>.FilterTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1607539233,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenGridRow",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenGridRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InEditMode",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "InEditMode"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenGridRow"
        }
      },
      {
        "HashCode": -20076592,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenGridRow",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenGridRow"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "CssClass",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "CssClass"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "InEditMode",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "InEditMode"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenGridRow",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1352384382,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGridRow.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenGridRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGridRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 786335449,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenGridRow.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenGridRow"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenGridRow.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1108851155,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenListBoxItem<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenListBoxItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenListBoxItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ListBox",
            "TypeName": "Radzen.Blazor.RadzenListBox<TValue>",
            "Metadata": {
              "Common.PropertyName": "ListBox",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Item",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "Item"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenListBoxItem<TValue>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": 1584516303,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenListBoxItem<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenListBoxItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TValue",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TValue for the Radzen.Blazor.RadzenListBoxItem<TValue> component.",
            "Metadata": {
              "Common.PropertyName": "TValue",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ListBox",
            "TypeName": "Radzen.Blazor.RadzenListBox<TValue>",
            "Metadata": {
              "Common.PropertyName": "ListBox",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Item",
            "TypeName": "System.Object",
            "Metadata": {
              "Common.PropertyName": "Item"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenListBoxItem<TValue>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1764573622,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenNotification",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenNotification"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenNotification"
        }
      },
      {
        "HashCode": -979004680,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenNotification",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenNotification"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenNotification",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1730270507,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenNotificationMessage",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenNotificationMessage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "Radzen.NotificationMessage",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenNotificationMessage"
        }
      },
      {
        "HashCode": 2066628727,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenNotificationMessage",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenNotificationMessage"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Message",
            "TypeName": "Radzen.NotificationMessage",
            "Metadata": {
              "Common.PropertyName": "Message"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenNotificationMessage",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -774702675,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenRadialGauge",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenRadialGauge"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenRadialGauge"
        }
      },
      {
        "HashCode": -1068612665,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenRadialGauge",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenRadialGauge"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenRadialGauge",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1871994526,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenRadialGauge.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenRadialGauge"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenRadialGauge.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1955329563,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenRadialGauge.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenRadialGauge"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenRadialGauge.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -542172156,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSeriesValueLine",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSeriesValueLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Double>",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the pixel width of the grid lines. Set to <c>1</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of line used to render the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to display grid lines or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesValueLine"
        }
      },
      {
        "HashCode": -996831899,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenSeriesValueLine",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSeriesValueLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TooltipTemplate",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<System.Double>",
            "Metadata": {
              "Common.PropertyName": "TooltipTemplate",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Specifies the color of the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Specifies the pixel width of the grid lines. Set to <c>1</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Specifies the type of line used to render the grid lines.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Specifies whether to display grid lines or not. Set to <c>false</c> by default.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesValueLine",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1947576287,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSeriesValueLine.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "RadzenSeriesValueLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesValueLine.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 811420781,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenSeriesValueLine.TooltipTemplate",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "TooltipTemplate",
            "ParentTag": "Radzen.Blazor.RadzenSeriesValueLine"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'TooltipTemplate' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenSeriesValueLine.TooltipTemplate",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 313602014,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTooltip",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenTooltip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTooltip"
        }
      },
      {
        "HashCode": -573543494,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenTooltip",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenTooltip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenTooltip",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1845551282,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenUploadHeader",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenUploadHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenUploadHeader"
        }
      },
      {
        "HashCode": 1633120668,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenUploadHeader",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenUploadHeader"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Name",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Name"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenUploadHeader",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 581814749,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenValueAxis",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenValueAxis"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the stroke (line color) of the axis.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the pixel width of axis.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format string used to display the axis values.\n            </summary>\n            <value>The format string.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Formatter",
            "TypeName": "System.Func<System.Object, System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a formatter function that formats the axis values.\n            </summary>\n            <value>The formatter.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Formatter",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the line used to display the axis.\n            </summary>\n            <value>The type of the line.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickDistance",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the pixel distance between axis ticks. It is used to calculate the number of visible ticks depending on the available space. Set to 100 by default;\n            Setting <see cref=\"P:Radzen.Blazor.AxisBase.Step\" /> will override this value.\n            </summary>\n            <value>The desired pixel distance between ticks.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickDistance"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the minimum value of the axis.\n            </summary>\n            <value>The minimum.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the maximum value of the axis.\n            </summary>\n            <value>The maximum.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the step of the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Step"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.AxisBase\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenValueAxis"
        }
      },
      {
        "HashCode": 1784641680,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.RadzenValueAxis",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenValueAxis"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the stroke (line color) of the axis.\n            </summary>\n            <value>The stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Documentation": "\n            <summary>\n            Gets or sets the pixel width of axis.\n            </summary>\n            <value>The width of the stroke.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the format string used to display the axis values.\n            </summary>\n            <value>The format string.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Formatter",
            "TypeName": "System.Func<System.Object, System.String>",
            "Documentation": "\n            <summary>\n            Gets or sets a formatter function that formats the axis values.\n            </summary>\n            <value>The formatter.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Formatter",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Documentation": "\n            <summary>\n            Gets or sets the type of the line used to display the axis.\n            </summary>\n            <value>The type of the line.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickDistance",
            "TypeName": "System.Int32",
            "Documentation": "\n            <summary>\n            Gets or sets the pixel distance between axis ticks. It is used to calculate the number of visible ticks depending on the available space. Set to 100 by default;\n            Setting <see cref=\"P:Radzen.Blazor.AxisBase.Step\" /> will override this value.\n            </summary>\n            <value>The desired pixel distance between ticks.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "TickDistance"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the minimum value of the axis.\n            </summary>\n            <value>The minimum.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the maximum value of the axis.\n            </summary>\n            <value>The maximum.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "System.Object",
            "Documentation": "\n            <summary>\n            Specifies the step of the axis.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Step"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.Blazor.AxisBase\" /> is visible.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.RadzenValueAxis",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1299995985,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenValueAxis.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "RadzenValueAxis"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenValueAxis.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1349522956,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.RadzenValueAxis.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "\n            <summary>\n            Gets or sets the child content.\n            </summary>\n            <value>The child content.</value>\n        ",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.RadzenValueAxis"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.RadzenValueAxis.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1370780953,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor._Imports",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "_Imports"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor._Imports"
        }
      },
      {
        "HashCode": -984155248,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor._Imports",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor._Imports"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor._Imports",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1028678722,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Appointment",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Appointment"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Top",
            "TypeName": "System.Double?",
            "Metadata": {
              "Common.PropertyName": "Top"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Left",
            "TypeName": "System.Double?",
            "Metadata": {
              "Common.PropertyName": "Left"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double?",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double?",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.Blazor.AppointmentData>",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "Radzen.Blazor.AppointmentData",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Appointment"
        }
      },
      {
        "HashCode": 440311342,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Appointment",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.Appointment"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Top",
            "TypeName": "System.Double?",
            "Metadata": {
              "Common.PropertyName": "Top"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Left",
            "TypeName": "System.Double?",
            "Metadata": {
              "Common.PropertyName": "Left"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double?",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Height",
            "TypeName": "System.Double?",
            "Metadata": {
              "Common.PropertyName": "Height"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.Blazor.AppointmentData>",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "Radzen.Blazor.AppointmentData",
            "Metadata": {
              "Common.PropertyName": "Data"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Appointment",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 677928385,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.CategoryAxis",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CategoryAxis"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.CategoryAxis"
        }
      },
      {
        "HashCode": -1022946894,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.CategoryAxis",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.CategoryAxis"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.CategoryAxis",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1356402455,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.CategoryAxisTick",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CategoryAxisTick"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.CategoryAxisTick"
        }
      },
      {
        "HashCode": 734263546,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.CategoryAxisTick",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.CategoryAxisTick"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.CategoryAxisTick",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -134370970,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.Rendering.CategoryAxisTick.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "CategoryAxisTick"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.Rendering.CategoryAxisTick.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 851352383,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.Rendering.CategoryAxisTick.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.Rendering.CategoryAxisTick"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.Rendering.CategoryAxisTick.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1416146177,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.CategoryAxisTitle",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "CategoryAxisTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.CategoryAxisTitle"
        }
      },
      {
        "HashCode": -854254494,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.CategoryAxisTitle",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.CategoryAxisTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.CategoryAxisTitle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1960457884,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.ChartTooltip",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChartTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.ChartTooltip"
        }
      },
      {
        "HashCode": -1824115925,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.ChartTooltip",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.ChartTooltip"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Label",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Label"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.ChartTooltip",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 246297712,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.Rendering.ChartTooltip.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ChartTooltip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.Rendering.ChartTooltip.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1511697263,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.Rendering.ChartTooltip.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.Rendering.ChartTooltip"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.Rendering.ChartTooltip.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1814302236,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.ClipPath",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ClipPath"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.ClipPath"
        }
      },
      {
        "HashCode": -435407713,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.ClipPath",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.ClipPath"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.ClipPath",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1396023206,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.DaySlotEvents",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DaySlotEvents"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "StartDate",
            "TypeName": "System.DateTime",
            "Metadata": {
              "Common.PropertyName": "StartDate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndDate",
            "TypeName": "System.DateTime",
            "Metadata": {
              "Common.PropertyName": "EndDate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinutesPerSlot",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MinutesPerSlot"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Appointments",
            "TypeName": "System.Collections.Generic.IList<Radzen.Blazor.AppointmentData>",
            "Metadata": {
              "Common.PropertyName": "Appointments"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.DaySlotEvents"
        }
      },
      {
        "HashCode": -1147304940,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.DaySlotEvents",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.DaySlotEvents"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "StartDate",
            "TypeName": "System.DateTime",
            "Metadata": {
              "Common.PropertyName": "StartDate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndDate",
            "TypeName": "System.DateTime",
            "Metadata": {
              "Common.PropertyName": "EndDate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinutesPerSlot",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MinutesPerSlot"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Appointments",
            "TypeName": "System.Collections.Generic.IList<Radzen.Blazor.AppointmentData>",
            "Metadata": {
              "Common.PropertyName": "Appointments"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.DaySlotEvents",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -589104824,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.DayView",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DayView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "StartDate",
            "TypeName": "System.DateTime",
            "Metadata": {
              "Common.PropertyName": "StartDate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartTime",
            "TypeName": "System.TimeSpan",
            "Metadata": {
              "Common.PropertyName": "StartTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndDate",
            "TypeName": "System.DateTime",
            "Metadata": {
              "Common.PropertyName": "EndDate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndTime",
            "TypeName": "System.TimeSpan",
            "Metadata": {
              "Common.PropertyName": "EndTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeFormat",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TimeFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinutesPerSlot",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MinutesPerSlot"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Appointments",
            "TypeName": "System.Collections.Generic.IList<Radzen.Blazor.AppointmentData>",
            "Metadata": {
              "Common.PropertyName": "Appointments"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.DayView"
        }
      },
      {
        "HashCode": -645175873,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.DayView",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.DayView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "StartDate",
            "TypeName": "System.DateTime",
            "Metadata": {
              "Common.PropertyName": "StartDate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartTime",
            "TypeName": "System.TimeSpan",
            "Metadata": {
              "Common.PropertyName": "StartTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndDate",
            "TypeName": "System.DateTime",
            "Metadata": {
              "Common.PropertyName": "EndDate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndTime",
            "TypeName": "System.TimeSpan",
            "Metadata": {
              "Common.PropertyName": "EndTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeFormat",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TimeFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinutesPerSlot",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MinutesPerSlot"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Appointments",
            "TypeName": "System.Collections.Generic.IList<Radzen.Blazor.AppointmentData>",
            "Metadata": {
              "Common.PropertyName": "Appointments"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.DayView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1282202326,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.DialogContainer",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DialogContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Dialog",
            "TypeName": "Radzen.Dialog",
            "Metadata": {
              "Common.PropertyName": "Dialog"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowMask",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ShowMask"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.DialogContainer"
        }
      },
      {
        "HashCode": -384901727,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.DialogContainer",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.DialogContainer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Dialog",
            "TypeName": "Radzen.Dialog",
            "Metadata": {
              "Common.PropertyName": "Dialog"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowMask",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ShowMask"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.DialogContainer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -151772104,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Draggable",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Draggable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DragStart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.Blazor.Rendering.DraggableEventArgs>",
            "Metadata": {
              "Common.PropertyName": "DragStart",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DragEnd",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.Blazor.Rendering.DraggableEventArgs>",
            "Metadata": {
              "Common.PropertyName": "DragEnd",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Drag",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.Blazor.Rendering.DraggableEventArgs>",
            "Metadata": {
              "Common.PropertyName": "Drag",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Draggable"
        }
      },
      {
        "HashCode": 1681255951,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Draggable",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.Draggable"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DragStart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.Blazor.Rendering.DraggableEventArgs>",
            "Metadata": {
              "Common.PropertyName": "DragStart",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "DragEnd",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.Blazor.Rendering.DraggableEventArgs>",
            "Metadata": {
              "Common.PropertyName": "DragEnd",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Drag",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.Blazor.Rendering.DraggableEventArgs>",
            "Metadata": {
              "Common.PropertyName": "Drag",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Draggable",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1781599834,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.Rendering.Draggable.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Draggable"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.Rendering.Draggable.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -633796223,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.Rendering.Draggable.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.Rendering.Draggable"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.Rendering.Draggable.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1722588645,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.EditorButton",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditorButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.EditorButton"
        }
      },
      {
        "HashCode": 1526623557,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.EditorButton",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.EditorButton"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Disabled",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Disabled"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Selected",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Selected"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.EditorButton",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1026353181,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.EditorColorPicker",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditorColorPicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowHSV",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ShowHSV"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowRGBA",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ShowRGBA"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowColors",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ShowColors"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ShowButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HexText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HexText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RedText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "RedText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreenText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "GreenText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BlueText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "BlueText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AlphaText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AlphaText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ButtonText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ButtonText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.EditorColorPicker"
        }
      },
      {
        "HashCode": -743703882,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.EditorColorPicker",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.EditorColorPicker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Icon",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Icon"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowHSV",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ShowHSV"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowRGBA",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ShowRGBA"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowColors",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ShowColors"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowButton",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ShowButton"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "HexText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "HexText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "RedText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "RedText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "GreenText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "GreenText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "BlueText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "BlueText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "AlphaText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "AlphaText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ButtonText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "ButtonText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.EditorColorPicker",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1862219158,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.Rendering.EditorColorPicker.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "EditorColorPicker"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.Rendering.EditorColorPicker.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -247014818,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.Rendering.EditorColorPicker.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.Rendering.EditorColorPicker"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.Rendering.EditorColorPicker.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -188058544,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.EditorDropDown",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditorDropDown"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PopupStyle",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PopupStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.EditorDropDown"
        }
      },
      {
        "HashCode": 1994768358,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.EditorDropDown",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.EditorDropDown"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Title",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Title"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "PopupStyle",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "PopupStyle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Placeholder",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Placeholder"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ValueChanged",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "ValueChanged",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Change",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Metadata": {
              "Common.PropertyName": "Change",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.EditorDropDown",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -72721623,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.Rendering.EditorDropDown.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "EditorDropDown"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.Rendering.EditorDropDown.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1117488759,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.Rendering.EditorDropDown.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.Rendering.EditorDropDown"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.Rendering.EditorDropDown.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -13949864,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.EditorDropDownItem",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditorDropDownItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.Rendering.EditorDropDownItem>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.EditorDropDownItem"
        }
      },
      {
        "HashCode": 1008491070,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.EditorDropDownItem",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.EditorDropDownItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment<Radzen.Blazor.Rendering.EditorDropDownItem>",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IDictionary<System.String, System.Object>",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for all child content expressions.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.EditorDropDownItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2004221490,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.Rendering.EditorDropDownItem.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "EditorDropDownItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.Rendering.EditorDropDownItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -73719389,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.Rendering.EditorDropDownItem.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.Rendering.EditorDropDownItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.ChildContent",
            "Name": "Context",
            "TypeName": "System.String",
            "Documentation": "Specifies the parameter name for the 'ChildContent' child content expression.",
            "Metadata": {
              "Components.ChildContentParameterName": "True",
              "Common.PropertyName": "Context"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.Rendering.EditorDropDownItem.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1702652982,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.GaugeBand",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "GaugeBand"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "StartAngle",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StartAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndAngle",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "EndAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "From",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "From"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "To",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "To"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Center",
            "TypeName": "Radzen.Blazor.Point",
            "Metadata": {
              "Common.PropertyName": "Center"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.GaugeBand"
        }
      },
      {
        "HashCode": -583335566,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.GaugeBand",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.GaugeBand"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "StartAngle",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StartAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndAngle",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "EndAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "From",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "From"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "To",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "To"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Center",
            "TypeName": "Radzen.Blazor.Point",
            "Metadata": {
              "Common.PropertyName": "Center"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.GaugeBand",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 39996386,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.GaugePointer",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "GaugePointer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartAngle",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StartAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndAngle",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "EndAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Center",
            "TypeName": "Radzen.Blazor.Point",
            "Metadata": {
              "Common.PropertyName": "Center"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.GaugePointer"
        }
      },
      {
        "HashCode": 612603614,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.GaugePointer",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.GaugePointer"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartAngle",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StartAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndAngle",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "EndAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Width",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Width"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Length",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Length"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Center",
            "TypeName": "Radzen.Blazor.Point",
            "Metadata": {
              "Common.PropertyName": "Center"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.GaugePointer",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1004558647,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.GaugeScale",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "GaugeScale"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "StartAngle",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StartAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickLength",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "TickLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorTickLength",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "MinorTickLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickLabelOffset",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "TickLabelOffset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndAngle",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "EndAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Center",
            "TypeName": "Radzen.Blazor.Point",
            "Metadata": {
              "Common.PropertyName": "Center"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowFirstTick",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ShowFirstTick"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowLastTick",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ShowLastTick"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowTickLabels",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ShowTickLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickPosition",
            "TypeName": "Radzen.Blazor.GaugeTickPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "TickPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Formatter",
            "TypeName": "System.Func<System.Double, System.String>",
            "Metadata": {
              "Common.PropertyName": "Formatter",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Step"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorStep",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "MinorStep"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.GaugeScale"
        }
      },
      {
        "HashCode": -571875853,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.GaugeScale",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.GaugeScale"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "StartAngle",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StartAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickLength",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "TickLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorTickLength",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "MinorTickLength"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickLabelOffset",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "TickLabelOffset"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndAngle",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "EndAngle"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Radius",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Radius"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Center",
            "TypeName": "Radzen.Blazor.Point",
            "Metadata": {
              "Common.PropertyName": "Center"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Min",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Min"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Max",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Max"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowFirstTick",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ShowFirstTick"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowLastTick",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ShowLastTick"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ShowTickLabels",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "ShowTickLabels"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TickPosition",
            "TypeName": "Radzen.Blazor.GaugeTickPosition",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "TickPosition"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "FormatString",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "FormatString"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Formatter",
            "TypeName": "System.Func<System.Double, System.String>",
            "Metadata": {
              "Common.PropertyName": "Formatter",
              "Components.DelegateSignature": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Step",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Step"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinorStep",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "MinorStep"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.GaugeScale",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1897824323,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Hours",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Hours"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Start",
            "TypeName": "System.TimeSpan",
            "Metadata": {
              "Common.PropertyName": "Start"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "End",
            "TypeName": "System.TimeSpan",
            "Metadata": {
              "Common.PropertyName": "End"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeFormat",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TimeFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinutesPerSlot",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MinutesPerSlot"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Hours"
        }
      },
      {
        "HashCode": -1232006938,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Hours",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.Hours"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Start",
            "TypeName": "System.TimeSpan",
            "Metadata": {
              "Common.PropertyName": "Start"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "End",
            "TypeName": "System.TimeSpan",
            "Metadata": {
              "Common.PropertyName": "End"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeFormat",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TimeFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinutesPerSlot",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MinutesPerSlot"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Hours",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 941648540,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Legend",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Legend"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Legend"
        }
      },
      {
        "HashCode": 827141446,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Legend",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.Legend"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Legend",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 409089872,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.LegendItem",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "LegendItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MarkerType",
            "TypeName": "Radzen.Blazor.MarkerType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "MarkerType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MarkerSize",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "MarkerSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Index",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "Index"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.LegendItem"
        }
      },
      {
        "HashCode": 500224346,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.LegendItem",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.LegendItem"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Color",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Color"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MarkerType",
            "TypeName": "Radzen.Blazor.MarkerType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "MarkerType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MarkerSize",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "MarkerSize"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Index",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "Index"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.LegendItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1556544784,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Line",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Line"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X1",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X1"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X2",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X2"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y1",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y1"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y2",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y2"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Line"
        }
      },
      {
        "HashCode": 1802065019,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Line",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.Line"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X1",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X1"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "X2",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X2"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y1",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y1"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y2",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y2"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Line",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -433677059,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Marker",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Marker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Radzen.Blazor.MarkerType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Marker"
        }
      },
      {
        "HashCode": -2106256771,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Marker",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.Marker"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Type",
            "TypeName": "Radzen.Blazor.MarkerType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "Type"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Click",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "Click",
              "Components.EventCallback": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Marker",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1861935051,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Markers<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Markers"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.Rendering.Markers<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Category",
            "TypeName": "System.Func<TItem, System.Double>",
            "Metadata": {
              "Common.PropertyName": "Category",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Func<TItem, System.Double>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MarkerType",
            "TypeName": "Radzen.Blazor.MarkerType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "MarkerType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Markers<TItem>",
          "Components.GenericTyped": "True"
        }
      },
      {
        "HashCode": -62588589,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Markers<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.Markers"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "TItem",
            "TypeName": "System.Type",
            "Documentation": "Specifies the type of the type parameter TItem for the Radzen.Blazor.Rendering.Markers<TItem> component.",
            "Metadata": {
              "Common.PropertyName": "TItem",
              "Components.TypeParameter": "True",
              "Components.TypeParameterIsCascading": "False"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Data",
            "TypeName": "System.Collections.Generic.IEnumerable<TItem>",
            "Metadata": {
              "Common.PropertyName": "Data",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Category",
            "TypeName": "System.Func<TItem, System.Double>",
            "Metadata": {
              "Common.PropertyName": "Category",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.Func<TItem, System.Double>",
            "Metadata": {
              "Common.PropertyName": "Value",
              "Components.DelegateSignature": "True",
              "Components.GenericTyped": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MarkerType",
            "TypeName": "Radzen.Blazor.MarkerType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "MarkerType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Size",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Size"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Markers<TItem>",
          "Components.GenericTyped": "True",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -484381373,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.MonthView",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "MonthView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "StartDate",
            "TypeName": "System.DateTime",
            "Metadata": {
              "Common.PropertyName": "StartDate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndDate",
            "TypeName": "System.DateTime",
            "Metadata": {
              "Common.PropertyName": "EndDate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxAppointmentsInSlot",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxAppointmentsInSlot"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MoreText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "MoreText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Appointments",
            "TypeName": "System.Collections.Generic.IEnumerable<Radzen.Blazor.AppointmentData>",
            "Metadata": {
              "Common.PropertyName": "Appointments"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.MonthView"
        }
      },
      {
        "HashCode": -1491873469,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.MonthView",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.MonthView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "StartDate",
            "TypeName": "System.DateTime",
            "Metadata": {
              "Common.PropertyName": "StartDate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndDate",
            "TypeName": "System.DateTime",
            "Metadata": {
              "Common.PropertyName": "EndDate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MaxAppointmentsInSlot",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MaxAppointmentsInSlot"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MoreText",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "MoreText"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Appointments",
            "TypeName": "System.Collections.Generic.IEnumerable<Radzen.Blazor.AppointmentData>",
            "Metadata": {
              "Common.PropertyName": "Appointments"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.MonthView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1121551710,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Path",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Path"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "D",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "D"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Path"
        }
      },
      {
        "HashCode": 1816380972,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Path",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.Path"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "D",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "D"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Fill",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Fill"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Path",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1668756773,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Popup",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Popup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Lazy",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Lazy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Open",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "Open",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Close",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "Close",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Popup"
        }
      },
      {
        "HashCode": 1872620920,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Popup",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.Popup"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Lazy",
            "TypeName": "System.Boolean",
            "Metadata": {
              "Common.PropertyName": "Lazy"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Open",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "Open",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Close",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback",
            "Metadata": {
              "Common.PropertyName": "Close",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Attributes",
            "TypeName": "System.Collections.Generic.IReadOnlyDictionary<System.String, System.Object>",
            "Documentation": "\n            <summary>\n            Specifies additional custom attributes that will be rendered by the component.\n            </summary>\n            <value>The attributes.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Attributes"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseEnter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user hovers the component. Commonly used to display a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Open(Microsoft.AspNetCore.Components.ElementReference,System.String,Radzen.TooltipOptions)\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseEnter",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MouseLeave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ElementReference>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user moves the mouse out of the component. Commonly used to hide a tooltip via \n            <see cref=\"M:Radzen.TooltipService.Close\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "MouseLeave",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ContextMenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "\n            <summary>\n            A callback that will be invoked when the user right-clicks the component. Commonly used to display a context menu via \n            <see cref=\"M:Radzen.ContextMenuService.Open(Microsoft.AspNetCore.Components.Web.MouseEventArgs,System.Collections.Generic.IEnumerable{Radzen.ContextMenuItem},System.Action{Radzen.MenuItemEventArgs})\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "ContextMenu",
              "Components.EventCallback": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Culture",
            "TypeName": "System.Globalization.CultureInfo",
            "Documentation": "\n            <summary>\n            Gets or sets the culture used to display localizable data (numbers, dates). Set by default to <see cref=\"P:System.Globalization.CultureInfo.CurrentCulture\" />.\n            </summary>\n        ",
            "Metadata": {
              "Common.PropertyName": "Culture"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Style",
            "TypeName": "System.String",
            "Documentation": "\n            <summary>\n            Gets or sets the inline CSS style.\n            </summary>\n            <value>The style.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Style"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Visible",
            "TypeName": "System.Boolean",
            "Documentation": "\n            <summary>\n            Gets or sets a value indicating whether this <see cref=\"T:Radzen.RadzenComponent\" /> is visible. Invisible components are not rendered.\n            </summary>\n            <value><c>true</c> if visible; otherwise, <c>false</c>.</value>\n        ",
            "Metadata": {
              "Common.PropertyName": "Visible"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Popup",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1186499585,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.Rendering.Popup.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Popup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.Rendering.Popup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": 1343006787,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.Rendering.Popup.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.Rendering.Popup"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.Rendering.Popup.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 82709102,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Text",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Text"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "Radzen.Blazor.Point",
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAnchor",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TextAnchor"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Text"
        }
      },
      {
        "HashCode": 1532052143,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Text",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.Text"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "Class",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Class"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Value",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Value"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Position",
            "TypeName": "Radzen.Blazor.Point",
            "Metadata": {
              "Common.PropertyName": "Position"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TextAnchor",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TextAnchor"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Text",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1432863627,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Tick",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Tick"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Tick"
        }
      },
      {
        "HashCode": 234866098,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.Tick",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.Tick"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.Tick",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2119736002,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.Rendering.Tick.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Tick"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.Rendering.Tick.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -1486928472,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.Rendering.Tick.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.Rendering.Tick"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.Rendering.Tick.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -771058054,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.ValueAxis",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValueAxis"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.ValueAxis"
        }
      },
      {
        "HashCode": 1145747495,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.ValueAxis",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.ValueAxis"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.ValueAxis",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1170914606,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.ValueAxisTick",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValueAxisTick"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.ValueAxisTick"
        }
      },
      {
        "HashCode": -1171563693,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.ValueAxisTick",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.ValueAxisTick"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "ChildContent",
            "TypeName": "Microsoft.AspNetCore.Components.RenderFragment",
            "Metadata": {
              "Common.PropertyName": "ChildContent",
              "Components.ChildContent": "True"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Stroke",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Stroke"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StrokeWidth",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "StrokeWidth"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "LineType",
            "TypeName": "Radzen.Blazor.LineType",
            "IsEnum": true,
            "Metadata": {
              "Common.PropertyName": "LineType"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.ValueAxisTick",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 593885265,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.Rendering.ValueAxisTick.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "ValueAxisTick"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.Rendering.ValueAxisTick.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent"
        }
      },
      {
        "HashCode": -245481930,
        "Kind": "Components.ChildContent",
        "Name": "Radzen.Blazor.Rendering.ValueAxisTick.ChildContent",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ChildContent",
            "ParentTag": "Radzen.Blazor.Rendering.ValueAxisTick"
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Common.TypeName": "Radzen.Blazor.Rendering.ValueAxisTick.ChildContent",
          "Components.IsSpecialKind": "Components.ChildContent",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -119404788,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.ValueAxisTitle",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "ValueAxisTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.ValueAxisTitle"
        }
      },
      {
        "HashCode": 821915128,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.ValueAxisTitle",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.ValueAxisTitle"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "X",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "X"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Y",
            "TypeName": "System.Double",
            "Metadata": {
              "Common.PropertyName": "Y"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Text",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "Text"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.ValueAxisTitle",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 686734666,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.WeekView",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "WeekView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "StartDate",
            "TypeName": "System.DateTime",
            "Metadata": {
              "Common.PropertyName": "StartDate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndDate",
            "TypeName": "System.DateTime",
            "Metadata": {
              "Common.PropertyName": "EndDate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartTime",
            "TypeName": "System.TimeSpan",
            "Metadata": {
              "Common.PropertyName": "StartTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndTime",
            "TypeName": "System.TimeSpan",
            "Metadata": {
              "Common.PropertyName": "EndTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeFormat",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TimeFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinutesPerSlot",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MinutesPerSlot"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Appointments",
            "TypeName": "System.Collections.Generic.IList<Radzen.Blazor.AppointmentData>",
            "Metadata": {
              "Common.PropertyName": "Appointments"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.WeekView"
        }
      },
      {
        "HashCode": -415262876,
        "Kind": "Components.Component",
        "Name": "Radzen.Blazor.Rendering.WeekView",
        "AssemblyName": "Radzen.Blazor",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.WeekView"
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Component",
            "Name": "StartDate",
            "TypeName": "System.DateTime",
            "Metadata": {
              "Common.PropertyName": "StartDate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndDate",
            "TypeName": "System.DateTime",
            "Metadata": {
              "Common.PropertyName": "EndDate"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "StartTime",
            "TypeName": "System.TimeSpan",
            "Metadata": {
              "Common.PropertyName": "StartTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "EndTime",
            "TypeName": "System.TimeSpan",
            "Metadata": {
              "Common.PropertyName": "EndTime"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "TimeFormat",
            "TypeName": "System.String",
            "Metadata": {
              "Common.PropertyName": "TimeFormat"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "MinutesPerSlot",
            "TypeName": "System.Int32",
            "Metadata": {
              "Common.PropertyName": "MinutesPerSlot"
            }
          },
          {
            "Kind": "Components.Component",
            "Name": "Appointments",
            "TypeName": "System.Collections.Generic.IList<Radzen.Blazor.AppointmentData>",
            "Metadata": {
              "Common.PropertyName": "Appointments"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.IComponent",
          "Common.TypeName": "Radzen.Blazor.Rendering.WeekView",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -827575616,
        "Kind": "Components.EventHandler",
        "Name": "onfocus",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocus:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocus",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocus' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocus"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocus' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocus' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 477156394,
        "Kind": "Components.EventHandler",
        "Name": "onblur",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onblur:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onblur",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onblur' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onblur"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onblur' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onblur' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 790130888,
        "Kind": "Components.EventHandler",
        "Name": "onfocusin",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusin:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocusin",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocusin' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocusin"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusin' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocusin' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1918803390,
        "Kind": "Components.EventHandler",
        "Name": "onfocusout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfocusout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfocusout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.FocusEventArgs>",
            "Documentation": "Sets the '@onfocusout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.FocusEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfocusout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfocusout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfocusout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.FocusEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1155873207,
        "Kind": "Components.EventHandler",
        "Name": "onmouseover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 664476988,
        "Kind": "Components.EventHandler",
        "Name": "onmouseout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 670177867,
        "Kind": "Components.EventHandler",
        "Name": "onmousemove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousemove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousemove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmousemove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousemove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousemove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousemove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1102617737,
        "Kind": "Components.EventHandler",
        "Name": "onmousedown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousedown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousedown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmousedown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousedown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousedown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousedown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1229554312,
        "Kind": "Components.EventHandler",
        "Name": "onmouseup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onmouseup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -834232033,
        "Kind": "Components.EventHandler",
        "Name": "onclick",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onclick:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onclick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@onclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onclick"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onclick' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onclick' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -878454305,
        "Kind": "Components.EventHandler",
        "Name": "ondblclick",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondblclick:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondblclick",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@ondblclick' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondblclick"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondblclick' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondblclick' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 2127179273,
        "Kind": "Components.EventHandler",
        "Name": "onwheel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwheel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onwheel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>",
            "Documentation": "Sets the '@onwheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onwheel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwheel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onwheel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.WheelEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -147143739,
        "Kind": "Components.EventHandler",
        "Name": "onmousewheel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmousewheel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmousewheel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.WheelEventArgs>",
            "Documentation": "Sets the '@onmousewheel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.WheelEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmousewheel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmousewheel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmousewheel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.WheelEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -96260552,
        "Kind": "Components.EventHandler",
        "Name": "oncontextmenu",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncontextmenu:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncontextmenu",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.MouseEventArgs>",
            "Documentation": "Sets the '@oncontextmenu' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.MouseEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncontextmenu"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncontextmenu' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncontextmenu' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.MouseEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1239508671,
        "Kind": "Components.EventHandler",
        "Name": "ondrag",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrag:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondrag",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondrag' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondrag"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrag' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondrag' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1350830588,
        "Kind": "Components.EventHandler",
        "Name": "ondragend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 63111591,
        "Kind": "Components.EventHandler",
        "Name": "ondragenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1721737235,
        "Kind": "Components.EventHandler",
        "Name": "ondragleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -652941704,
        "Kind": "Components.EventHandler",
        "Name": "ondragover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1015286055,
        "Kind": "Components.EventHandler",
        "Name": "ondragstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondragstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondragstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondragstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondragstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondragstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondragstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1435887192,
        "Kind": "Components.EventHandler",
        "Name": "ondrop",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondrop:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondrop",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.DragEventArgs>",
            "Documentation": "Sets the '@ondrop' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.DragEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondrop"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondrop' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondrop' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.DragEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 161052021,
        "Kind": "Components.EventHandler",
        "Name": "onkeydown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeydown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeydown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeydown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeydown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeydown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeydown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1014296485,
        "Kind": "Components.EventHandler",
        "Name": "onkeyup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeyup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeyup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeyup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeyup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeyup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeyup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -167928890,
        "Kind": "Components.EventHandler",
        "Name": "onkeypress",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onkeypress:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onkeypress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.KeyboardEventArgs>",
            "Documentation": "Sets the '@onkeypress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.KeyboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onkeypress"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onkeypress' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onkeypress' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.KeyboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 2042402072,
        "Kind": "Components.EventHandler",
        "Name": "onchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Documentation": "Sets the '@onchange' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.ChangeEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -165248663,
        "Kind": "Components.EventHandler",
        "Name": "oninput",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninput:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oninput",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.ChangeEventArgs>",
            "Documentation": "Sets the '@oninput' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.ChangeEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oninput"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninput' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oninput' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.ChangeEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1029627430,
        "Kind": "Components.EventHandler",
        "Name": "oninvalid",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oninvalid:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oninvalid",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oninvalid' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oninvalid"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oninvalid' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oninvalid' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1124817245,
        "Kind": "Components.EventHandler",
        "Name": "onreset",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreset:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onreset",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onreset' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onreset"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreset' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onreset' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -952225722,
        "Kind": "Components.EventHandler",
        "Name": "onselect",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselect:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselect",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselect' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselect"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselect' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselect' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1225796564,
        "Kind": "Components.EventHandler",
        "Name": "onselectstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselectstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselectstart' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselectstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselectstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1405522266,
        "Kind": "Components.EventHandler",
        "Name": "onselectionchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onselectionchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onselectionchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onselectionchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onselectionchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onselectionchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onselectionchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1145431274,
        "Kind": "Components.EventHandler",
        "Name": "onsubmit",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsubmit:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onsubmit",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onsubmit' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onsubmit"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsubmit' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onsubmit' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1071393176,
        "Kind": "Components.EventHandler",
        "Name": "onbeforecopy",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecopy:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforecopy",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforecopy' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforecopy"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecopy' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforecopy' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 420808444,
        "Kind": "Components.EventHandler",
        "Name": "onbeforecut",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforecut:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforecut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforecut' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforecut"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforecut' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforecut' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1047318564,
        "Kind": "Components.EventHandler",
        "Name": "onbeforepaste",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforepaste:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforepaste",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforepaste' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforepaste"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforepaste' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforepaste' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 239424571,
        "Kind": "Components.EventHandler",
        "Name": "oncopy",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncopy:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncopy",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@oncopy' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncopy"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncopy' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncopy' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -843584271,
        "Kind": "Components.EventHandler",
        "Name": "oncut",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncut:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncut",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@oncut' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncut"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncut' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncut' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1902616346,
        "Kind": "Components.EventHandler",
        "Name": "onpaste",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpaste:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpaste",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ClipboardEventArgs>",
            "Documentation": "Sets the '@onpaste' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ClipboardEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpaste"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpaste' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpaste' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ClipboardEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 885319403,
        "Kind": "Components.EventHandler",
        "Name": "ontouchcancel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchcancel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchcancel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchcancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchcancel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchcancel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchcancel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1014713900,
        "Kind": "Components.EventHandler",
        "Name": "ontouchend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 444055807,
        "Kind": "Components.EventHandler",
        "Name": "ontouchmove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchmove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchmove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchmove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchmove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchmove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchmove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -165378778,
        "Kind": "Components.EventHandler",
        "Name": "ontouchstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 24428027,
        "Kind": "Components.EventHandler",
        "Name": "ontouchenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 426246157,
        "Kind": "Components.EventHandler",
        "Name": "ontouchleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontouchleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontouchleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.TouchEventArgs>",
            "Documentation": "Sets the '@ontouchleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.TouchEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontouchleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontouchleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontouchleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.TouchEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1484964971,
        "Kind": "Components.EventHandler",
        "Name": "ongotpointercapture",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ongotpointercapture:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ongotpointercapture",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@ongotpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ongotpointercapture"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ongotpointercapture' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ongotpointercapture' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -633033428,
        "Kind": "Components.EventHandler",
        "Name": "onlostpointercapture",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onlostpointercapture:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onlostpointercapture",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onlostpointercapture' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onlostpointercapture"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onlostpointercapture' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onlostpointercapture' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 307910220,
        "Kind": "Components.EventHandler",
        "Name": "onpointercancel",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointercancel:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointercancel",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointercancel' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointercancel"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointercancel' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointercancel' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 611877063,
        "Kind": "Components.EventHandler",
        "Name": "onpointerdown",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerdown:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerdown",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerdown' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerdown"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerdown' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerdown' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1610283357,
        "Kind": "Components.EventHandler",
        "Name": "onpointerenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerenter' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2116134561,
        "Kind": "Components.EventHandler",
        "Name": "onpointerleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerleave' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 430129332,
        "Kind": "Components.EventHandler",
        "Name": "onpointermove",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointermove:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointermove",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointermove' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointermove"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointermove' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointermove' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1073195260,
        "Kind": "Components.EventHandler",
        "Name": "onpointerout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1483066725,
        "Kind": "Components.EventHandler",
        "Name": "onpointerover",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerover:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerover",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerover' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerover"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerover' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerover' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -335284281,
        "Kind": "Components.EventHandler",
        "Name": "onpointerup",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerup:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerup",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.PointerEventArgs>",
            "Documentation": "Sets the '@onpointerup' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.PointerEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerup"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerup' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerup' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.PointerEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1861513122,
        "Kind": "Components.EventHandler",
        "Name": "oncanplay",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplay:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncanplay",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncanplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncanplay"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplay' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncanplay' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1377093739,
        "Kind": "Components.EventHandler",
        "Name": "oncanplaythrough",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncanplaythrough:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncanplaythrough",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncanplaythrough' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncanplaythrough"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncanplaythrough' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncanplaythrough' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2033265732,
        "Kind": "Components.EventHandler",
        "Name": "oncuechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@oncuechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@oncuechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@oncuechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "oncuechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@oncuechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@oncuechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1357800617,
        "Kind": "Components.EventHandler",
        "Name": "ondurationchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondurationchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondurationchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ondurationchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondurationchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondurationchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondurationchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 2017112673,
        "Kind": "Components.EventHandler",
        "Name": "onemptied",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onemptied:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onemptied",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onemptied' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onemptied"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onemptied' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onemptied' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2117354684,
        "Kind": "Components.EventHandler",
        "Name": "onpause",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpause:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpause",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpause' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpause"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpause' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpause' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1665549172,
        "Kind": "Components.EventHandler",
        "Name": "onplay",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplay:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onplay",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onplay' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onplay"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplay' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onplay' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2120984849,
        "Kind": "Components.EventHandler",
        "Name": "onplaying",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onplaying:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onplaying",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onplaying' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onplaying"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onplaying' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onplaying' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1108702839,
        "Kind": "Components.EventHandler",
        "Name": "onratechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onratechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onratechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onratechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onratechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onratechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onratechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1782099212,
        "Kind": "Components.EventHandler",
        "Name": "onseeked",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeked:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onseeked",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onseeked' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onseeked"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeked' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onseeked' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -942703434,
        "Kind": "Components.EventHandler",
        "Name": "onseeking",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onseeking:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onseeking",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onseeking' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onseeking"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onseeking' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onseeking' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1333198232,
        "Kind": "Components.EventHandler",
        "Name": "onstalled",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstalled:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onstalled",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onstalled' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onstalled"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstalled' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onstalled' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1375773134,
        "Kind": "Components.EventHandler",
        "Name": "onstop",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onstop:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onstop",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onstop' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onstop"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onstop' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onstop' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1622306480,
        "Kind": "Components.EventHandler",
        "Name": "onsuspend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onsuspend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onsuspend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onsuspend' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onsuspend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onsuspend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onsuspend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -956342579,
        "Kind": "Components.EventHandler",
        "Name": "ontimeupdate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeupdate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontimeupdate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ontimeupdate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontimeupdate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeupdate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontimeupdate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 807895194,
        "Kind": "Components.EventHandler",
        "Name": "onvolumechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onvolumechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onvolumechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onvolumechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onvolumechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onvolumechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onvolumechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1167495266,
        "Kind": "Components.EventHandler",
        "Name": "onwaiting",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onwaiting:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onwaiting",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onwaiting' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onwaiting"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onwaiting' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onwaiting' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1674970784,
        "Kind": "Components.EventHandler",
        "Name": "onloadstart",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadstart:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadstart",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onloadstart' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadstart"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadstart' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadstart' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1453195009,
        "Kind": "Components.EventHandler",
        "Name": "ontimeout",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontimeout:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontimeout",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@ontimeout' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontimeout"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontimeout' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontimeout' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 547129745,
        "Kind": "Components.EventHandler",
        "Name": "onabort",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onabort:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onabort",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onabort' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onabort"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onabort' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onabort' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1181127518,
        "Kind": "Components.EventHandler",
        "Name": "onload",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onload:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onload",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onload' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onload"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onload' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onload' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -529841374,
        "Kind": "Components.EventHandler",
        "Name": "onloadend",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadend:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadend",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onloadend' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadend"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadend' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadend' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -111433766,
        "Kind": "Components.EventHandler",
        "Name": "onprogress",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onprogress:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onprogress",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ProgressEventArgs>",
            "Documentation": "Sets the '@onprogress' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ProgressEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onprogress"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onprogress' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onprogress' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ProgressEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -553422287,
        "Kind": "Components.EventHandler",
        "Name": "onerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Microsoft.AspNetCore.Components.Web.ErrorEventArgs>",
            "Documentation": "Sets the '@onerror' attribute to the provided string or delegate value. A delegate value should be of type 'Microsoft.AspNetCore.Components.Web.ErrorEventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "Microsoft.AspNetCore.Components.Web.ErrorEventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1127806630,
        "Kind": "Components.EventHandler",
        "Name": "onactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -648254546,
        "Kind": "Components.EventHandler",
        "Name": "onbeforeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 452592786,
        "Kind": "Components.EventHandler",
        "Name": "onbeforedeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onbeforedeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onbeforedeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onbeforedeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onbeforedeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onbeforedeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onbeforedeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -783645887,
        "Kind": "Components.EventHandler",
        "Name": "ondeactivate",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ondeactivate:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ondeactivate",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ondeactivate' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ondeactivate"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ondeactivate' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ondeactivate' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -1578220327,
        "Kind": "Components.EventHandler",
        "Name": "onended",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onended:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onended",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onended' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onended"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onended' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onended' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 2062371811,
        "Kind": "Components.EventHandler",
        "Name": "onfullscreenchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfullscreenchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onfullscreenchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfullscreenchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfullscreenchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2090452909,
        "Kind": "Components.EventHandler",
        "Name": "onfullscreenerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onfullscreenerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onfullscreenerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onfullscreenerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onfullscreenerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onfullscreenerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onfullscreenerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 425741923,
        "Kind": "Components.EventHandler",
        "Name": "onloadeddata",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadeddata:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadeddata",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onloadeddata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadeddata"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadeddata' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadeddata' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2023083071,
        "Kind": "Components.EventHandler",
        "Name": "onloadedmetadata",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onloadedmetadata:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onloadedmetadata",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onloadedmetadata' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onloadedmetadata"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onloadedmetadata' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onloadedmetadata' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1692091009,
        "Kind": "Components.EventHandler",
        "Name": "onpointerlockchange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockchange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerlockchange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpointerlockchange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerlockchange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockchange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerlockchange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 2033420587,
        "Kind": "Components.EventHandler",
        "Name": "onpointerlockerror",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onpointerlockerror:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onpointerlockerror",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onpointerlockerror' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onpointerlockerror"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onpointerlockerror' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onpointerlockerror' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1825893313,
        "Kind": "Components.EventHandler",
        "Name": "onreadystatechange",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onreadystatechange:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onreadystatechange",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onreadystatechange' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onreadystatechange"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onreadystatechange' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onreadystatechange' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -2110545624,
        "Kind": "Components.EventHandler",
        "Name": "onscroll",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onscroll:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onscroll",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onscroll' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onscroll"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onscroll' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onscroll' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": -109511641,
        "Kind": "Components.EventHandler",
        "Name": "ontoggle",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontoggle",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontoggle:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ontoggle:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@ontoggle",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@ontoggle' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "ontoggle"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@ontoggle' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@ontoggle' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.EventHandlers"
        }
      },
      {
        "HashCode": 1354609681,
        "Kind": "Components.EventHandler",
        "Name": "onmouseenter",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseenter' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseenter",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseenter:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseenter:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseenter",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onmouseenter' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseenter"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseenter' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseenter' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Radzen.EventHandlers"
        }
      },
      {
        "HashCode": -718245679,
        "Kind": "Components.EventHandler",
        "Name": "onmouseleave",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Sets the '@onmouseleave' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseleave",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseleave:preventDefault",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          },
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@onmouseleave:stopPropagation",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.EventHandler",
            "Name": "@onmouseleave",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.EventArgs>",
            "Documentation": "Sets the '@onmouseleave' attribute to the provided string or delegate value. A delegate value should be of type 'System.EventArgs'.",
            "Metadata": {
              "Components.IsWeaklyTyped": "True",
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "onmouseleave"
            },
            "BoundAttributeParameters": [
              {
                "Name": "preventDefault",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to cancel (if cancelable) the default action that belongs to the '@onmouseleave' event.",
                "Metadata": {
                  "Common.PropertyName": "PreventDefault"
                }
              },
              {
                "Name": "stopPropagation",
                "TypeName": "System.Boolean",
                "Documentation": "Specifies whether to prevent further propagation of the '@onmouseleave' event in the capturing and bubbling phases.",
                "Metadata": {
                  "Common.PropertyName": "StopPropagation"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.EventHandler",
          "Components.EventHandler.EventArgs": "System.EventArgs",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Radzen.EventHandlers"
        }
      },
      {
        "HashCode": -1709706198,
        "Kind": "Components.Splat",
        "Name": "Attributes",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Merges a collection of attributes into the current element or component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@attributes",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Splat",
            "Name": "@attributes",
            "TypeName": "System.Object",
            "Documentation": "Merges a collection of attributes into the current element or component.",
            "Metadata": {
              "Common.PropertyName": "Attributes",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Splat",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Attributes"
        }
      },
      {
        "HashCode": -454642621,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@bind-",
                "NameComparison": 1,
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-...",
            "TypeName": "System.Collections.Generic.Dictionary<string, object>",
            "IndexerNamePrefix": "@bind-",
            "IndexerTypeName": "System.Object",
            "Documentation": "Binds the provided expression to an attribute and a change event, based on the naming of the bind attribute. For example: <code>@bind-value=\"...\"</code> and <code>@bind-value:event=\"onchange\"</code> will assign the current value of the expression to the 'value' attribute, and assign a delegate that attempts to set the value to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the corresponding bind attribute. For example: <code>@bind-value:format=\"...\"</code> will apply a format string to the value specified in <code>@bind-value=\"...\"</code>. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-...' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.Fallback": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Bind"
        }
      },
      {
        "HashCode": 1725323765,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 576835071,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 1864119108,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "checkbox",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'checked' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_checked"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_checked"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-checked",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_checked"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "checked",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "checkbox",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 2080300317,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "text",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "text",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -2032314477,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "number",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "number",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -513363162,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "number",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": null,
          "Components.Bind.TypeAttribute": "number",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -702119007,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "date",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-dd",
          "Components.Bind.TypeAttribute": "date",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -1383725118,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "date",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-dd",
          "Components.Bind.TypeAttribute": "date",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -1046649667,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "datetime-local",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-ddTHH:mm:ss",
          "Components.Bind.TypeAttribute": "datetime-local",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -1802284369,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "datetime-local",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM-ddTHH:mm:ss",
          "Components.Bind.TypeAttribute": "datetime-local",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 1335193740,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "month",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM",
          "Components.Bind.TypeAttribute": "month",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -1104038362,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "month",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "yyyy-MM",
          "Components.Bind.TypeAttribute": "month",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -895572256,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "time",
                "ValueComparison": 1
              },
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "HH:mm:ss",
          "Components.Bind.TypeAttribute": "time",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -1423127273,
        "Kind": "Components.Bind",
        "Name": "Bind_value",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "input",
            "Attributes": [
              {
                "Name": "type",
                "Value": "time",
                "ValueComparison": 1
              },
              {
                "Name": "@bind-value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-value",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind_value"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind-value' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind-value' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "True",
          "Components.Bind.Format": "HH:mm:ss",
          "Components.Bind.TypeAttribute": "time",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 217006308,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "select",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": 2116301378,
        "Kind": "Components.Bind",
        "Name": "Bind",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "textarea",
            "Attributes": [
              {
                "Name": "@bind",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind",
            "TypeName": "System.Object",
            "Documentation": "Binds the provided expression to the 'value' attribute and a change event delegate to the 'onchange' attribute.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Bind"
            },
            "BoundAttributeParameters": [
              {
                "Name": "format",
                "TypeName": "System.String",
                "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
                "Metadata": {
                  "Common.PropertyName": "Format_value"
                }
              },
              {
                "Name": "event",
                "TypeName": "System.String",
                "Documentation": "Specifies the event handler name to attach for change notifications for the value provided by the '@bind' attribute.",
                "Metadata": {
                  "Common.PropertyName": "Event_value"
                }
              },
              {
                "Name": "culture",
                "TypeName": "System.Globalization.CultureInfo",
                "Documentation": "Specifies the culture to use for conversions.",
                "Metadata": {
                  "Common.PropertyName": "Culture"
                }
              }
            ]
          },
          {
            "Kind": "Components.Bind",
            "Name": "format-value",
            "TypeName": "System.String",
            "Documentation": "Specifies a format to convert the value specified by the '@bind' attribute. The format string can currently only be used with expressions of type <code>DateTime</code>.",
            "Metadata": {
              "Common.PropertyName": "Format_value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Common.ClassifyAttributesOnly": "True",
          "Components.Bind.ValueAttribute": "value",
          "Components.Bind.ChangeAttribute": "onchange",
          "Components.Bind.IsInvariantCulture": "False",
          "Components.Bind.Format": null,
          "Common.TypeName": "Microsoft.AspNetCore.Components.Web.BindAttributes"
        }
      },
      {
        "HashCode": -139921116,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox"
        }
      },
      {
        "HashCode": 713425131,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputCheckbox",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -872035968,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputDate",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>"
        }
      },
      {
        "HashCode": -174037264,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputDate",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputDate<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2000959405,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputNumber",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>"
        }
      },
      {
        "HashCode": -658123271,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputNumber",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputNumber<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1222464636,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>"
        }
      },
      {
        "HashCode": 1056399723,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputRadioGroup<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2111592245,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>"
        }
      },
      {
        "HashCode": 2023852262,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputSelect",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputSelect<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 741321491,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputText",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText"
        }
      },
      {
        "HashCode": 259181904,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputText",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputText",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputText",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1197128182,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "InputTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea"
        }
      },
      {
        "HashCode": 1558060677,
        "Kind": "Components.Bind",
        "Name": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
        "AssemblyName": "Microsoft.AspNetCore.Components.Web",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Forms.InputTextArea",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1681295882,
        "Kind": "Components.Bind",
        "Name": "Radzen.DataBoundFormComponent<T>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DataBoundFormComponent",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.DataBoundFormComponent<T>"
        }
      },
      {
        "HashCode": -367686169,
        "Kind": "Components.Bind",
        "Name": "Radzen.DataBoundFormComponent<T>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.DataBoundFormComponent",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.DataBoundFormComponent<T>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1659468691,
        "Kind": "Components.Bind",
        "Name": "Radzen.DropDownBase<T>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DropDownBase",
            "Attributes": [
              {
                "Name": "@bind-SelectedItem",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedItem",
            "TypeName": "System.Action<System.Object>",
            "Documentation": "Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedItem"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedItem",
          "Components.Bind.ChangeAttribute": "SelectedItemChanged",
          "Common.TypeName": "Radzen.DropDownBase<T>"
        }
      },
      {
        "HashCode": -303891506,
        "Kind": "Components.Bind",
        "Name": "Radzen.DropDownBase<T>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "DropDownBase",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.DropDownBase<T>"
        }
      },
      {
        "HashCode": -2037825930,
        "Kind": "Components.Bind",
        "Name": "Radzen.DropDownBase<T>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.DropDownBase",
            "Attributes": [
              {
                "Name": "@bind-SelectedItem",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedItem",
            "TypeName": "System.Action<System.Object>",
            "Documentation": "Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedItem"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedItem",
          "Components.Bind.ChangeAttribute": "SelectedItemChanged",
          "Common.TypeName": "Radzen.DropDownBase<T>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 978306977,
        "Kind": "Components.Bind",
        "Name": "Radzen.DropDownBase<T>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.DropDownBase",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.DropDownBase<T>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1567337990,
        "Kind": "Components.Bind",
        "Name": "Radzen.FormComponent<T>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "FormComponent",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.FormComponent<T>"
        }
      },
      {
        "HashCode": -173733785,
        "Kind": "Components.Bind",
        "Name": "Radzen.FormComponent<T>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.FormComponent",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<T>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.FormComponent<T>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1991866488,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenAutoComplete",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenAutoComplete",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenAutoComplete"
        }
      },
      {
        "HashCode": 732718126,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenAutoComplete",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenAutoComplete",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenAutoComplete",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1993329422,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenBody",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenBody",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenBody"
        }
      },
      {
        "HashCode": -1453996222,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenBody",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenBody",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenBody",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -510325216,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenCheckBox<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenCheckBox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenCheckBox<TValue>"
        }
      },
      {
        "HashCode": -1605954290,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenCheckBox<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenCheckBox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenCheckBox<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -27151081,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenCheckBoxList<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenCheckBoxList",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<TValue>>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenCheckBoxList<TValue>"
        }
      },
      {
        "HashCode": -1209685177,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenCheckBoxList<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenCheckBoxList",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<TValue>>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenCheckBoxList<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1241647449,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenColorPicker",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenColorPicker",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenColorPicker"
        }
      },
      {
        "HashCode": -1931497644,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenColorPicker",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenColorPicker",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenColorPicker",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1196547491,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenDataGrid<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDataGrid",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IList<TItem>>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>"
        }
      },
      {
        "HashCode": -63686428,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenDataGrid<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Settings' property and a change event delegate to the 'SettingsChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDataGrid",
            "Attributes": [
              {
                "Name": "@bind-Settings",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Settings",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridSettings>",
            "Documentation": "Binds the provided expression to the 'Settings' property and a change event delegate to the 'SettingsChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Settings"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Settings",
          "Components.Bind.ChangeAttribute": "SettingsChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>"
        }
      },
      {
        "HashCode": 195926555,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenDataGrid<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDataGrid",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IList<TItem>>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1196906017,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenDataGrid<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Settings' property and a change event delegate to the 'SettingsChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDataGrid",
            "Attributes": [
              {
                "Name": "@bind-Settings",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Settings",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<Radzen.DataGridSettings>",
            "Documentation": "Binds the provided expression to the 'Settings' property and a change event delegate to the 'SettingsChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Settings"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Settings",
          "Components.Bind.ChangeAttribute": "SettingsChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenDataGrid<TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 2008784196,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenDatePicker<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDatePicker",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenDatePicker<TValue>"
        }
      },
      {
        "HashCode": 1560431342,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenDatePicker<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDatePicker",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenDatePicker<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1520276090,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenDropDown<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDropDown",
            "Attributes": [
              {
                "Name": "@bind-SelectedItem",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedItem",
            "TypeName": "System.Action<System.Object>",
            "Documentation": "Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedItem"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedItem",
          "Components.Bind.ChangeAttribute": "SelectedItemChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDown<TValue>"
        }
      },
      {
        "HashCode": -1571647917,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenDropDown<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDropDown",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDown<TValue>"
        }
      },
      {
        "HashCode": -1303029190,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenDropDown<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDropDown",
            "Attributes": [
              {
                "Name": "@bind-SelectedItem",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedItem",
            "TypeName": "System.Action<System.Object>",
            "Documentation": "Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedItem"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedItem",
          "Components.Bind.ChangeAttribute": "SelectedItemChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDown<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1409622445,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenDropDown<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDropDown",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDown<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 778089878,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDropDownDataGrid",
            "Attributes": [
              {
                "Name": "@bind-SelectedItem",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedItem",
            "TypeName": "System.Action<System.Object>",
            "Documentation": "Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedItem"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedItem",
          "Components.Bind.ChangeAttribute": "SelectedItemChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>"
        }
      },
      {
        "HashCode": -544299560,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenDropDownDataGrid",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>"
        }
      },
      {
        "HashCode": 1661281892,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDropDownDataGrid",
            "Attributes": [
              {
                "Name": "@bind-SelectedItem",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedItem",
            "TypeName": "System.Action<System.Object>",
            "Documentation": "Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedItem"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedItem",
          "Components.Bind.ChangeAttribute": "SelectedItemChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 304569358,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenDropDownDataGrid",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenDropDownDataGrid<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1642560606,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenFileInput<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'FileName' property and a change event delegate to the 'FileNameChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenFileInput",
            "Attributes": [
              {
                "Name": "@bind-FileName",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-FileName",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'FileName' property and a change event delegate to the 'FileNameChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "FileName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "FileName",
          "Components.Bind.ChangeAttribute": "FileNameChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenFileInput<TValue>"
        }
      },
      {
        "HashCode": -1912524515,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenFileInput<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'FileSize' property and a change event delegate to the 'FileSizeChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenFileInput",
            "Attributes": [
              {
                "Name": "@bind-FileSize",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-FileSize",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int64?>",
            "Documentation": "Binds the provided expression to the 'FileSize' property and a change event delegate to the 'FileSizeChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "FileSize"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "FileSize",
          "Components.Bind.ChangeAttribute": "FileSizeChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenFileInput<TValue>"
        }
      },
      {
        "HashCode": -583089769,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenFileInput<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenFileInput",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenFileInput<TValue>"
        }
      },
      {
        "HashCode": 239340641,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenFileInput<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'FileName' property and a change event delegate to the 'FileNameChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenFileInput",
            "Attributes": [
              {
                "Name": "@bind-FileName",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-FileName",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'FileName' property and a change event delegate to the 'FileNameChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "FileName"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "FileName",
          "Components.Bind.ChangeAttribute": "FileNameChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenFileInput<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -56807122,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenFileInput<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'FileSize' property and a change event delegate to the 'FileSizeChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenFileInput",
            "Attributes": [
              {
                "Name": "@bind-FileSize",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-FileSize",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int64?>",
            "Documentation": "Binds the provided expression to the 'FileSize' property and a change event delegate to the 'FileSizeChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "FileSize"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "FileSize",
          "Components.Bind.ChangeAttribute": "FileSizeChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenFileInput<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 693073520,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenFileInput<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenFileInput",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenFileInput<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1045012997,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenHtmlEditor",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenHtmlEditor",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditor"
        }
      },
      {
        "HashCode": 531546689,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenHtmlEditor",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenHtmlEditor",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenHtmlEditor",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 746106595,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenListBox<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenListBox",
            "Attributes": [
              {
                "Name": "@bind-SelectedItem",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedItem",
            "TypeName": "System.Action<System.Object>",
            "Documentation": "Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedItem"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedItem",
          "Components.Bind.ChangeAttribute": "SelectedItemChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenListBox<TValue>"
        }
      },
      {
        "HashCode": -161047853,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenListBox<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenListBox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenListBox<TValue>"
        }
      },
      {
        "HashCode": 131981089,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenListBox<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenListBox",
            "Attributes": [
              {
                "Name": "@bind-SelectedItem",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedItem",
            "TypeName": "System.Action<System.Object>",
            "Documentation": "Binds the provided expression to the 'SelectedItem' property and a change event delegate to the 'SelectedItemChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedItem"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedItem",
          "Components.Bind.ChangeAttribute": "SelectedItemChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenListBox<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1610402995,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenListBox<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenListBox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenListBox<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 812951233,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenMask",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenMask",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenMask"
        }
      },
      {
        "HashCode": -607447075,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenMask",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenMask",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenMask",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -265307596,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenNumeric<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenNumeric",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenNumeric<TValue>"
        }
      },
      {
        "HashCode": 771123349,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenNumeric<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenNumeric",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenNumeric<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1613302825,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenPager",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'PageSize' property and a change event delegate to the 'PageSizeChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenPager",
            "Attributes": [
              {
                "Name": "@bind-PageSize",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-PageSize",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'PageSize' property and a change event delegate to the 'PageSizeChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "PageSize"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "PageSize",
          "Components.Bind.ChangeAttribute": "PageSizeChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenPager"
        }
      },
      {
        "HashCode": 551967391,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenPager",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'PageSize' property and a change event delegate to the 'PageSizeChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenPager",
            "Attributes": [
              {
                "Name": "@bind-PageSize",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-PageSize",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'PageSize' property and a change event delegate to the 'PageSizeChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "PageSize"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "PageSize",
          "Components.Bind.ChangeAttribute": "PageSizeChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenPager",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -912257218,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenPanelMenuItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenPanelMenuItem",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenPanelMenuItem"
        }
      },
      {
        "HashCode": 1246788405,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenPanelMenuItem",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenPanelMenuItem",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenPanelMenuItem",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -2096392605,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenPassword",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenPassword",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenPassword"
        }
      },
      {
        "HashCode": 516695179,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenPassword",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenPassword",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenPassword",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1591071811,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenProgressBar",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenProgressBar",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "System.Action<System.Double>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenProgressBar"
        }
      },
      {
        "HashCode": -1052237607,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenProgressBar",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenProgressBar",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "System.Action<System.Double>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenProgressBar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1328853066,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenRadioButtonList<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenRadioButtonList",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenRadioButtonList<TValue>"
        }
      },
      {
        "HashCode": -1002526017,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenRadioButtonList<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenRadioButtonList",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenRadioButtonList<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1764996637,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenRating",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenRating",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenRating"
        }
      },
      {
        "HashCode": 58414371,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenRating",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenRating",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenRating",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1035509916,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenSelectBar<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSelectBar",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenSelectBar<TValue>"
        }
      },
      {
        "HashCode": 29439775,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenSelectBar<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSelectBar",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenSelectBar<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 974929872,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenSidebar",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSidebar",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenSidebar"
        }
      },
      {
        "HashCode": -1816748560,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenSidebar",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSidebar",
            "Attributes": [
              {
                "Name": "@bind-Expanded",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Expanded",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Expanded' property and a change event delegate to the 'ExpandedChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Expanded"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Expanded",
          "Components.Bind.ChangeAttribute": "ExpandedChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenSidebar",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1224735430,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenSlider<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSlider",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenSlider<TValue>"
        }
      },
      {
        "HashCode": 1682859634,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenSlider<TValue>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSlider",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<TValue>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenSlider<TValue>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 296028770,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenSteps",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSteps",
            "Attributes": [
              {
                "Name": "@bind-SelectedIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedIndex",
          "Components.Bind.ChangeAttribute": "SelectedIndexChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenSteps"
        }
      },
      {
        "HashCode": -730785994,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenSteps",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSteps",
            "Attributes": [
              {
                "Name": "@bind-SelectedIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedIndex",
          "Components.Bind.ChangeAttribute": "SelectedIndexChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenSteps",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1628624354,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenSwitch",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenSwitch",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenSwitch"
        }
      },
      {
        "HashCode": -2122862620,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenSwitch",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenSwitch",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Boolean>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenSwitch",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1938358472,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenTabs",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenTabs",
            "Attributes": [
              {
                "Name": "@bind-SelectedIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedIndex",
          "Components.Bind.ChangeAttribute": "SelectedIndexChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenTabs"
        }
      },
      {
        "HashCode": -197746786,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenTabs",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenTabs",
            "Attributes": [
              {
                "Name": "@bind-SelectedIndex",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-SelectedIndex",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Int32>",
            "Documentation": "Binds the provided expression to the 'SelectedIndex' property and a change event delegate to the 'SelectedIndexChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "SelectedIndex"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "SelectedIndex",
          "Components.Bind.ChangeAttribute": "SelectedIndexChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenTabs",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 482333347,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenTextArea",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenTextArea"
        }
      },
      {
        "HashCode": 445933162,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenTextArea",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenTextArea",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenTextArea",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -82833214,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenTextBox",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenTextBox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenTextBox"
        }
      },
      {
        "HashCode": -1352197770,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenTextBox",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenTextBox",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Components.Bind.ExpressionAttribute": "ValueExpression",
          "Common.TypeName": "Radzen.Blazor.RadzenTextBox",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -92412263,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenTree",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenTree",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenTree"
        }
      },
      {
        "HashCode": 89209198,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenTree",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'CheckedValues' property and a change event delegate to the 'CheckedValuesChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenTree",
            "Attributes": [
              {
                "Name": "@bind-CheckedValues",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-CheckedValues",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<System.Object>>",
            "Documentation": "Binds the provided expression to the 'CheckedValues' property and a change event delegate to the 'CheckedValuesChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "CheckedValues"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "CheckedValues",
          "Components.Bind.ChangeAttribute": "CheckedValuesChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenTree"
        }
      },
      {
        "HashCode": 1670763747,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenTree",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenTree",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Object>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenTree",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1594116626,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenTree",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'CheckedValues' property and a change event delegate to the 'CheckedValuesChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenTree",
            "Attributes": [
              {
                "Name": "@bind-CheckedValues",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-CheckedValues",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.Collections.Generic.IEnumerable<System.Object>>",
            "Documentation": "Binds the provided expression to the 'CheckedValues' property and a change event delegate to the 'CheckedValuesChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "CheckedValues"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "CheckedValues",
          "Components.Bind.ChangeAttribute": "CheckedValuesChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenTree",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1960174040,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenGrid<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "RadzenGrid",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "System.Action<System.Object>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenGrid<TItem>"
        }
      },
      {
        "HashCode": 1436653498,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.RadzenGrid<TItem>",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.RadzenGrid",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "System.Action<System.Object>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "Radzen.Blazor.RadzenGrid<TItem>",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -881050527,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.Rendering.EditorColorPicker",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditorColorPicker",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "Radzen.Blazor.Rendering.EditorColorPicker"
        }
      },
      {
        "HashCode": 586057513,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.Rendering.EditorColorPicker",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.EditorColorPicker",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "Radzen.Blazor.Rendering.EditorColorPicker",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": 1177328006,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.Rendering.EditorDropDown",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "EditorDropDown",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "Radzen.Blazor.Rendering.EditorDropDown"
        }
      },
      {
        "HashCode": 2031987607,
        "Kind": "Components.Bind",
        "Name": "Radzen.Blazor.Rendering.EditorDropDown",
        "AssemblyName": "Radzen.Blazor",
        "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "Radzen.Blazor.Rendering.EditorDropDown",
            "Attributes": [
              {
                "Name": "@bind-Value",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Bind",
            "Name": "@bind-Value",
            "TypeName": "Microsoft.AspNetCore.Components.EventCallback<System.String>",
            "Documentation": "Binds the provided expression to the 'Value' property and a change event delegate to the 'ValueChanged' property of the component.",
            "Metadata": {
              "Common.DirectiveAttribute": "True",
              "Common.PropertyName": "Value"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Bind",
          "Components.Bind.ValueAttribute": "Value",
          "Components.Bind.ChangeAttribute": "ValueChanged",
          "Common.TypeName": "Radzen.Blazor.Rendering.EditorDropDown",
          "Components.NameMatch": "Components.FullyQualifiedNameMatch"
        }
      },
      {
        "HashCode": -1759363875,
        "Kind": "Components.Ref",
        "Name": "Ref",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Populates the specified field or property with a reference to the element or component.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@ref",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Ref",
            "Name": "@ref",
            "TypeName": "System.Object",
            "Documentation": "Populates the specified field or property with a reference to the element or component.",
            "Metadata": {
              "Common.PropertyName": "Ref",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Ref",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Ref"
        }
      },
      {
        "HashCode": 2063404442,
        "Kind": "Components.Key",
        "Name": "Key",
        "AssemblyName": "Microsoft.AspNetCore.Components",
        "Documentation": "Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.",
        "CaseSensitive": true,
        "TagMatchingRules": [
          {
            "TagName": "*",
            "Attributes": [
              {
                "Name": "@key",
                "Metadata": {
                  "Common.DirectiveAttribute": "True"
                }
              }
            ]
          }
        ],
        "BoundAttributes": [
          {
            "Kind": "Components.Key",
            "Name": "@key",
            "TypeName": "System.Object",
            "Documentation": "Ensures that the component or element will be preserved across renders if (and only if) the supplied key value matches.",
            "Metadata": {
              "Common.PropertyName": "Key",
              "Common.DirectiveAttribute": "True"
            }
          }
        ],
        "Metadata": {
          "Runtime.Name": "Components.None",
          "Components.IsSpecialKind": "Components.Key",
          "Common.ClassifyAttributesOnly": "True",
          "Common.TypeName": "Microsoft.AspNetCore.Components.Key"
        }
      }
    ],
    "CSharpLanguageVersion": 1000
  },
  "RootNamespace": "SinDarElaVerwaltung.Client",
  "Documents": [
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\Kontakte.razor",
      "TargetPath": "Pages\\Kontakte.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Shared\\DialogLayout.razor",
      "TargetPath": "Shared\\DialogLayout.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\CopyOfMitarbeiterListe.razor",
      "TargetPath": "Pages\\CopyOfMitarbeiterListe.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\Benutzer.razor",
      "TargetPath": "Pages\\Benutzer.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Shared\\LoginLayout.razor",
      "TargetPath": "Shared\\LoginLayout.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\EinstellungenInfotexteBearbeiten.razor",
      "TargetPath": "Pages\\EinstellungenInfotexteBearbeiten.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Shared\\StandardLayout.razor",
      "TargetPath": "Shared\\StandardLayout.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\CopyOfMitarbeiter.razor",
      "TargetPath": "Pages\\CopyOfMitarbeiter.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\Einstellungen.razor",
      "TargetPath": "Pages\\Einstellungen.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\Kalender.razor",
      "TargetPath": "Pages\\Kalender.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\ZzAutomatischErzeugen.razor",
      "TargetPath": "Pages\\ZzAutomatischErzeugen.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Shared\\Main2Layout.razor",
      "TargetPath": "Shared\\Main2Layout.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Shared\\MainLayout.razor",
      "TargetPath": "Shared\\MainLayout.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\_Imports.razor",
      "TargetPath": "_Imports.razor",
      "FileKind": "componentImport"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\MitarbeiterListen.razor",
      "TargetPath": "Pages\\MitarbeiterListen.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\Kunden.razor",
      "TargetPath": "Pages\\Kunden.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\Dashboard.razor",
      "TargetPath": "Pages\\Dashboard.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\MeldungOk.razor",
      "TargetPath": "Pages\\MeldungOk.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\Benutzerprofil.razor",
      "TargetPath": "Pages\\Benutzerprofil.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\Abrechnung.razor",
      "TargetPath": "Pages\\Abrechnung.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\MitarbeiterSuchen.razor",
      "TargetPath": "Pages\\MitarbeiterSuchen.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\EinstellungenInfotexteNeu.razor",
      "TargetPath": "Pages\\EinstellungenInfotexteNeu.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\MitarbeiterNeu.razor",
      "TargetPath": "Pages\\MitarbeiterNeu.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\Management.razor",
      "TargetPath": "Pages\\Management.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\MeldungFortschritt.razor",
      "TargetPath": "Pages\\MeldungFortschritt.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\Abmeldung.razor",
      "TargetPath": "Pages\\Abmeldung.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\EinstellungenInfotexteEditor.razor",
      "TargetPath": "Pages\\EinstellungenInfotexteEditor.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\App.razor",
      "TargetPath": "App.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\MeldungLoeschen.razor",
      "TargetPath": "Pages\\MeldungLoeschen.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\MeldungJaNein.razor",
      "TargetPath": "Pages\\MeldungJaNein.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\Anmeldung.razor",
      "TargetPath": "Pages\\Anmeldung.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\Mitarbeiter.razor",
      "TargetPath": "Pages\\Mitarbeiter.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\AnmeldungLaden.razor",
      "TargetPath": "Pages\\AnmeldungLaden.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\CopyOfMitarbeiter1.razor",
      "TargetPath": "Pages\\CopyOfMitarbeiter1.razor",
      "FileKind": "component"
    },
    {
      "FilePath": "c:\\AA Painsi\\09 PITapp\\Radzen\\SinDarEla\\BlazorVerwaltung\\client\\Pages\\Auswertungen.razor",
      "TargetPath": "Pages\\Auswertungen.razor",
      "FileKind": "component"
    }
  ],
  "SerializationFormat": "0.2"
}